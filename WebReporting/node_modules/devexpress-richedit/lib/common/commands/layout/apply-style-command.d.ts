import { CharacterStyle } from '../../model/character/character-style';
import { ParagraphStyle } from '../../model/paragraph/paragraph-style';
import { SubDocument } from '../../model/sub-document';
import { FixedInterval } from '@devexpress/utils/lib/intervals/fixed';
import { CommandBase, CommandSimpleOptions } from '../command-base';
import { ApplyStyleCommandState } from '../command-states';
export declare class ApplyStyleCommand extends CommandBase<ApplyStyleCommandState> {
    getState(): ApplyStyleCommandState;
    private getStyleName;
    executeCore(state: ApplyStyleCommandState, options: CommandSimpleOptions<string>): boolean;
    applyCharacterStyle(interval: FixedInterval, style: CharacterStyle, isPresetStyle: boolean, subDocument: SubDocument): void;
    applyParagraphStyle(interval: FixedInterval, style: ParagraphStyle, isPresetStyle: boolean, subDocument: SubDocument): void;
    applyParagraphLinkedStyle(interval: FixedInterval, style: ParagraphStyle, isPresetStyle: boolean, subDocument: SubDocument): void;
    private createCharacterStyle;
    calculateAffectedParagraphCount(interval: FixedInterval, subDocument: SubDocument): number;
    isEnabled(): boolean;
    protected canModify(): boolean;
    protected getIntervalsForModifying(): FixedInterval[];
}
