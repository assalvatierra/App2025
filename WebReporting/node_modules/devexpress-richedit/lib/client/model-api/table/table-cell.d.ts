import { SubDocument } from '../../../common/model/sub-document';
import { IProcessor } from '../../../common/processor';
import { TablePosition } from '../../../common/model/tables/main-structures/table';
import { IntervalApi } from '../interval';
import { TableElementBase } from './table-element-base';
import { TableRowApi } from './table-row';
import { TableWidth } from './types';
import { TableContentHorizontalAlignmentApi, TableContentVerticalAlignmentApi } from './enums';
import { CharacterPropertiesApi, ICharacterProperties } from '../character-properties';
import { ITableCellBorders, TableCellBordersApi } from './table-borders';
import { IMargins, MarginsApi } from '../size';
export declare class TableCellApi extends TableElementBase {
    private _tablePosition;
    private _parentRow;
    constructor(processor: IProcessor, subDocument: SubDocument, tablePosition: TablePosition, parentRow?: TableRowApi);
    get index(): number;
    get interval(): IntervalApi;
    get parentRow(): TableRowApi;
    get width(): TableWidth;
    set width(value: TableWidth);
    get backgroundColor(): string;
    set backgroundColor(value: string);
    get contentHorizontalAlignment(): TableContentHorizontalAlignmentApi | null;
    set contentHorizontalAlignment(value: TableContentHorizontalAlignmentApi);
    get contentVerticalAlignment(): TableContentVerticalAlignmentApi;
    set contentVerticalAlignment(value: TableContentVerticalAlignmentApi);
    get characterProperties(): CharacterPropertiesApi;
    set characterProperties(value: ICharacterProperties);
    get borders(): TableCellBordersApi;
    set borders(value: ITableCellBorders);
    get margins(): MarginsApi;
    set margins(value: IMargins);
    split(columnCount: number, rowCount: number): void;
}
