@page "/jobmains/delete"
@using Microsoft.EntityFrameworkCore
@using Erp.Domain.Models
@inject IDbContextFactory<Erp2025.Data.Erp2025Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>JobMain</h2>
    <hr />
    @if (jobmain is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">JobDate</dt>
            <dd class="col-sm-10">@jobmain.JobDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@jobmain.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@jobmain.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedOn</dt>
            <dd class="col-sm-10">@jobmain.CreatedOn</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastEditBy</dt>
            <dd class="col-sm-10">@jobmain.LastEditBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastEditOn</dt>
            <dd class="col-sm-10">@jobmain.LastEditOn</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsArchived</dt>
            <dd class="col-sm-10">@jobmain.IsArchived</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsPrivate</dt>
            <dd class="col-sm-10">@jobmain.IsPrivate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@jobmain.IsActive</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ItemStatusId</dt>
            <dd class="col-sm-10">@jobmain.ItemStatusId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BusinessUnitId</dt>
            <dd class="col-sm-10">@jobmain.BusinessUnitId</dd>
        </dl>
        <EditForm method="post" Model="jobmain" OnValidSubmit="DeleteJobMain" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(jobmain is null)">Delete</button> |
            <a href="/jobmains">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private JobMain? jobmain;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        jobmain = await context.JobMain.FirstOrDefaultAsync(m => m.Id == Id);

        if (jobmain is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteJobMain()
    {
        using var context = DbFactory.CreateDbContext();
        context.JobMain.Remove(jobmain!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/jobmains");
    }
}
