import { ICloneable, ISupportCopyFrom } from "@devexpress/utils/lib/types";
import { NumberingFormat } from "../numbering-lists/list-level-properties";
import { DocumentModel } from "../document-model";
import { SubDocument } from "../sub-document";
export declare enum NotePosition {
    BottomOfPage = 0,
    BelowText = 1,
    EndOfDocument = 2,
    EndOfSection = 3
}
export declare enum NoteType {
    Separator = 0,
    ContinuationSeparator = 1,
    ContinuationNotice = 2,
    Normal = 3
}
export type NoteSeparatorTypes = NoteType.Separator | NoteType.ContinuationSeparator | NoteType.ContinuationNotice;
export declare enum NoteNumberingRestartType {
    Continuous = 0,
    NewPage = 1,
    NewSection = 2
}
export declare class NoteProperties implements ICloneable<NoteProperties>, ISupportCopyFrom<NoteProperties> {
    static createDefault(): NoteProperties;
    position: NotePosition;
    numberingFormat: NumberingFormat;
    numberingRestartType: NoteNumberingRestartType;
    startingNumber: number;
    columnCount: number;
    copyFrom(obj: NoteProperties): void;
    clone(): NoteProperties;
    equals(other: NoteProperties): boolean;
}
export declare class NoteSeparators {
    private model;
    separatorId: number;
    continuationSeparatorId: number;
    continuationNoticeId: number;
    constructor(model: DocumentModel);
    get separator(): SubDocument;
    get continuationSeparator(): SubDocument;
    get continuationNotice(): SubDocument;
    setSeparator(sudDocId: number, type: NoteSeparatorTypes): void;
    getSeparator(type: NoteSeparatorTypes): SubDocument | never;
    getSeparatos(): IterableIterator<SubDocument>;
}
