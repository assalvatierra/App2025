/**
* DevExpress Analytics (widgets\filtereditor\operators\operandParameterSurface.js)
* Version:  24.2.5
* Build date: Feb 17, 2025
* Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { OperandSurfaceBase } from './operandSurfaceBase';
export class OperandParameterSurface extends OperandSurfaceBase {
    constructor(operator, parent, fieldListProvider, path) {
        super(operator, parent, fieldListProvider, path);
        this.changeParameter = (item) => {
            this.model.parameterName = item.name;
            this.parameterName(item.name);
            this.helper.onChange();
        };
        this.operatorClass = 'criteria-operator-item-parameter dxd-filter-editor-parameter-back-color dxd-filter-editor-text-color';
        this.parameterName = ko.observable('');
        this.templateName = 'dx-filtereditor-parameter';
        this.specifics = parent.specifics;
        this.dataType = parent.dataType;
        this.parameterName(operator.parameterName);
        if (!this.parameterName() && this.items.length > 0) {
            this.changeParameter(this.items[0]);
        }
        [this.specifics, this.dataType].forEach((property) => {
            property && this.addDisposable(property.subscribe(() => {
                this.onTypeChanged();
            }));
        });
    }
    onTypeChanged() {
        if (this.items.filter(x => ko.unwrap(x.name) == this.parameterName()).length == 0)
            this.items.length > 0 ? this.changeParameter(this.items[0]) : this.changeParameter({ name: '' });
    }
    get items() {
        return this.getConvertableParameters(this.specifics(), ko.unwrap(this.dataType));
    }
    get displayType() {
        return null;
    }
}
