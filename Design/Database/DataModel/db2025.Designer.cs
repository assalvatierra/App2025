//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 11/24/2024 1:24:17 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntTypeAccntCategory", "AccntTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntTypes), "AccntCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntMainAccntLedger", "AccntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntMains), "AccntLedgers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntLedgers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntCategoryAccntMain", "AccntCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntCategories), "AccntMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntTypeAccntMain", "AccntTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntTypes), "AccntMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntTrxHdrs), "AccntTrxDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntTrxDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntLedgerAccntTrxDtl", "AccntLedgers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntLedgers), "AccntTrxDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntTrxDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AccntTrxTypes), "AccntTrxHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AccntTrxHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AsCostCenterAsExpense", "AsCostCenters", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AsCostCenters), "AsExpenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AsExpenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AsExpCategoryAsExpense", "AsExpCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AsExpCategories), "AsExpenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AsExpenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AsExpBillerAsExpense", "AsExpBillers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AsExpBillers), "AsExpenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AsExpenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AspNetRoles), "AspNetRoleClaims", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AspNetRoleClaims), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AspNetUsers), "AspNetUserClaims", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AspNetUserClaims), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AspNetUsers), "AspNetUserLogins", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AspNetUserLogins), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AsCostCenterAsSales", "AsCostCenters", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AsCostCenters), "AsSales", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AsSales), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AsIncCategoryAsSales", "AsIncCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AsIncCategories), "AsSales", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AsSales), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_AsIncClientAsSales", "AsIncClients", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.AsIncClients), "AsSales", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AsSales), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EmailBlasterLogs), "BlasterLogs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.BlasterLogs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EmailBlasterTemplates), "BlasterLogs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.BlasterLogs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CityBranch", "Cities", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Cities), "Branches", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Branches), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CityCarDestination", "Cities", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Cities), "CarDestinations", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarDestinations), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarImage", "CarUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarUnits), "CarImages", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarImages), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_RateGroupCarRateGroup", "RateGroups", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.RateGroups), "CarRateGroups", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarRateGroups), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarRatePackageCarRateGroup", "CarRatePackages", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarRatePackages), "CarRateGroups", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarRateGroups), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarRate", "CarUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarUnits), "CarRates", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarRates), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarRatePackageCarRateUnitPackage", "CarRatePackages", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarRatePackages), "CarRateUnitPackages", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarRateUnitPackages), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarRateUnitPackage", "CarUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarUnits), "CarRateUnitPackages", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarRateUnitPackages), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarReservation", "CarUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarUnits), "CarReservations", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarReservations), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarRateUnitPackages), "CarResPackages", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarResPackages), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarReservationCarResPackage", "CarReservations", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarReservations), "CarResPackages", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarResPackages), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarUnitMeta", "CarUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarUnits), "CarUnitMetas", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarUnitMetas), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarCategoryCarUnit", "CarCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarCategories), "CarUnits", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarUnits), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarViewPage", "CarUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CarUnits), "CarViewPages", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CarViewPages), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CashExpenseJobMain", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "CashExpenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CashExpenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCheckerActivity", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "CheckerActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CheckerActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CheckerActivityTypes), "CheckerActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CheckerActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CoopMemberCoopMemberItem", "CoopMembers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CoopMembers), "CoopMemberItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CoopMemberItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemCoopMemberItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "CoopMemberItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CoopMemberItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustCat", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "CustCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustCategoryCustCat", "CustCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustCategories), "CustCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActStatusCustEntActivity", "CustEntActStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntActStatus), "CustEntActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntActActionStatus), "CustEntActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntActActionCodes), "CustEntActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntActivity", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntActPostSaleStatus), "CustEntActPostSales", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntActPostSales), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntAddress", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntAddresses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntAddresses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntAssign", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntAssigns", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntAssigns), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntCat", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustCategoryCustEntCat", "CustCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustCategories), "CustEntCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntClauses", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntClauses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntClauses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntDocumentsSupDocument", "SupDocuments", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupDocuments), "CustEntDocuments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntDocuments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntDocuments", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntDocuments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntDocuments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntity", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "CustEntities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustEntity", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "CustEntities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustAssocTypeCustEntity", "CustAssocTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustAssocTypes), "CustEntities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustEntities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustFilesCustFileRef", "CustFiles", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustFiles), "CustFileRefs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustFileRefs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustFiles", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "CustFiles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustFiles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustNotifCustNotifActivity", "CustNotifs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustNotifs), "CustNotifActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustNotifActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustNotifRecipient", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "CustNotifRecipients", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustNotifRecipients), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustNotifCustNotifRecipient", "CustNotifs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustNotifs), "CustNotifRecipients", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustNotifRecipients), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_NotifRecipientCustNotifRecipient", "NotifRecipients", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.NotifRecipients), "CustNotifRecipients", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustNotifRecipients), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeadCatCodes), "CustSalesCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustSalesCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustSalesCategory", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "CustSalesCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustSalesCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustSocialAcc", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "CustSocialAccs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.CustSocialAccs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CityDestination", "Cities", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Cities), "Destinations", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Destinations), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntAddress", "EntBusinesses", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EntBusinesses), "EntAddresses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntAddresses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntAddress", "SysSetupTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysSetupTypes), "EntAddresses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntAddresses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntContact", "EntBusinesses", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EntBusinesses), "EntContacts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntContacts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntContact", "SysSetupTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysSetupTypes), "EntContacts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntContacts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysServiceEntServices", "SysServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysServices), "EntServices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntServices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntServices", "EntBusinesses", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EntBusinesses), "EntServices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntServices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EntBusinessEntSetting", "EntBusinesses", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EntBusinesses), "EntSettings", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntSettings), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntSetting", "SysSetupTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysSetupTypes), "EntSettings", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntSettings), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntSupportFile", "EntBusinesses", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.EntBusinesses), "EntSupportFiles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntSupportFiles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysFileTypeEntSupportFile", "SysSetupTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysSetupTypes), "EntSupportFiles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.EntSupportFiles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ExpensesCategoryExpenses", "ExpensesCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.ExpensesCategories), "Expenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Expenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrDtrStatusHrDtr", "HrDtrStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrDtrStatus), "HrDtrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrDtrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrDtr", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrDtrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrDtrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrSalaryHrDtr", "HrSalaries", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrSalaries), "HrDtrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrDtrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPayrollHrDtr", "HrPayrolls", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPayrolls), "HrDtrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrDtrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPayroll", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrPayrolls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPayrolls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerDoc", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrPerDocs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerDocs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerPosition", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrPerPositions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerPositions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPositionHrPerPosition", "HrPositions", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPositions), "HrPerPositions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerPositions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrSkillHrPerSkill", "HrSkills", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrSkills), "HrPerSkills", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerSkills), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrProficiencyHrPerSkill", "HrProficiencies", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrProficiencies), "HrPerSkills", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerSkills), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerSkill", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrPerSkills", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerSkills), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelStatusHrPersonel", "HrPersonelStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonelStatus), "HrPersonels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPersonels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrTrainingHrPerTraining", "HrTrainings", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrTrainings), "HrPerTrainings", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerTrainings), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerTraining", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrPerTrainings", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrPerTrainings), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrProfile", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrProfiles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrProfiles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrSalary", "HrPersonels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrPersonels), "HrSalaries", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrSalaries), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrTrainingHrTrainingSkill", "HrTrainings", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrTrainings), "HrTrainingSkills", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrTrainingSkills), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrSkillHrTrainingSkill", "HrSkills", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrSkills), "HrTrainingSkills", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrTrainingSkills), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_HrProficiencyHrTrainingSkill", "HrProficiencies", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.HrProficiencies), "HrTrainingSkills", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.HrTrainingSkills), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvAdjHdr", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvAdjHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvAdjHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvAdjHdrInvAdjItem", "InvAdjHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvAdjHdrs), "InvAdjItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvAdjItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvAdjItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvAdjItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvAdjItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvAdjItem", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvAdjItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvAdjItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvCarGateControl", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvCarGateControls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCarGateControls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvCarRecordTypes), "InvCarRecords", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCarRecords), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvCarRecord", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvCarRecords", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCarRecords), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvCatCustomSpec", "InvCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvCategories), "InvCatCustomSpecs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCatCustomSpecs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvCustomSpecs), "InvCatCustomSpecs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCatCustomSpecs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvCategorySpecDef", "InvCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvCategories), "InvCategorySpecDefs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCategorySpecDefs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItemSysDefinedSpecs), "InvCategorySpecDefs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCategorySpecDefs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvCustomSpecTypes), "InvCustomSpecs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvCustomSpecs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemCatInvItemCategory", "InvItemCats", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItemCats), "InvItemCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemCategory", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvItemCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemClass", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvItemClasses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemClasses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvClassificationInvItemClass", "InvClassifications", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvClassifications), "InvItemClasses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemClasses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemCustomSpec", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvItemCustomSpecs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemCustomSpecs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvCustomSpecs), "InvItemCustomSpecs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemCustomSpecs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemMaster", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvItemMaster", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemBrandInvItemMaster", "InvItemBrands", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItemBrands), "InvItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemOriginInvItemMaster", "InvItemOrigins", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItemOrigins), "InvItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreAreaInvItemMaster", "InvStoreAreas", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStoreAreas), "InvItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvItem", "InvUoms", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTypeInvItem", "InvTypes", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.InvTypes), "InvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvItem", "InvCategories", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.InvCategories), "InvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelSizeInvItemSpec_Steel", "SteelSizes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelSizes), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemSpec_Steel", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelMainCats), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelSubCats), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelBrandInvItemSpec_Steel", "SteelBrands", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelBrands), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelMaterials), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelOriginInvItemSpec_Steel", "SteelOrigins", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelOrigins), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SteelMaterialGrades), "InvItemSpec_Steel", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvItemSpec_Steel), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrInvPoApproval", "InvPoHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvPoHdrs), "InvPoApprovals", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoApprovals), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvPoHdr", "InvSuppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvSuppliers), "InvPoHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvPoHdr", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvPoHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvPoHdrStatus), "InvPoHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrInvPoItem", "InvPoHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvPoHdrs), "InvPoItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvPoItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvPoItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvPoItem", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvPoItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvPoItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvRecHdr", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvRecHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRecHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvRecHdr", "InvSuppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvSuppliers), "InvRecHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRecHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvRecItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvRecItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRecItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvRecHdrInvRecItem", "InvRecHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvRecHdrs), "InvRecItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRecItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvRecItem", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvRecItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRecItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvRequestHdr", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvRequestHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRequestHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvRequestItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvRequestItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRequestItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvRequestHdrInvRequestItem", "InvRequestHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvRequestHdrs), "InvRequestItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRequestItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvRequestItem", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvRequestItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRequestItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvRecItemInvRequestItem", "InvRecItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvRecItems), "InvRequestItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvRequestItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvStoreArea", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvStoreAreas", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvStoreAreas), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvStoreUser", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvStoreUsers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvStoreUsers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvSupplierItem", "InvSuppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvSuppliers), "InvSupplierItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvSupplierItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvSupplierItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvSupplierItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvSupplierItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvTrxHdrs), "InvTrxApprovals", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxApprovals), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvTrxHdrs), "InvTrxDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvTrxDtl", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvTrxDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvTrxDtl", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvTrxDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvTrxDtlOperators), "InvTrxDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvTrxDtls), "InvTrxDtlxItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxDtlxItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItemMasters), "InvTrxDtlxItemMasters", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxDtlxItemMasters), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvTrxHdr", "InvStores", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvStores), "InvTrxHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxTypeInvTrxHdr", "InvTrxTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvTrxTypes), "InvTrxHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvTrxHdrStatus), "InvTrxHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvTrxHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomConversionInvUomConvItem", "InvUomConversions", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUomConversions), "InvUomConvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvUomConvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvClassificationInvUomConvItem", "InvClassifications", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.InvClassifications), "InvUomConvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvUomConvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvUomConvItem", "InvItems", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.InvItems), "InvUomConvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvUomConvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvWarningLevel", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "InvWarningLevels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvWarningLevels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvWarningTypeInvWarningLevel", "InvWarningTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvWarningTypes), "InvWarningLevels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvWarningLevels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvWarningLevel", "InvUoms", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvUoms), "InvWarningLevels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.InvWarningLevels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobAction", "JobServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobServices), "JobActions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobActions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SrvActionItemJobAction", "SrvActionItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SrvActionItems), "JobActions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobActions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobEntMainJobMain", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobEntMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobEntMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobEntMainCustEntMain", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "JobEntMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobEntMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ExpensesJobExpenses", "Expenses", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Expenses), "JobExpenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobExpenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobExpenses", "JobServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobServices), "JobExpenses", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobExpenses), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobItinerary", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobItineraries", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobItineraries), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_DestinationJobItinerary", "Destinations", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Destinations), "JobItineraries", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobItineraries), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerJobMain", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "JobMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_BranchJobMain", "Branches", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Branches), "JobMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobStatusJobMain", "JobStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobStatus), "JobMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobThruJobMain", "JobThrus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobThrus), "JobMains", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobMains), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobNote", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobNotes", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobNotes), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPayment", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobPayments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobPayments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_BankJobPayment", "Banks", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Banks), "JobPayments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobPayments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPickup", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobPickups", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobPickups), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPost", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobPosts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobPosts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobServiceItem", "JobServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobServices), "JobServiceItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServiceItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemJobServiceItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "JobServiceItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServiceItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobServicePickup", "JobServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobServices), "JobServicePickups", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServicePickups), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobSupplier", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobServices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierJobSupplier", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "JobServices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ServicesJobServices", "Services", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Services), "JobServices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierItemJobServices", "SupplierItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierItems), "JobServices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobServices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobType", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobTypes", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobTypes), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleJobVehicle", "Vehicles", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Vehicles), "JobVehicles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobVehicles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobVehicle", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "JobVehicles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.JobVehicles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_PickupInstructionsDriverInstructions", "DriverInstructions", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.DriverInstructions), "PickupInstructions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.PickupInstructions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesPickupInstructions", "JobServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobServices), "PickupInstructions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.PickupInstructions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerPortalCustomer", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "PortalCustomers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.PortalCustomers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductCondition", "Products", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Products), "ProductConditions", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.ProductConditions), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductImages", "Products", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Products), "ProductImages1", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.ProductImages1), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductPrice", "Products", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Products), "ProductPrices", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.ProductPrices), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ProductCategoryProductProdCat", "ProductCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.ProductCategories), "ProductProdCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.ProductProdCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductProdCat", "Products", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Products), "ProductProdCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.ProductProdCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_RptCategoryRptReportCat", "RptCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.RptCategories), "RptReportCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RptReportCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportCat", "Reports", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Reports), "RptReportCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RptReportCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_RptAccessTypeRptReportRoles", "RptAccessTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.RptAccessTypes), "RptReportRoles1", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RptReportRoles1), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportRoles", "Reports", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Reports), "RptReportRoles1", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RptReportRoles1), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_RptAccessTypeRptReportUser", "RptAccessTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.RptAccessTypes), "RptReportUsers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RptReportUsers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportUser", "Reports", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Reports), "RptReportUsers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RptReportUsers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_OnlineReservationRsvPayment", "OnlineReservations", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.OnlineReservations), "RsvPayments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.RsvPayments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesActCodeSalesActivity", "SalesActCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesActCodes), "SalesActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesActivity", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesActStatusSalesActivity", "SalesActStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesActStatus), "SalesActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeadCatCodes), "SalesLeadCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadCategory", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesLeadCategories", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadCategories), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadCompany", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesLeadCompanies", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadCompanies), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainSalesLeadCompany", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "SalesLeadCompanies", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadCompanies), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadItems", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesLeadItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSalesLeadItems", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "SalesLeadItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadLink", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesLeadLinks", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadLinks), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobMainSalesLeadLink", "JobMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobMains), "SalesLeadLinks", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadLinks), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeadItems), "SalesLeadQuotedItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadQuotedItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierItemRates), "SalesLeadQuotedItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadQuotedItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerSalesLead", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "SalesLeads", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeads), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSupActivitySalesLead", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesLeadSupActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadSupActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierActivities), "SalesLeadSupActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesLeadSupActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesProcStatusCodes), "SalesProcStatus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesProcStatus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesProcStatus", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesProcStatus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesProcStatus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesStatusCodeSalesStatus", "SalesStatusCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesStatusCodes), "SalesStatus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesStatus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesStatus", "SalesLeads", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesLeads), "SalesStatus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesStatus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SalesStatusStatusSalesStatus", "SalesStatusStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SalesStatusStatus), "SalesStatus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SalesStatus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmFile", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmFiles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmFiles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmCategorySmProdAds", "SmCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmCategories), "SmProdAds", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdAds), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdAds", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmProdAds", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdAds), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmCategorySmProdCat", "SmCategories", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmCategories), "SmProdCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdCat", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmProdCats", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdCats), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdDesc", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmProdDescs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdDescs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdInfo", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmProdInfoes", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdInfoes), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmSupplierSmProdSupplier", "SmSuppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmSuppliers), "SmProdSuppliers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdSuppliers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdSupplier", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmProdSuppliers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProdSuppliers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProdStatusSmProduct", "SmProdStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProdStatus), "SmProducts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProducts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmBranchSmProduct", "SmBranches", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmBranches), "SmProducts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmProducts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmRate", "SmProducts", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmProducts), "SmRates", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmRates), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmRateSmRateUoM", "SmRateUoMs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmRateUoMs), "SmRates", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmRates), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SmSupplierSmSupplierInfo", "SmSuppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SmSuppliers), "SmSupplierInfoes", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SmSupplierInfoes), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_ServicesSrvActionItem", "Services", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Services), "SrvActionItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SrvActionItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SrvActionCodeSrvActionItem", "SrvActionCodes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SrvActionCodes), "SrvActionItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SrvActionItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierActivity", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "SupplierActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierActStatusSupplierActivity", "SupplierActStatus", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.SupplierActStatus), "SupplierActivities", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierActivities), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierContactStatusSupplierContact", "SupplierContactStatus", RelationshipMultiplicity.ZeroOrOne, typeof(DB_A0A0AE_ClientModel.SupplierContactStatus), "SupplierContacts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierContacts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierContact", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "SupplierContacts", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierContacts), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierDocument", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "SupplierDocuments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierDocuments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupDocumentSupplierDocument", "SupDocuments", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupDocuments), "SupplierDocuments", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierDocuments), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierInvItem", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "SupplierInvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierInvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSupplierInvItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "SupplierInvItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierInvItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierInvItemSupplierItemRate", "SupplierInvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierInvItems), "SupplierItemRates", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierItemRates), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierUnitSupplierItemRate", "SupplierUnits", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierUnits), "SupplierItemRates", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierItemRates), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierItem", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "SupplierItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierPoHdrs), "SupplierPoDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierPoDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesSupplierPoDtl", "JobServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.JobServices), "SupplierPoDtls", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierPoDtls), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierPoHdr", "Suppliers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Suppliers), "SupplierPoHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierPoHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierPoStatus), "SupplierPoHdrs", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierPoHdrs), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierPoDtls), "SupplierPoItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierPoItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSupplierPoItem", "InvItems", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.InvItems), "SupplierPoItems", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SupplierPoItems), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CitySupplier", "Cities", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Cities), "Suppliers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Suppliers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SupplierTypeSupplier", "SupplierTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SupplierTypes), "Suppliers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Suppliers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysRoleAccess", "SysMenus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysMenus), "SysAccessRoles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SysAccessRoles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysUserAccess", "SysMenus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysMenus), "SysAccessUsers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SysAccessUsers), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysServiceSysServiceMenu", "SysServices", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysServices), "SysServiceMenus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SysServiceMenus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysServiceMenu", "SysMenus", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.SysMenus), "SysServiceMenus", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.SysServiceMenus), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleBrandVehicleMake", "VehicleBrands", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.VehicleBrands), "VehicleModels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.VehicleModels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleTypeVehicleMake", "VehicleTypes", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.VehicleTypes), "VehicleModels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.VehicleModels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleTransmissionVehicleMake", "VehicleTransmissions", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.VehicleTransmissions), "VehicleModels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.VehicleModels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleFuelVehicleMake", "VehicleFuels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.VehicleFuels), "VehicleModels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.VehicleModels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleDriveVehicleModel", "VehicleDrives", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.VehicleDrives), "VehicleModels", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.VehicleModels), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustomerVehicle", "Customers", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.Customers), "Vehicles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Vehicles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainVehicle", "CustEntMains", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.CustEntMains), "Vehicles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Vehicles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "FK_VehicleModelVehicle", "VehicleModels", RelationshipMultiplicity.One, typeof(DB_A0A0AE_ClientModel.VehicleModels), "Vehicles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.Vehicles), true)]
[assembly: EdmRelationshipAttribute("DB_A0A0AE_ClientModel", "AspNetRoles_AspNetUsers", "AspNetRoles", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AspNetRoles), "AspNetUsers", RelationshipMultiplicity.Many, typeof(DB_A0A0AE_ClientModel.AspNetUsers))]

#endregion

namespace DB_A0A0AE_ClientModel
{

    #region DB_A0A0AE_ClientEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DB_A0A0AE_ClientEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new DB_A0A0AE_ClientEntities object.
        /// </summary>
        public DB_A0A0AE_ClientEntities() :
                base(@"metadata=db2025.csdl|db2025.ssdl|db2025.msl;provider=System.Data.SqlClient;provider connection string=""Data Source=SQL5098.site4now.net;Initial Catalog=DB_A0A0AE_client;Integrated Security=False;Persist Security Info=True;User ID=DB_A0A0AE_client_admin;Password=Client123!""", "DB_A0A0AE_ClientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new DB_A0A0AE_ClientEntities object using the connection string found in the 'DB_A0A0AE_ClientEntities' section of the application configuration file.
        /// </summary>
        public DB_A0A0AE_ClientEntities(string connectionString) :
                base(connectionString, "DB_A0A0AE_ClientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new DB_A0A0AE_ClientEntities object.
        /// </summary>
        public DB_A0A0AE_ClientEntities(EntityConnection connection) : base(connection, "DB_A0A0AE_ClientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntCategories> AccntCategories
        {
            get
            {
                if ((_AccntCategories == null))
                {
                    _AccntCategories = base.CreateObjectSet<AccntCategories>("AccntCategories");
                }
                return _AccntCategories;
            }
        }
        private ObjectSet<AccntCategories> _AccntCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntLedgers> AccntLedgers
        {
            get
            {
                if ((_AccntLedgers == null))
                {
                    _AccntLedgers = base.CreateObjectSet<AccntLedgers>("AccntLedgers");
                }
                return _AccntLedgers;
            }
        }
        private ObjectSet<AccntLedgers> _AccntLedgers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntMains> AccntMains
        {
            get
            {
                if ((_AccntMains == null))
                {
                    _AccntMains = base.CreateObjectSet<AccntMains>("AccntMains");
                }
                return _AccntMains;
            }
        }
        private ObjectSet<AccntMains> _AccntMains;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntTrxDtls> AccntTrxDtls
        {
            get
            {
                if ((_AccntTrxDtls == null))
                {
                    _AccntTrxDtls = base.CreateObjectSet<AccntTrxDtls>("AccntTrxDtls");
                }
                return _AccntTrxDtls;
            }
        }
        private ObjectSet<AccntTrxDtls> _AccntTrxDtls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntTrxHdrs> AccntTrxHdrs
        {
            get
            {
                if ((_AccntTrxHdrs == null))
                {
                    _AccntTrxHdrs = base.CreateObjectSet<AccntTrxHdrs>("AccntTrxHdrs");
                }
                return _AccntTrxHdrs;
            }
        }
        private ObjectSet<AccntTrxHdrs> _AccntTrxHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntTrxHists> AccntTrxHists
        {
            get
            {
                if ((_AccntTrxHists == null))
                {
                    _AccntTrxHists = base.CreateObjectSet<AccntTrxHists>("AccntTrxHists");
                }
                return _AccntTrxHists;
            }
        }
        private ObjectSet<AccntTrxHists> _AccntTrxHists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntTrxTypes> AccntTrxTypes
        {
            get
            {
                if ((_AccntTrxTypes == null))
                {
                    _AccntTrxTypes = base.CreateObjectSet<AccntTrxTypes>("AccntTrxTypes");
                }
                return _AccntTrxTypes;
            }
        }
        private ObjectSet<AccntTrxTypes> _AccntTrxTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccntTypes> AccntTypes
        {
            get
            {
                if ((_AccntTypes == null))
                {
                    _AccntTypes = base.CreateObjectSet<AccntTypes>("AccntTypes");
                }
                return _AccntTypes;
            }
        }
        private ObjectSet<AccntTypes> _AccntTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdminEmails> AdminEmails
        {
            get
            {
                if ((_AdminEmails == null))
                {
                    _AdminEmails = base.CreateObjectSet<AdminEmails>("AdminEmails");
                }
                return _AdminEmails;
            }
        }
        private ObjectSet<AdminEmails> _AdminEmails;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsCostCenters> AsCostCenters
        {
            get
            {
                if ((_AsCostCenters == null))
                {
                    _AsCostCenters = base.CreateObjectSet<AsCostCenters>("AsCostCenters");
                }
                return _AsCostCenters;
            }
        }
        private ObjectSet<AsCostCenters> _AsCostCenters;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsExpBillers> AsExpBillers
        {
            get
            {
                if ((_AsExpBillers == null))
                {
                    _AsExpBillers = base.CreateObjectSet<AsExpBillers>("AsExpBillers");
                }
                return _AsExpBillers;
            }
        }
        private ObjectSet<AsExpBillers> _AsExpBillers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsExpCategories> AsExpCategories
        {
            get
            {
                if ((_AsExpCategories == null))
                {
                    _AsExpCategories = base.CreateObjectSet<AsExpCategories>("AsExpCategories");
                }
                return _AsExpCategories;
            }
        }
        private ObjectSet<AsExpCategories> _AsExpCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsExpenses> AsExpenses
        {
            get
            {
                if ((_AsExpenses == null))
                {
                    _AsExpenses = base.CreateObjectSet<AsExpenses>("AsExpenses");
                }
                return _AsExpenses;
            }
        }
        private ObjectSet<AsExpenses> _AsExpenses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsIncCategories> AsIncCategories
        {
            get
            {
                if ((_AsIncCategories == null))
                {
                    _AsIncCategories = base.CreateObjectSet<AsIncCategories>("AsIncCategories");
                }
                return _AsIncCategories;
            }
        }
        private ObjectSet<AsIncCategories> _AsIncCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsIncClients> AsIncClients
        {
            get
            {
                if ((_AsIncClients == null))
                {
                    _AsIncClients = base.CreateObjectSet<AsIncClients>("AsIncClients");
                }
                return _AsIncClients;
            }
        }
        private ObjectSet<AsIncClients> _AsIncClients;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetRoleClaims> AspNetRoleClaims
        {
            get
            {
                if ((_AspNetRoleClaims == null))
                {
                    _AspNetRoleClaims = base.CreateObjectSet<AspNetRoleClaims>("AspNetRoleClaims");
                }
                return _AspNetRoleClaims;
            }
        }
        private ObjectSet<AspNetRoleClaims> _AspNetRoleClaims;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetRoles> AspNetRoles
        {
            get
            {
                if ((_AspNetRoles == null))
                {
                    _AspNetRoles = base.CreateObjectSet<AspNetRoles>("AspNetRoles");
                }
                return _AspNetRoles;
            }
        }
        private ObjectSet<AspNetRoles> _AspNetRoles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserClaims> AspNetUserClaims
        {
            get
            {
                if ((_AspNetUserClaims == null))
                {
                    _AspNetUserClaims = base.CreateObjectSet<AspNetUserClaims>("AspNetUserClaims");
                }
                return _AspNetUserClaims;
            }
        }
        private ObjectSet<AspNetUserClaims> _AspNetUserClaims;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserLogins> AspNetUserLogins
        {
            get
            {
                if ((_AspNetUserLogins == null))
                {
                    _AspNetUserLogins = base.CreateObjectSet<AspNetUserLogins>("AspNetUserLogins");
                }
                return _AspNetUserLogins;
            }
        }
        private ObjectSet<AspNetUserLogins> _AspNetUserLogins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUsers> AspNetUsers
        {
            get
            {
                if ((_AspNetUsers == null))
                {
                    _AspNetUsers = base.CreateObjectSet<AspNetUsers>("AspNetUsers");
                }
                return _AspNetUsers;
            }
        }
        private ObjectSet<AspNetUsers> _AspNetUsers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsSales> AsSales
        {
            get
            {
                if ((_AsSales == null))
                {
                    _AsSales = base.CreateObjectSet<AsSales>("AsSales");
                }
                return _AsSales;
            }
        }
        private ObjectSet<AsSales> _AsSales;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Banks> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Banks>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Banks> _Banks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlasterLogs> BlasterLogs
        {
            get
            {
                if ((_BlasterLogs == null))
                {
                    _BlasterLogs = base.CreateObjectSet<BlasterLogs>("BlasterLogs");
                }
                return _BlasterLogs;
            }
        }
        private ObjectSet<BlasterLogs> _BlasterLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Branches> Branches
        {
            get
            {
                if ((_Branches == null))
                {
                    _Branches = base.CreateObjectSet<Branches>("Branches");
                }
                return _Branches;
            }
        }
        private ObjectSet<Branches> _Branches;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarCategories> CarCategories
        {
            get
            {
                if ((_CarCategories == null))
                {
                    _CarCategories = base.CreateObjectSet<CarCategories>("CarCategories");
                }
                return _CarCategories;
            }
        }
        private ObjectSet<CarCategories> _CarCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarDestinations> CarDestinations
        {
            get
            {
                if ((_CarDestinations == null))
                {
                    _CarDestinations = base.CreateObjectSet<CarDestinations>("CarDestinations");
                }
                return _CarDestinations;
            }
        }
        private ObjectSet<CarDestinations> _CarDestinations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarImages> CarImages
        {
            get
            {
                if ((_CarImages == null))
                {
                    _CarImages = base.CreateObjectSet<CarImages>("CarImages");
                }
                return _CarImages;
            }
        }
        private ObjectSet<CarImages> _CarImages;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarRateGroups> CarRateGroups
        {
            get
            {
                if ((_CarRateGroups == null))
                {
                    _CarRateGroups = base.CreateObjectSet<CarRateGroups>("CarRateGroups");
                }
                return _CarRateGroups;
            }
        }
        private ObjectSet<CarRateGroups> _CarRateGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarRatePackages> CarRatePackages
        {
            get
            {
                if ((_CarRatePackages == null))
                {
                    _CarRatePackages = base.CreateObjectSet<CarRatePackages>("CarRatePackages");
                }
                return _CarRatePackages;
            }
        }
        private ObjectSet<CarRatePackages> _CarRatePackages;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarRates> CarRates
        {
            get
            {
                if ((_CarRates == null))
                {
                    _CarRates = base.CreateObjectSet<CarRates>("CarRates");
                }
                return _CarRates;
            }
        }
        private ObjectSet<CarRates> _CarRates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarRateUnitPackages> CarRateUnitPackages
        {
            get
            {
                if ((_CarRateUnitPackages == null))
                {
                    _CarRateUnitPackages = base.CreateObjectSet<CarRateUnitPackages>("CarRateUnitPackages");
                }
                return _CarRateUnitPackages;
            }
        }
        private ObjectSet<CarRateUnitPackages> _CarRateUnitPackages;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarReservations> CarReservations
        {
            get
            {
                if ((_CarReservations == null))
                {
                    _CarReservations = base.CreateObjectSet<CarReservations>("CarReservations");
                }
                return _CarReservations;
            }
        }
        private ObjectSet<CarReservations> _CarReservations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarResPackages> CarResPackages
        {
            get
            {
                if ((_CarResPackages == null))
                {
                    _CarResPackages = base.CreateObjectSet<CarResPackages>("CarResPackages");
                }
                return _CarResPackages;
            }
        }
        private ObjectSet<CarResPackages> _CarResPackages;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarUnitMetas> CarUnitMetas
        {
            get
            {
                if ((_CarUnitMetas == null))
                {
                    _CarUnitMetas = base.CreateObjectSet<CarUnitMetas>("CarUnitMetas");
                }
                return _CarUnitMetas;
            }
        }
        private ObjectSet<CarUnitMetas> _CarUnitMetas;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarUnits> CarUnits
        {
            get
            {
                if ((_CarUnits == null))
                {
                    _CarUnits = base.CreateObjectSet<CarUnits>("CarUnits");
                }
                return _CarUnits;
            }
        }
        private ObjectSet<CarUnits> _CarUnits;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarViewPages> CarViewPages
        {
            get
            {
                if ((_CarViewPages == null))
                {
                    _CarViewPages = base.CreateObjectSet<CarViewPages>("CarViewPages");
                }
                return _CarViewPages;
            }
        }
        private ObjectSet<CarViewPages> _CarViewPages;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CashExpenses> CashExpenses
        {
            get
            {
                if ((_CashExpenses == null))
                {
                    _CashExpenses = base.CreateObjectSet<CashExpenses>("CashExpenses");
                }
                return _CashExpenses;
            }
        }
        private ObjectSet<CashExpenses> _CashExpenses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckerActivities> CheckerActivities
        {
            get
            {
                if ((_CheckerActivities == null))
                {
                    _CheckerActivities = base.CreateObjectSet<CheckerActivities>("CheckerActivities");
                }
                return _CheckerActivities;
            }
        }
        private ObjectSet<CheckerActivities> _CheckerActivities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckerActivityTypes> CheckerActivityTypes
        {
            get
            {
                if ((_CheckerActivityTypes == null))
                {
                    _CheckerActivityTypes = base.CreateObjectSet<CheckerActivityTypes>("CheckerActivityTypes");
                }
                return _CheckerActivityTypes;
            }
        }
        private ObjectSet<CheckerActivityTypes> _CheckerActivityTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cities> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<Cities>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<Cities> _Cities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoopMemberItems> CoopMemberItems
        {
            get
            {
                if ((_CoopMemberItems == null))
                {
                    _CoopMemberItems = base.CreateObjectSet<CoopMemberItems>("CoopMemberItems");
                }
                return _CoopMemberItems;
            }
        }
        private ObjectSet<CoopMemberItems> _CoopMemberItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoopMembers> CoopMembers
        {
            get
            {
                if ((_CoopMembers == null))
                {
                    _CoopMembers = base.CreateObjectSet<CoopMembers>("CoopMembers");
                }
                return _CoopMembers;
            }
        }
        private ObjectSet<CoopMembers> _CoopMembers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Countries> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Countries>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Countries> _Countries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currencies> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currencies>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currencies> _Currencies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustAssocTypes> CustAssocTypes
        {
            get
            {
                if ((_CustAssocTypes == null))
                {
                    _CustAssocTypes = base.CreateObjectSet<CustAssocTypes>("CustAssocTypes");
                }
                return _CustAssocTypes;
            }
        }
        private ObjectSet<CustAssocTypes> _CustAssocTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustCategories> CustCategories
        {
            get
            {
                if ((_CustCategories == null))
                {
                    _CustCategories = base.CreateObjectSet<CustCategories>("CustCategories");
                }
                return _CustCategories;
            }
        }
        private ObjectSet<CustCategories> _CustCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustCats> CustCats
        {
            get
            {
                if ((_CustCats == null))
                {
                    _CustCats = base.CreateObjectSet<CustCats>("CustCats");
                }
                return _CustCats;
            }
        }
        private ObjectSet<CustCats> _CustCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntAccountTypes> CustEntAccountTypes
        {
            get
            {
                if ((_CustEntAccountTypes == null))
                {
                    _CustEntAccountTypes = base.CreateObjectSet<CustEntAccountTypes>("CustEntAccountTypes");
                }
                return _CustEntAccountTypes;
            }
        }
        private ObjectSet<CustEntAccountTypes> _CustEntAccountTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActActionCodes> CustEntActActionCodes
        {
            get
            {
                if ((_CustEntActActionCodes == null))
                {
                    _CustEntActActionCodes = base.CreateObjectSet<CustEntActActionCodes>("CustEntActActionCodes");
                }
                return _CustEntActActionCodes;
            }
        }
        private ObjectSet<CustEntActActionCodes> _CustEntActActionCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActActionStatus> CustEntActActionStatuses
        {
            get
            {
                if ((_CustEntActActionStatuses == null))
                {
                    _CustEntActActionStatuses = base.CreateObjectSet<CustEntActActionStatus>("CustEntActActionStatuses");
                }
                return _CustEntActActionStatuses;
            }
        }
        private ObjectSet<CustEntActActionStatus> _CustEntActActionStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActivities> CustEntActivities
        {
            get
            {
                if ((_CustEntActivities == null))
                {
                    _CustEntActivities = base.CreateObjectSet<CustEntActivities>("CustEntActivities");
                }
                return _CustEntActivities;
            }
        }
        private ObjectSet<CustEntActivities> _CustEntActivities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActivityTypes> CustEntActivityTypes
        {
            get
            {
                if ((_CustEntActivityTypes == null))
                {
                    _CustEntActivityTypes = base.CreateObjectSet<CustEntActivityTypes>("CustEntActivityTypes");
                }
                return _CustEntActivityTypes;
            }
        }
        private ObjectSet<CustEntActivityTypes> _CustEntActivityTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActPostSales> CustEntActPostSales
        {
            get
            {
                if ((_CustEntActPostSales == null))
                {
                    _CustEntActPostSales = base.CreateObjectSet<CustEntActPostSales>("CustEntActPostSales");
                }
                return _CustEntActPostSales;
            }
        }
        private ObjectSet<CustEntActPostSales> _CustEntActPostSales;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActPostSaleStatus> CustEntActPostSaleStatuses
        {
            get
            {
                if ((_CustEntActPostSaleStatuses == null))
                {
                    _CustEntActPostSaleStatuses = base.CreateObjectSet<CustEntActPostSaleStatus>("CustEntActPostSaleStatuses");
                }
                return _CustEntActPostSaleStatuses;
            }
        }
        private ObjectSet<CustEntActPostSaleStatus> _CustEntActPostSaleStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActStatus> CustEntActStatuses
        {
            get
            {
                if ((_CustEntActStatuses == null))
                {
                    _CustEntActStatuses = base.CreateObjectSet<CustEntActStatus>("CustEntActStatuses");
                }
                return _CustEntActStatuses;
            }
        }
        private ObjectSet<CustEntActStatus> _CustEntActStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntActTypes> CustEntActTypes
        {
            get
            {
                if ((_CustEntActTypes == null))
                {
                    _CustEntActTypes = base.CreateObjectSet<CustEntActTypes>("CustEntActTypes");
                }
                return _CustEntActTypes;
            }
        }
        private ObjectSet<CustEntActTypes> _CustEntActTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntAddresses> CustEntAddresses
        {
            get
            {
                if ((_CustEntAddresses == null))
                {
                    _CustEntAddresses = base.CreateObjectSet<CustEntAddresses>("CustEntAddresses");
                }
                return _CustEntAddresses;
            }
        }
        private ObjectSet<CustEntAddresses> _CustEntAddresses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntAssigns> CustEntAssigns
        {
            get
            {
                if ((_CustEntAssigns == null))
                {
                    _CustEntAssigns = base.CreateObjectSet<CustEntAssigns>("CustEntAssigns");
                }
                return _CustEntAssigns;
            }
        }
        private ObjectSet<CustEntAssigns> _CustEntAssigns;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntCats> CustEntCats
        {
            get
            {
                if ((_CustEntCats == null))
                {
                    _CustEntCats = base.CreateObjectSet<CustEntCats>("CustEntCats");
                }
                return _CustEntCats;
            }
        }
        private ObjectSet<CustEntCats> _CustEntCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntClauses> CustEntClauses
        {
            get
            {
                if ((_CustEntClauses == null))
                {
                    _CustEntClauses = base.CreateObjectSet<CustEntClauses>("CustEntClauses");
                }
                return _CustEntClauses;
            }
        }
        private ObjectSet<CustEntClauses> _CustEntClauses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntDocuments> CustEntDocuments
        {
            get
            {
                if ((_CustEntDocuments == null))
                {
                    _CustEntDocuments = base.CreateObjectSet<CustEntDocuments>("CustEntDocuments");
                }
                return _CustEntDocuments;
            }
        }
        private ObjectSet<CustEntDocuments> _CustEntDocuments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntities> CustEntities
        {
            get
            {
                if ((_CustEntities == null))
                {
                    _CustEntities = base.CreateObjectSet<CustEntities>("CustEntities");
                }
                return _CustEntities;
            }
        }
        private ObjectSet<CustEntities> _CustEntities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustEntMains> CustEntMains
        {
            get
            {
                if ((_CustEntMains == null))
                {
                    _CustEntMains = base.CreateObjectSet<CustEntMains>("CustEntMains");
                }
                return _CustEntMains;
            }
        }
        private ObjectSet<CustEntMains> _CustEntMains;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustFileRefs> CustFileRefs
        {
            get
            {
                if ((_CustFileRefs == null))
                {
                    _CustFileRefs = base.CreateObjectSet<CustFileRefs>("CustFileRefs");
                }
                return _CustFileRefs;
            }
        }
        private ObjectSet<CustFileRefs> _CustFileRefs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustFiles> CustFiles
        {
            get
            {
                if ((_CustFiles == null))
                {
                    _CustFiles = base.CreateObjectSet<CustFiles>("CustFiles");
                }
                return _CustFiles;
            }
        }
        private ObjectSet<CustFiles> _CustFiles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustNotifActivities> CustNotifActivities
        {
            get
            {
                if ((_CustNotifActivities == null))
                {
                    _CustNotifActivities = base.CreateObjectSet<CustNotifActivities>("CustNotifActivities");
                }
                return _CustNotifActivities;
            }
        }
        private ObjectSet<CustNotifActivities> _CustNotifActivities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustNotifRecipients> CustNotifRecipients
        {
            get
            {
                if ((_CustNotifRecipients == null))
                {
                    _CustNotifRecipients = base.CreateObjectSet<CustNotifRecipients>("CustNotifRecipients");
                }
                return _CustNotifRecipients;
            }
        }
        private ObjectSet<CustNotifRecipients> _CustNotifRecipients;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustNotifs> CustNotifs
        {
            get
            {
                if ((_CustNotifs == null))
                {
                    _CustNotifs = base.CreateObjectSet<CustNotifs>("CustNotifs");
                }
                return _CustNotifs;
            }
        }
        private ObjectSet<CustNotifs> _CustNotifs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customers> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customers>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customers> _Customers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustSalesCategories> CustSalesCategories
        {
            get
            {
                if ((_CustSalesCategories == null))
                {
                    _CustSalesCategories = base.CreateObjectSet<CustSalesCategories>("CustSalesCategories");
                }
                return _CustSalesCategories;
            }
        }
        private ObjectSet<CustSalesCategories> _CustSalesCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustSocialAccs> CustSocialAccs
        {
            get
            {
                if ((_CustSocialAccs == null))
                {
                    _CustSocialAccs = base.CreateObjectSet<CustSocialAccs>("CustSocialAccs");
                }
                return _CustSocialAccs;
            }
        }
        private ObjectSet<CustSocialAccs> _CustSocialAccs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataGroupAssigns> DataGroupAssigns
        {
            get
            {
                if ((_DataGroupAssigns == null))
                {
                    _DataGroupAssigns = base.CreateObjectSet<DataGroupAssigns>("DataGroupAssigns");
                }
                return _DataGroupAssigns;
            }
        }
        private ObjectSet<DataGroupAssigns> _DataGroupAssigns;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataGroups> DataGroups
        {
            get
            {
                if ((_DataGroups == null))
                {
                    _DataGroups = base.CreateObjectSet<DataGroups>("DataGroups");
                }
                return _DataGroups;
            }
        }
        private ObjectSet<DataGroups> _DataGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Destinations> Destinations
        {
            get
            {
                if ((_Destinations == null))
                {
                    _Destinations = base.CreateObjectSet<Destinations>("Destinations");
                }
                return _Destinations;
            }
        }
        private ObjectSet<Destinations> _Destinations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DriverInstructions> DriverInstructions
        {
            get
            {
                if ((_DriverInstructions == null))
                {
                    _DriverInstructions = base.CreateObjectSet<DriverInstructions>("DriverInstructions");
                }
                return _DriverInstructions;
            }
        }
        private ObjectSet<DriverInstructions> _DriverInstructions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailBlasterLogs> EmailBlasterLogs
        {
            get
            {
                if ((_EmailBlasterLogs == null))
                {
                    _EmailBlasterLogs = base.CreateObjectSet<EmailBlasterLogs>("EmailBlasterLogs");
                }
                return _EmailBlasterLogs;
            }
        }
        private ObjectSet<EmailBlasterLogs> _EmailBlasterLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailBlasterTemplates> EmailBlasterTemplates
        {
            get
            {
                if ((_EmailBlasterTemplates == null))
                {
                    _EmailBlasterTemplates = base.CreateObjectSet<EmailBlasterTemplates>("EmailBlasterTemplates");
                }
                return _EmailBlasterTemplates;
            }
        }
        private ObjectSet<EmailBlasterTemplates> _EmailBlasterTemplates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntAddresses> EntAddresses
        {
            get
            {
                if ((_EntAddresses == null))
                {
                    _EntAddresses = base.CreateObjectSet<EntAddresses>("EntAddresses");
                }
                return _EntAddresses;
            }
        }
        private ObjectSet<EntAddresses> _EntAddresses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntBusinesses> EntBusinesses
        {
            get
            {
                if ((_EntBusinesses == null))
                {
                    _EntBusinesses = base.CreateObjectSet<EntBusinesses>("EntBusinesses");
                }
                return _EntBusinesses;
            }
        }
        private ObjectSet<EntBusinesses> _EntBusinesses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntContacts> EntContacts
        {
            get
            {
                if ((_EntContacts == null))
                {
                    _EntContacts = base.CreateObjectSet<EntContacts>("EntContacts");
                }
                return _EntContacts;
            }
        }
        private ObjectSet<EntContacts> _EntContacts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntServices> EntServices
        {
            get
            {
                if ((_EntServices == null))
                {
                    _EntServices = base.CreateObjectSet<EntServices>("EntServices");
                }
                return _EntServices;
            }
        }
        private ObjectSet<EntServices> _EntServices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntSettings> EntSettings
        {
            get
            {
                if ((_EntSettings == null))
                {
                    _EntSettings = base.CreateObjectSet<EntSettings>("EntSettings");
                }
                return _EntSettings;
            }
        }
        private ObjectSet<EntSettings> _EntSettings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntSupportFiles> EntSupportFiles
        {
            get
            {
                if ((_EntSupportFiles == null))
                {
                    _EntSupportFiles = base.CreateObjectSet<EntSupportFiles>("EntSupportFiles");
                }
                return _EntSupportFiles;
            }
        }
        private ObjectSet<EntSupportFiles> _EntSupportFiles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Expenses> Expenses
        {
            get
            {
                if ((_Expenses == null))
                {
                    _Expenses = base.CreateObjectSet<Expenses>("Expenses");
                }
                return _Expenses;
            }
        }
        private ObjectSet<Expenses> _Expenses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpensesCategories> ExpensesCategories
        {
            get
            {
                if ((_ExpensesCategories == null))
                {
                    _ExpensesCategories = base.CreateObjectSet<ExpensesCategories>("ExpensesCategories");
                }
                return _ExpensesCategories;
            }
        }
        private ObjectSet<ExpensesCategories> _ExpensesCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrDtrs> HrDtrs
        {
            get
            {
                if ((_HrDtrs == null))
                {
                    _HrDtrs = base.CreateObjectSet<HrDtrs>("HrDtrs");
                }
                return _HrDtrs;
            }
        }
        private ObjectSet<HrDtrs> _HrDtrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrDtrStatus> HrDtrStatuses
        {
            get
            {
                if ((_HrDtrStatuses == null))
                {
                    _HrDtrStatuses = base.CreateObjectSet<HrDtrStatus>("HrDtrStatuses");
                }
                return _HrDtrStatuses;
            }
        }
        private ObjectSet<HrDtrStatus> _HrDtrStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPayrolls> HrPayrolls
        {
            get
            {
                if ((_HrPayrolls == null))
                {
                    _HrPayrolls = base.CreateObjectSet<HrPayrolls>("HrPayrolls");
                }
                return _HrPayrolls;
            }
        }
        private ObjectSet<HrPayrolls> _HrPayrolls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPerDocs> HrPerDocs
        {
            get
            {
                if ((_HrPerDocs == null))
                {
                    _HrPerDocs = base.CreateObjectSet<HrPerDocs>("HrPerDocs");
                }
                return _HrPerDocs;
            }
        }
        private ObjectSet<HrPerDocs> _HrPerDocs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPerPositions> HrPerPositions
        {
            get
            {
                if ((_HrPerPositions == null))
                {
                    _HrPerPositions = base.CreateObjectSet<HrPerPositions>("HrPerPositions");
                }
                return _HrPerPositions;
            }
        }
        private ObjectSet<HrPerPositions> _HrPerPositions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPerSkills> HrPerSkills
        {
            get
            {
                if ((_HrPerSkills == null))
                {
                    _HrPerSkills = base.CreateObjectSet<HrPerSkills>("HrPerSkills");
                }
                return _HrPerSkills;
            }
        }
        private ObjectSet<HrPerSkills> _HrPerSkills;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPersonels> HrPersonels
        {
            get
            {
                if ((_HrPersonels == null))
                {
                    _HrPersonels = base.CreateObjectSet<HrPersonels>("HrPersonels");
                }
                return _HrPersonels;
            }
        }
        private ObjectSet<HrPersonels> _HrPersonels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPersonelStatus> HrPersonelStatuses
        {
            get
            {
                if ((_HrPersonelStatuses == null))
                {
                    _HrPersonelStatuses = base.CreateObjectSet<HrPersonelStatus>("HrPersonelStatuses");
                }
                return _HrPersonelStatuses;
            }
        }
        private ObjectSet<HrPersonelStatus> _HrPersonelStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPerTrainings> HrPerTrainings
        {
            get
            {
                if ((_HrPerTrainings == null))
                {
                    _HrPerTrainings = base.CreateObjectSet<HrPerTrainings>("HrPerTrainings");
                }
                return _HrPerTrainings;
            }
        }
        private ObjectSet<HrPerTrainings> _HrPerTrainings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrPositions> HrPositions
        {
            get
            {
                if ((_HrPositions == null))
                {
                    _HrPositions = base.CreateObjectSet<HrPositions>("HrPositions");
                }
                return _HrPositions;
            }
        }
        private ObjectSet<HrPositions> _HrPositions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrProficiencies> HrProficiencies
        {
            get
            {
                if ((_HrProficiencies == null))
                {
                    _HrProficiencies = base.CreateObjectSet<HrProficiencies>("HrProficiencies");
                }
                return _HrProficiencies;
            }
        }
        private ObjectSet<HrProficiencies> _HrProficiencies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrProfiles> HrProfiles
        {
            get
            {
                if ((_HrProfiles == null))
                {
                    _HrProfiles = base.CreateObjectSet<HrProfiles>("HrProfiles");
                }
                return _HrProfiles;
            }
        }
        private ObjectSet<HrProfiles> _HrProfiles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrSalaries> HrSalaries
        {
            get
            {
                if ((_HrSalaries == null))
                {
                    _HrSalaries = base.CreateObjectSet<HrSalaries>("HrSalaries");
                }
                return _HrSalaries;
            }
        }
        private ObjectSet<HrSalaries> _HrSalaries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrSkills> HrSkills
        {
            get
            {
                if ((_HrSkills == null))
                {
                    _HrSkills = base.CreateObjectSet<HrSkills>("HrSkills");
                }
                return _HrSkills;
            }
        }
        private ObjectSet<HrSkills> _HrSkills;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrTrainings> HrTrainings
        {
            get
            {
                if ((_HrTrainings == null))
                {
                    _HrTrainings = base.CreateObjectSet<HrTrainings>("HrTrainings");
                }
                return _HrTrainings;
            }
        }
        private ObjectSet<HrTrainings> _HrTrainings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HrTrainingSkills> HrTrainingSkills
        {
            get
            {
                if ((_HrTrainingSkills == null))
                {
                    _HrTrainingSkills = base.CreateObjectSet<HrTrainingSkills>("HrTrainingSkills");
                }
                return _HrTrainingSkills;
            }
        }
        private ObjectSet<HrTrainingSkills> _HrTrainingSkills;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvAdjHdrs> InvAdjHdrs
        {
            get
            {
                if ((_InvAdjHdrs == null))
                {
                    _InvAdjHdrs = base.CreateObjectSet<InvAdjHdrs>("InvAdjHdrs");
                }
                return _InvAdjHdrs;
            }
        }
        private ObjectSet<InvAdjHdrs> _InvAdjHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvAdjItems> InvAdjItems
        {
            get
            {
                if ((_InvAdjItems == null))
                {
                    _InvAdjItems = base.CreateObjectSet<InvAdjItems>("InvAdjItems");
                }
                return _InvAdjItems;
            }
        }
        private ObjectSet<InvAdjItems> _InvAdjItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCarGateControls> InvCarGateControls
        {
            get
            {
                if ((_InvCarGateControls == null))
                {
                    _InvCarGateControls = base.CreateObjectSet<InvCarGateControls>("InvCarGateControls");
                }
                return _InvCarGateControls;
            }
        }
        private ObjectSet<InvCarGateControls> _InvCarGateControls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCarRecords> InvCarRecords
        {
            get
            {
                if ((_InvCarRecords == null))
                {
                    _InvCarRecords = base.CreateObjectSet<InvCarRecords>("InvCarRecords");
                }
                return _InvCarRecords;
            }
        }
        private ObjectSet<InvCarRecords> _InvCarRecords;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCarRecordTypes> InvCarRecordTypes
        {
            get
            {
                if ((_InvCarRecordTypes == null))
                {
                    _InvCarRecordTypes = base.CreateObjectSet<InvCarRecordTypes>("InvCarRecordTypes");
                }
                return _InvCarRecordTypes;
            }
        }
        private ObjectSet<InvCarRecordTypes> _InvCarRecordTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCatCustomSpecs> InvCatCustomSpecs
        {
            get
            {
                if ((_InvCatCustomSpecs == null))
                {
                    _InvCatCustomSpecs = base.CreateObjectSet<InvCatCustomSpecs>("InvCatCustomSpecs");
                }
                return _InvCatCustomSpecs;
            }
        }
        private ObjectSet<InvCatCustomSpecs> _InvCatCustomSpecs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCategories> InvCategories
        {
            get
            {
                if ((_InvCategories == null))
                {
                    _InvCategories = base.CreateObjectSet<InvCategories>("InvCategories");
                }
                return _InvCategories;
            }
        }
        private ObjectSet<InvCategories> _InvCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCategorySpecDefs> InvCategorySpecDefs
        {
            get
            {
                if ((_InvCategorySpecDefs == null))
                {
                    _InvCategorySpecDefs = base.CreateObjectSet<InvCategorySpecDefs>("InvCategorySpecDefs");
                }
                return _InvCategorySpecDefs;
            }
        }
        private ObjectSet<InvCategorySpecDefs> _InvCategorySpecDefs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvClassifications> InvClassifications
        {
            get
            {
                if ((_InvClassifications == null))
                {
                    _InvClassifications = base.CreateObjectSet<InvClassifications>("InvClassifications");
                }
                return _InvClassifications;
            }
        }
        private ObjectSet<InvClassifications> _InvClassifications;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCustomSpecs> InvCustomSpecs
        {
            get
            {
                if ((_InvCustomSpecs == null))
                {
                    _InvCustomSpecs = base.CreateObjectSet<InvCustomSpecs>("InvCustomSpecs");
                }
                return _InvCustomSpecs;
            }
        }
        private ObjectSet<InvCustomSpecs> _InvCustomSpecs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvCustomSpecTypes> InvCustomSpecTypes
        {
            get
            {
                if ((_InvCustomSpecTypes == null))
                {
                    _InvCustomSpecTypes = base.CreateObjectSet<InvCustomSpecTypes>("InvCustomSpecTypes");
                }
                return _InvCustomSpecTypes;
            }
        }
        private ObjectSet<InvCustomSpecTypes> _InvCustomSpecTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemBrands> InvItemBrands
        {
            get
            {
                if ((_InvItemBrands == null))
                {
                    _InvItemBrands = base.CreateObjectSet<InvItemBrands>("InvItemBrands");
                }
                return _InvItemBrands;
            }
        }
        private ObjectSet<InvItemBrands> _InvItemBrands;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemCategories> InvItemCategories
        {
            get
            {
                if ((_InvItemCategories == null))
                {
                    _InvItemCategories = base.CreateObjectSet<InvItemCategories>("InvItemCategories");
                }
                return _InvItemCategories;
            }
        }
        private ObjectSet<InvItemCategories> _InvItemCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemCats> InvItemCats
        {
            get
            {
                if ((_InvItemCats == null))
                {
                    _InvItemCats = base.CreateObjectSet<InvItemCats>("InvItemCats");
                }
                return _InvItemCats;
            }
        }
        private ObjectSet<InvItemCats> _InvItemCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemClasses> InvItemClasses
        {
            get
            {
                if ((_InvItemClasses == null))
                {
                    _InvItemClasses = base.CreateObjectSet<InvItemClasses>("InvItemClasses");
                }
                return _InvItemClasses;
            }
        }
        private ObjectSet<InvItemClasses> _InvItemClasses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemCustomSpecs> InvItemCustomSpecs
        {
            get
            {
                if ((_InvItemCustomSpecs == null))
                {
                    _InvItemCustomSpecs = base.CreateObjectSet<InvItemCustomSpecs>("InvItemCustomSpecs");
                }
                return _InvItemCustomSpecs;
            }
        }
        private ObjectSet<InvItemCustomSpecs> _InvItemCustomSpecs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemMasters> InvItemMasters
        {
            get
            {
                if ((_InvItemMasters == null))
                {
                    _InvItemMasters = base.CreateObjectSet<InvItemMasters>("InvItemMasters");
                }
                return _InvItemMasters;
            }
        }
        private ObjectSet<InvItemMasters> _InvItemMasters;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemOrigins> InvItemOrigins
        {
            get
            {
                if ((_InvItemOrigins == null))
                {
                    _InvItemOrigins = base.CreateObjectSet<InvItemOrigins>("InvItemOrigins");
                }
                return _InvItemOrigins;
            }
        }
        private ObjectSet<InvItemOrigins> _InvItemOrigins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItems> InvItems
        {
            get
            {
                if ((_InvItems == null))
                {
                    _InvItems = base.CreateObjectSet<InvItems>("InvItems");
                }
                return _InvItems;
            }
        }
        private ObjectSet<InvItems> _InvItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemSpec_Steel> InvItemSpec_Steels
        {
            get
            {
                if ((_InvItemSpec_Steels == null))
                {
                    _InvItemSpec_Steels = base.CreateObjectSet<InvItemSpec_Steel>("InvItemSpec_Steels");
                }
                return _InvItemSpec_Steels;
            }
        }
        private ObjectSet<InvItemSpec_Steel> _InvItemSpec_Steels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvItemSysDefinedSpecs> InvItemSysDefinedSpecs
        {
            get
            {
                if ((_InvItemSysDefinedSpecs == null))
                {
                    _InvItemSysDefinedSpecs = base.CreateObjectSet<InvItemSysDefinedSpecs>("InvItemSysDefinedSpecs");
                }
                return _InvItemSysDefinedSpecs;
            }
        }
        private ObjectSet<InvItemSysDefinedSpecs> _InvItemSysDefinedSpecs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvPoApprovals> InvPoApprovals
        {
            get
            {
                if ((_InvPoApprovals == null))
                {
                    _InvPoApprovals = base.CreateObjectSet<InvPoApprovals>("InvPoApprovals");
                }
                return _InvPoApprovals;
            }
        }
        private ObjectSet<InvPoApprovals> _InvPoApprovals;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvPoHdrs> InvPoHdrs
        {
            get
            {
                if ((_InvPoHdrs == null))
                {
                    _InvPoHdrs = base.CreateObjectSet<InvPoHdrs>("InvPoHdrs");
                }
                return _InvPoHdrs;
            }
        }
        private ObjectSet<InvPoHdrs> _InvPoHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvPoHdrStatus> InvPoHdrStatuses
        {
            get
            {
                if ((_InvPoHdrStatuses == null))
                {
                    _InvPoHdrStatuses = base.CreateObjectSet<InvPoHdrStatus>("InvPoHdrStatuses");
                }
                return _InvPoHdrStatuses;
            }
        }
        private ObjectSet<InvPoHdrStatus> _InvPoHdrStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvPoItems> InvPoItems
        {
            get
            {
                if ((_InvPoItems == null))
                {
                    _InvPoItems = base.CreateObjectSet<InvPoItems>("InvPoItems");
                }
                return _InvPoItems;
            }
        }
        private ObjectSet<InvPoItems> _InvPoItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvRecHdrs> InvRecHdrs
        {
            get
            {
                if ((_InvRecHdrs == null))
                {
                    _InvRecHdrs = base.CreateObjectSet<InvRecHdrs>("InvRecHdrs");
                }
                return _InvRecHdrs;
            }
        }
        private ObjectSet<InvRecHdrs> _InvRecHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvRecItems> InvRecItems
        {
            get
            {
                if ((_InvRecItems == null))
                {
                    _InvRecItems = base.CreateObjectSet<InvRecItems>("InvRecItems");
                }
                return _InvRecItems;
            }
        }
        private ObjectSet<InvRecItems> _InvRecItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvRequestHdrs> InvRequestHdrs
        {
            get
            {
                if ((_InvRequestHdrs == null))
                {
                    _InvRequestHdrs = base.CreateObjectSet<InvRequestHdrs>("InvRequestHdrs");
                }
                return _InvRequestHdrs;
            }
        }
        private ObjectSet<InvRequestHdrs> _InvRequestHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvRequestItems> InvRequestItems
        {
            get
            {
                if ((_InvRequestItems == null))
                {
                    _InvRequestItems = base.CreateObjectSet<InvRequestItems>("InvRequestItems");
                }
                return _InvRequestItems;
            }
        }
        private ObjectSet<InvRequestItems> _InvRequestItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvStoreAreas> InvStoreAreas
        {
            get
            {
                if ((_InvStoreAreas == null))
                {
                    _InvStoreAreas = base.CreateObjectSet<InvStoreAreas>("InvStoreAreas");
                }
                return _InvStoreAreas;
            }
        }
        private ObjectSet<InvStoreAreas> _InvStoreAreas;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvStores> InvStores
        {
            get
            {
                if ((_InvStores == null))
                {
                    _InvStores = base.CreateObjectSet<InvStores>("InvStores");
                }
                return _InvStores;
            }
        }
        private ObjectSet<InvStores> _InvStores;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvStoreUsers> InvStoreUsers
        {
            get
            {
                if ((_InvStoreUsers == null))
                {
                    _InvStoreUsers = base.CreateObjectSet<InvStoreUsers>("InvStoreUsers");
                }
                return _InvStoreUsers;
            }
        }
        private ObjectSet<InvStoreUsers> _InvStoreUsers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvSupplierItems> InvSupplierItems
        {
            get
            {
                if ((_InvSupplierItems == null))
                {
                    _InvSupplierItems = base.CreateObjectSet<InvSupplierItems>("InvSupplierItems");
                }
                return _InvSupplierItems;
            }
        }
        private ObjectSet<InvSupplierItems> _InvSupplierItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvSuppliers> InvSuppliers
        {
            get
            {
                if ((_InvSuppliers == null))
                {
                    _InvSuppliers = base.CreateObjectSet<InvSuppliers>("InvSuppliers");
                }
                return _InvSuppliers;
            }
        }
        private ObjectSet<InvSuppliers> _InvSuppliers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxApprovals> InvTrxApprovals
        {
            get
            {
                if ((_InvTrxApprovals == null))
                {
                    _InvTrxApprovals = base.CreateObjectSet<InvTrxApprovals>("InvTrxApprovals");
                }
                return _InvTrxApprovals;
            }
        }
        private ObjectSet<InvTrxApprovals> _InvTrxApprovals;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxDtlOperators> InvTrxDtlOperators
        {
            get
            {
                if ((_InvTrxDtlOperators == null))
                {
                    _InvTrxDtlOperators = base.CreateObjectSet<InvTrxDtlOperators>("InvTrxDtlOperators");
                }
                return _InvTrxDtlOperators;
            }
        }
        private ObjectSet<InvTrxDtlOperators> _InvTrxDtlOperators;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxDtls> InvTrxDtls
        {
            get
            {
                if ((_InvTrxDtls == null))
                {
                    _InvTrxDtls = base.CreateObjectSet<InvTrxDtls>("InvTrxDtls");
                }
                return _InvTrxDtls;
            }
        }
        private ObjectSet<InvTrxDtls> _InvTrxDtls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxDtlxItemMasters> InvTrxDtlxItemMasters
        {
            get
            {
                if ((_InvTrxDtlxItemMasters == null))
                {
                    _InvTrxDtlxItemMasters = base.CreateObjectSet<InvTrxDtlxItemMasters>("InvTrxDtlxItemMasters");
                }
                return _InvTrxDtlxItemMasters;
            }
        }
        private ObjectSet<InvTrxDtlxItemMasters> _InvTrxDtlxItemMasters;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxHdrs> InvTrxHdrs
        {
            get
            {
                if ((_InvTrxHdrs == null))
                {
                    _InvTrxHdrs = base.CreateObjectSet<InvTrxHdrs>("InvTrxHdrs");
                }
                return _InvTrxHdrs;
            }
        }
        private ObjectSet<InvTrxHdrs> _InvTrxHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxHdrStatus> InvTrxHdrStatuses
        {
            get
            {
                if ((_InvTrxHdrStatuses == null))
                {
                    _InvTrxHdrStatuses = base.CreateObjectSet<InvTrxHdrStatus>("InvTrxHdrStatuses");
                }
                return _InvTrxHdrStatuses;
            }
        }
        private ObjectSet<InvTrxHdrStatus> _InvTrxHdrStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTrxTypes> InvTrxTypes
        {
            get
            {
                if ((_InvTrxTypes == null))
                {
                    _InvTrxTypes = base.CreateObjectSet<InvTrxTypes>("InvTrxTypes");
                }
                return _InvTrxTypes;
            }
        }
        private ObjectSet<InvTrxTypes> _InvTrxTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvTypes> InvTypes
        {
            get
            {
                if ((_InvTypes == null))
                {
                    _InvTypes = base.CreateObjectSet<InvTypes>("InvTypes");
                }
                return _InvTypes;
            }
        }
        private ObjectSet<InvTypes> _InvTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvUomConversions> InvUomConversions
        {
            get
            {
                if ((_InvUomConversions == null))
                {
                    _InvUomConversions = base.CreateObjectSet<InvUomConversions>("InvUomConversions");
                }
                return _InvUomConversions;
            }
        }
        private ObjectSet<InvUomConversions> _InvUomConversions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvUomConvItems> InvUomConvItems
        {
            get
            {
                if ((_InvUomConvItems == null))
                {
                    _InvUomConvItems = base.CreateObjectSet<InvUomConvItems>("InvUomConvItems");
                }
                return _InvUomConvItems;
            }
        }
        private ObjectSet<InvUomConvItems> _InvUomConvItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvUoms> InvUoms
        {
            get
            {
                if ((_InvUoms == null))
                {
                    _InvUoms = base.CreateObjectSet<InvUoms>("InvUoms");
                }
                return _InvUoms;
            }
        }
        private ObjectSet<InvUoms> _InvUoms;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvWarningLevels> InvWarningLevels
        {
            get
            {
                if ((_InvWarningLevels == null))
                {
                    _InvWarningLevels = base.CreateObjectSet<InvWarningLevels>("InvWarningLevels");
                }
                return _InvWarningLevels;
            }
        }
        private ObjectSet<InvWarningLevels> _InvWarningLevels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvWarningTypes> InvWarningTypes
        {
            get
            {
                if ((_InvWarningTypes == null))
                {
                    _InvWarningTypes = base.CreateObjectSet<InvWarningTypes>("InvWarningTypes");
                }
                return _InvWarningTypes;
            }
        }
        private ObjectSet<InvWarningTypes> _InvWarningTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobActions> JobActions
        {
            get
            {
                if ((_JobActions == null))
                {
                    _JobActions = base.CreateObjectSet<JobActions>("JobActions");
                }
                return _JobActions;
            }
        }
        private ObjectSet<JobActions> _JobActions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobChecklists> JobChecklists
        {
            get
            {
                if ((_JobChecklists == null))
                {
                    _JobChecklists = base.CreateObjectSet<JobChecklists>("JobChecklists");
                }
                return _JobChecklists;
            }
        }
        private ObjectSet<JobChecklists> _JobChecklists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobContacts> JobContacts
        {
            get
            {
                if ((_JobContacts == null))
                {
                    _JobContacts = base.CreateObjectSet<JobContacts>("JobContacts");
                }
                return _JobContacts;
            }
        }
        private ObjectSet<JobContacts> _JobContacts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobEntMains> JobEntMains
        {
            get
            {
                if ((_JobEntMains == null))
                {
                    _JobEntMains = base.CreateObjectSet<JobEntMains>("JobEntMains");
                }
                return _JobEntMains;
            }
        }
        private ObjectSet<JobEntMains> _JobEntMains;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobExpenses> JobExpenses
        {
            get
            {
                if ((_JobExpenses == null))
                {
                    _JobExpenses = base.CreateObjectSet<JobExpenses>("JobExpenses");
                }
                return _JobExpenses;
            }
        }
        private ObjectSet<JobExpenses> _JobExpenses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobItineraries> JobItineraries
        {
            get
            {
                if ((_JobItineraries == null))
                {
                    _JobItineraries = base.CreateObjectSet<JobItineraries>("JobItineraries");
                }
                return _JobItineraries;
            }
        }
        private ObjectSet<JobItineraries> _JobItineraries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobMains> JobMains
        {
            get
            {
                if ((_JobMains == null))
                {
                    _JobMains = base.CreateObjectSet<JobMains>("JobMains");
                }
                return _JobMains;
            }
        }
        private ObjectSet<JobMains> _JobMains;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobNotes> JobNotes
        {
            get
            {
                if ((_JobNotes == null))
                {
                    _JobNotes = base.CreateObjectSet<JobNotes>("JobNotes");
                }
                return _JobNotes;
            }
        }
        private ObjectSet<JobNotes> _JobNotes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobNotificationRequests> JobNotificationRequests
        {
            get
            {
                if ((_JobNotificationRequests == null))
                {
                    _JobNotificationRequests = base.CreateObjectSet<JobNotificationRequests>("JobNotificationRequests");
                }
                return _JobNotificationRequests;
            }
        }
        private ObjectSet<JobNotificationRequests> _JobNotificationRequests;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobPayments> JobPayments
        {
            get
            {
                if ((_JobPayments == null))
                {
                    _JobPayments = base.CreateObjectSet<JobPayments>("JobPayments");
                }
                return _JobPayments;
            }
        }
        private ObjectSet<JobPayments> _JobPayments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobPickups> JobPickups
        {
            get
            {
                if ((_JobPickups == null))
                {
                    _JobPickups = base.CreateObjectSet<JobPickups>("JobPickups");
                }
                return _JobPickups;
            }
        }
        private ObjectSet<JobPickups> _JobPickups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobPosts> JobPosts
        {
            get
            {
                if ((_JobPosts == null))
                {
                    _JobPosts = base.CreateObjectSet<JobPosts>("JobPosts");
                }
                return _JobPosts;
            }
        }
        private ObjectSet<JobPosts> _JobPosts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobServiceItems> JobServiceItems
        {
            get
            {
                if ((_JobServiceItems == null))
                {
                    _JobServiceItems = base.CreateObjectSet<JobServiceItems>("JobServiceItems");
                }
                return _JobServiceItems;
            }
        }
        private ObjectSet<JobServiceItems> _JobServiceItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobServicePickups> JobServicePickups
        {
            get
            {
                if ((_JobServicePickups == null))
                {
                    _JobServicePickups = base.CreateObjectSet<JobServicePickups>("JobServicePickups");
                }
                return _JobServicePickups;
            }
        }
        private ObjectSet<JobServicePickups> _JobServicePickups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobServices> JobServices
        {
            get
            {
                if ((_JobServices == null))
                {
                    _JobServices = base.CreateObjectSet<JobServices>("JobServices");
                }
                return _JobServices;
            }
        }
        private ObjectSet<JobServices> _JobServices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobStatus> JobStatuses
        {
            get
            {
                if ((_JobStatuses == null))
                {
                    _JobStatuses = base.CreateObjectSet<JobStatus>("JobStatuses");
                }
                return _JobStatuses;
            }
        }
        private ObjectSet<JobStatus> _JobStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobThrus> JobThrus
        {
            get
            {
                if ((_JobThrus == null))
                {
                    _JobThrus = base.CreateObjectSet<JobThrus>("JobThrus");
                }
                return _JobThrus;
            }
        }
        private ObjectSet<JobThrus> _JobThrus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobTrails> JobTrails
        {
            get
            {
                if ((_JobTrails == null))
                {
                    _JobTrails = base.CreateObjectSet<JobTrails>("JobTrails");
                }
                return _JobTrails;
            }
        }
        private ObjectSet<JobTrails> _JobTrails;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobTypes> JobTypes
        {
            get
            {
                if ((_JobTypes == null))
                {
                    _JobTypes = base.CreateObjectSet<JobTypes>("JobTypes");
                }
                return _JobTypes;
            }
        }
        private ObjectSet<JobTypes> _JobTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobVehicles> JobVehicles
        {
            get
            {
                if ((_JobVehicles == null))
                {
                    _JobVehicles = base.CreateObjectSet<JobVehicles>("JobVehicles");
                }
                return _JobVehicles;
            }
        }
        private ObjectSet<JobVehicles> _JobVehicles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotifRecipients> NotifRecipients
        {
            get
            {
                if ((_NotifRecipients == null))
                {
                    _NotifRecipients = base.CreateObjectSet<NotifRecipients>("NotifRecipients");
                }
                return _NotifRecipients;
            }
        }
        private ObjectSet<NotifRecipients> _NotifRecipients;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OnlineReservations> OnlineReservations
        {
            get
            {
                if ((_OnlineReservations == null))
                {
                    _OnlineReservations = base.CreateObjectSet<OnlineReservations>("OnlineReservations");
                }
                return _OnlineReservations;
            }
        }
        private ObjectSet<OnlineReservations> _OnlineReservations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaypalAccounts> PaypalAccounts
        {
            get
            {
                if ((_PaypalAccounts == null))
                {
                    _PaypalAccounts = base.CreateObjectSet<PaypalAccounts>("PaypalAccounts");
                }
                return _PaypalAccounts;
            }
        }
        private ObjectSet<PaypalAccounts> _PaypalAccounts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaypalTransactions> PaypalTransactions
        {
            get
            {
                if ((_PaypalTransactions == null))
                {
                    _PaypalTransactions = base.CreateObjectSet<PaypalTransactions>("PaypalTransactions");
                }
                return _PaypalTransactions;
            }
        }
        private ObjectSet<PaypalTransactions> _PaypalTransactions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PickupInstructions> PickupInstructions
        {
            get
            {
                if ((_PickupInstructions == null))
                {
                    _PickupInstructions = base.CreateObjectSet<PickupInstructions>("PickupInstructions");
                }
                return _PickupInstructions;
            }
        }
        private ObjectSet<PickupInstructions> _PickupInstructions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PkgDestinations> PkgDestinations
        {
            get
            {
                if ((_PkgDestinations == null))
                {
                    _PkgDestinations = base.CreateObjectSet<PkgDestinations>("PkgDestinations");
                }
                return _PkgDestinations;
            }
        }
        private ObjectSet<PkgDestinations> _PkgDestinations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortalCustomers> PortalCustomers
        {
            get
            {
                if ((_PortalCustomers == null))
                {
                    _PortalCustomers = base.CreateObjectSet<PortalCustomers>("PortalCustomers");
                }
                return _PortalCustomers;
            }
        }
        private ObjectSet<PortalCustomers> _PortalCustomers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreDefinedNotes> PreDefinedNotes
        {
            get
            {
                if ((_PreDefinedNotes == null))
                {
                    _PreDefinedNotes = base.CreateObjectSet<PreDefinedNotes>("PreDefinedNotes");
                }
                return _PreDefinedNotes;
            }
        }
        private ObjectSet<PreDefinedNotes> _PreDefinedNotes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategories> ProductCategories
        {
            get
            {
                if ((_ProductCategories == null))
                {
                    _ProductCategories = base.CreateObjectSet<ProductCategories>("ProductCategories");
                }
                return _ProductCategories;
            }
        }
        private ObjectSet<ProductCategories> _ProductCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductConditions> ProductConditions
        {
            get
            {
                if ((_ProductConditions == null))
                {
                    _ProductConditions = base.CreateObjectSet<ProductConditions>("ProductConditions");
                }
                return _ProductConditions;
            }
        }
        private ObjectSet<ProductConditions> _ProductConditions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductImages1> ProductImages1s
        {
            get
            {
                if ((_ProductImages1s == null))
                {
                    _ProductImages1s = base.CreateObjectSet<ProductImages1>("ProductImages1s");
                }
                return _ProductImages1s;
            }
        }
        private ObjectSet<ProductImages1> _ProductImages1s;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductPrices> ProductPrices
        {
            get
            {
                if ((_ProductPrices == null))
                {
                    _ProductPrices = base.CreateObjectSet<ProductPrices>("ProductPrices");
                }
                return _ProductPrices;
            }
        }
        private ObjectSet<ProductPrices> _ProductPrices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductProdCats> ProductProdCats
        {
            get
            {
                if ((_ProductProdCats == null))
                {
                    _ProductProdCats = base.CreateObjectSet<ProductProdCats>("ProductProdCats");
                }
                return _ProductProdCats;
            }
        }
        private ObjectSet<ProductProdCats> _ProductProdCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Products> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Products>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Products> _Products;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RateGroups> RateGroups
        {
            get
            {
                if ((_RateGroups == null))
                {
                    _RateGroups = base.CreateObjectSet<RateGroups>("RateGroups");
                }
                return _RateGroups;
            }
        }
        private ObjectSet<RateGroups> _RateGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reports> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Reports>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Reports> _Reports;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RptAccessTypes> RptAccessTypes
        {
            get
            {
                if ((_RptAccessTypes == null))
                {
                    _RptAccessTypes = base.CreateObjectSet<RptAccessTypes>("RptAccessTypes");
                }
                return _RptAccessTypes;
            }
        }
        private ObjectSet<RptAccessTypes> _RptAccessTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RptCategories> RptCategories
        {
            get
            {
                if ((_RptCategories == null))
                {
                    _RptCategories = base.CreateObjectSet<RptCategories>("RptCategories");
                }
                return _RptCategories;
            }
        }
        private ObjectSet<RptCategories> _RptCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RptReportCats> RptReportCats
        {
            get
            {
                if ((_RptReportCats == null))
                {
                    _RptReportCats = base.CreateObjectSet<RptReportCats>("RptReportCats");
                }
                return _RptReportCats;
            }
        }
        private ObjectSet<RptReportCats> _RptReportCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RptReportRoles1> RptReportRoles1s
        {
            get
            {
                if ((_RptReportRoles1s == null))
                {
                    _RptReportRoles1s = base.CreateObjectSet<RptReportRoles1>("RptReportRoles1s");
                }
                return _RptReportRoles1s;
            }
        }
        private ObjectSet<RptReportRoles1> _RptReportRoles1s;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RptReportUsers> RptReportUsers
        {
            get
            {
                if ((_RptReportUsers == null))
                {
                    _RptReportUsers = base.CreateObjectSet<RptReportUsers>("RptReportUsers");
                }
                return _RptReportUsers;
            }
        }
        private ObjectSet<RptReportUsers> _RptReportUsers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RptUserLevels> RptUserLevels
        {
            get
            {
                if ((_RptUserLevels == null))
                {
                    _RptUserLevels = base.CreateObjectSet<RptUserLevels>("RptUserLevels");
                }
                return _RptUserLevels;
            }
        }
        private ObjectSet<RptUserLevels> _RptUserLevels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RsvPayments> RsvPayments
        {
            get
            {
                if ((_RsvPayments == null))
                {
                    _RsvPayments = base.CreateObjectSet<RsvPayments>("RsvPayments");
                }
                return _RsvPayments;
            }
        }
        private ObjectSet<RsvPayments> _RsvPayments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesActCodes> SalesActCodes
        {
            get
            {
                if ((_SalesActCodes == null))
                {
                    _SalesActCodes = base.CreateObjectSet<SalesActCodes>("SalesActCodes");
                }
                return _SalesActCodes;
            }
        }
        private ObjectSet<SalesActCodes> _SalesActCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesActivities> SalesActivities
        {
            get
            {
                if ((_SalesActivities == null))
                {
                    _SalesActivities = base.CreateObjectSet<SalesActivities>("SalesActivities");
                }
                return _SalesActivities;
            }
        }
        private ObjectSet<SalesActivities> _SalesActivities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesActStatus> SalesActStatuses
        {
            get
            {
                if ((_SalesActStatuses == null))
                {
                    _SalesActStatuses = base.CreateObjectSet<SalesActStatus>("SalesActStatuses");
                }
                return _SalesActStatuses;
            }
        }
        private ObjectSet<SalesActStatus> _SalesActStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadCatCodes> SalesLeadCatCodes
        {
            get
            {
                if ((_SalesLeadCatCodes == null))
                {
                    _SalesLeadCatCodes = base.CreateObjectSet<SalesLeadCatCodes>("SalesLeadCatCodes");
                }
                return _SalesLeadCatCodes;
            }
        }
        private ObjectSet<SalesLeadCatCodes> _SalesLeadCatCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadCategories> SalesLeadCategories
        {
            get
            {
                if ((_SalesLeadCategories == null))
                {
                    _SalesLeadCategories = base.CreateObjectSet<SalesLeadCategories>("SalesLeadCategories");
                }
                return _SalesLeadCategories;
            }
        }
        private ObjectSet<SalesLeadCategories> _SalesLeadCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadCompanies> SalesLeadCompanies
        {
            get
            {
                if ((_SalesLeadCompanies == null))
                {
                    _SalesLeadCompanies = base.CreateObjectSet<SalesLeadCompanies>("SalesLeadCompanies");
                }
                return _SalesLeadCompanies;
            }
        }
        private ObjectSet<SalesLeadCompanies> _SalesLeadCompanies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadFiles> SalesLeadFiles
        {
            get
            {
                if ((_SalesLeadFiles == null))
                {
                    _SalesLeadFiles = base.CreateObjectSet<SalesLeadFiles>("SalesLeadFiles");
                }
                return _SalesLeadFiles;
            }
        }
        private ObjectSet<SalesLeadFiles> _SalesLeadFiles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadItems> SalesLeadItems
        {
            get
            {
                if ((_SalesLeadItems == null))
                {
                    _SalesLeadItems = base.CreateObjectSet<SalesLeadItems>("SalesLeadItems");
                }
                return _SalesLeadItems;
            }
        }
        private ObjectSet<SalesLeadItems> _SalesLeadItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadLinks> SalesLeadLinks
        {
            get
            {
                if ((_SalesLeadLinks == null))
                {
                    _SalesLeadLinks = base.CreateObjectSet<SalesLeadLinks>("SalesLeadLinks");
                }
                return _SalesLeadLinks;
            }
        }
        private ObjectSet<SalesLeadLinks> _SalesLeadLinks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadQuotedItems> SalesLeadQuotedItems
        {
            get
            {
                if ((_SalesLeadQuotedItems == null))
                {
                    _SalesLeadQuotedItems = base.CreateObjectSet<SalesLeadQuotedItems>("SalesLeadQuotedItems");
                }
                return _SalesLeadQuotedItems;
            }
        }
        private ObjectSet<SalesLeadQuotedItems> _SalesLeadQuotedItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadQuotedItemStatus> SalesLeadQuotedItemStatuses
        {
            get
            {
                if ((_SalesLeadQuotedItemStatuses == null))
                {
                    _SalesLeadQuotedItemStatuses = base.CreateObjectSet<SalesLeadQuotedItemStatus>("SalesLeadQuotedItemStatuses");
                }
                return _SalesLeadQuotedItemStatuses;
            }
        }
        private ObjectSet<SalesLeadQuotedItemStatus> _SalesLeadQuotedItemStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeads> SalesLeads
        {
            get
            {
                if ((_SalesLeads == null))
                {
                    _SalesLeads = base.CreateObjectSet<SalesLeads>("SalesLeads");
                }
                return _SalesLeads;
            }
        }
        private ObjectSet<SalesLeads> _SalesLeads;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLeadSupActivities> SalesLeadSupActivities
        {
            get
            {
                if ((_SalesLeadSupActivities == null))
                {
                    _SalesLeadSupActivities = base.CreateObjectSet<SalesLeadSupActivities>("SalesLeadSupActivities");
                }
                return _SalesLeadSupActivities;
            }
        }
        private ObjectSet<SalesLeadSupActivities> _SalesLeadSupActivities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesProcStatus> SalesProcStatuses
        {
            get
            {
                if ((_SalesProcStatuses == null))
                {
                    _SalesProcStatuses = base.CreateObjectSet<SalesProcStatus>("SalesProcStatuses");
                }
                return _SalesProcStatuses;
            }
        }
        private ObjectSet<SalesProcStatus> _SalesProcStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesProcStatusCodes> SalesProcStatusCodes
        {
            get
            {
                if ((_SalesProcStatusCodes == null))
                {
                    _SalesProcStatusCodes = base.CreateObjectSet<SalesProcStatusCodes>("SalesProcStatusCodes");
                }
                return _SalesProcStatusCodes;
            }
        }
        private ObjectSet<SalesProcStatusCodes> _SalesProcStatusCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesStatus> SalesStatuses
        {
            get
            {
                if ((_SalesStatuses == null))
                {
                    _SalesStatuses = base.CreateObjectSet<SalesStatus>("SalesStatuses");
                }
                return _SalesStatuses;
            }
        }
        private ObjectSet<SalesStatus> _SalesStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesStatusAllowedUsers> SalesStatusAllowedUsers
        {
            get
            {
                if ((_SalesStatusAllowedUsers == null))
                {
                    _SalesStatusAllowedUsers = base.CreateObjectSet<SalesStatusAllowedUsers>("SalesStatusAllowedUsers");
                }
                return _SalesStatusAllowedUsers;
            }
        }
        private ObjectSet<SalesStatusAllowedUsers> _SalesStatusAllowedUsers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesStatusCodes> SalesStatusCodes
        {
            get
            {
                if ((_SalesStatusCodes == null))
                {
                    _SalesStatusCodes = base.CreateObjectSet<SalesStatusCodes>("SalesStatusCodes");
                }
                return _SalesStatusCodes;
            }
        }
        private ObjectSet<SalesStatusCodes> _SalesStatusCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesStatusRestrictions> SalesStatusRestrictions
        {
            get
            {
                if ((_SalesStatusRestrictions == null))
                {
                    _SalesStatusRestrictions = base.CreateObjectSet<SalesStatusRestrictions>("SalesStatusRestrictions");
                }
                return _SalesStatusRestrictions;
            }
        }
        private ObjectSet<SalesStatusRestrictions> _SalesStatusRestrictions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesStatusStatus> SalesStatusStatuses
        {
            get
            {
                if ((_SalesStatusStatuses == null))
                {
                    _SalesStatusStatuses = base.CreateObjectSet<SalesStatusStatus>("SalesStatusStatuses");
                }
                return _SalesStatusStatuses;
            }
        }
        private ObjectSet<SalesStatusStatus> _SalesStatusStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesStatusTypes> SalesStatusTypes
        {
            get
            {
                if ((_SalesStatusTypes == null))
                {
                    _SalesStatusTypes = base.CreateObjectSet<SalesStatusTypes>("SalesStatusTypes");
                }
                return _SalesStatusTypes;
            }
        }
        private ObjectSet<SalesStatusTypes> _SalesStatusTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Services> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Services>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Services> _Services;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmBranches> SmBranches
        {
            get
            {
                if ((_SmBranches == null))
                {
                    _SmBranches = base.CreateObjectSet<SmBranches>("SmBranches");
                }
                return _SmBranches;
            }
        }
        private ObjectSet<SmBranches> _SmBranches;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmCategories> SmCategories
        {
            get
            {
                if ((_SmCategories == null))
                {
                    _SmCategories = base.CreateObjectSet<SmCategories>("SmCategories");
                }
                return _SmCategories;
            }
        }
        private ObjectSet<SmCategories> _SmCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmFiles> SmFiles
        {
            get
            {
                if ((_SmFiles == null))
                {
                    _SmFiles = base.CreateObjectSet<SmFiles>("SmFiles");
                }
                return _SmFiles;
            }
        }
        private ObjectSet<SmFiles> _SmFiles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProdAds> SmProdAds
        {
            get
            {
                if ((_SmProdAds == null))
                {
                    _SmProdAds = base.CreateObjectSet<SmProdAds>("SmProdAds");
                }
                return _SmProdAds;
            }
        }
        private ObjectSet<SmProdAds> _SmProdAds;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProdCats> SmProdCats
        {
            get
            {
                if ((_SmProdCats == null))
                {
                    _SmProdCats = base.CreateObjectSet<SmProdCats>("SmProdCats");
                }
                return _SmProdCats;
            }
        }
        private ObjectSet<SmProdCats> _SmProdCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProdDescs> SmProdDescs
        {
            get
            {
                if ((_SmProdDescs == null))
                {
                    _SmProdDescs = base.CreateObjectSet<SmProdDescs>("SmProdDescs");
                }
                return _SmProdDescs;
            }
        }
        private ObjectSet<SmProdDescs> _SmProdDescs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProdInfoes> SmProdInfoes
        {
            get
            {
                if ((_SmProdInfoes == null))
                {
                    _SmProdInfoes = base.CreateObjectSet<SmProdInfoes>("SmProdInfoes");
                }
                return _SmProdInfoes;
            }
        }
        private ObjectSet<SmProdInfoes> _SmProdInfoes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProdStatus> SmProdStatuses
        {
            get
            {
                if ((_SmProdStatuses == null))
                {
                    _SmProdStatuses = base.CreateObjectSet<SmProdStatus>("SmProdStatuses");
                }
                return _SmProdStatuses;
            }
        }
        private ObjectSet<SmProdStatus> _SmProdStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProdSuppliers> SmProdSuppliers
        {
            get
            {
                if ((_SmProdSuppliers == null))
                {
                    _SmProdSuppliers = base.CreateObjectSet<SmProdSuppliers>("SmProdSuppliers");
                }
                return _SmProdSuppliers;
            }
        }
        private ObjectSet<SmProdSuppliers> _SmProdSuppliers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmProducts> SmProducts
        {
            get
            {
                if ((_SmProducts == null))
                {
                    _SmProducts = base.CreateObjectSet<SmProducts>("SmProducts");
                }
                return _SmProducts;
            }
        }
        private ObjectSet<SmProducts> _SmProducts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmRates> SmRates
        {
            get
            {
                if ((_SmRates == null))
                {
                    _SmRates = base.CreateObjectSet<SmRates>("SmRates");
                }
                return _SmRates;
            }
        }
        private ObjectSet<SmRates> _SmRates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmRateUoMs> SmRateUoMs
        {
            get
            {
                if ((_SmRateUoMs == null))
                {
                    _SmRateUoMs = base.CreateObjectSet<SmRateUoMs>("SmRateUoMs");
                }
                return _SmRateUoMs;
            }
        }
        private ObjectSet<SmRateUoMs> _SmRateUoMs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmSupplierInfoes> SmSupplierInfoes
        {
            get
            {
                if ((_SmSupplierInfoes == null))
                {
                    _SmSupplierInfoes = base.CreateObjectSet<SmSupplierInfoes>("SmSupplierInfoes");
                }
                return _SmSupplierInfoes;
            }
        }
        private ObjectSet<SmSupplierInfoes> _SmSupplierInfoes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmSuppliers> SmSuppliers
        {
            get
            {
                if ((_SmSuppliers == null))
                {
                    _SmSuppliers = base.CreateObjectSet<SmSuppliers>("SmSuppliers");
                }
                return _SmSuppliers;
            }
        }
        private ObjectSet<SmSuppliers> _SmSuppliers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlDataConnections> SqlDataConnections
        {
            get
            {
                if ((_SqlDataConnections == null))
                {
                    _SqlDataConnections = base.CreateObjectSet<SqlDataConnections>("SqlDataConnections");
                }
                return _SqlDataConnections;
            }
        }
        private ObjectSet<SqlDataConnections> _SqlDataConnections;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SrvActionCodes> SrvActionCodes
        {
            get
            {
                if ((_SrvActionCodes == null))
                {
                    _SrvActionCodes = base.CreateObjectSet<SrvActionCodes>("SrvActionCodes");
                }
                return _SrvActionCodes;
            }
        }
        private ObjectSet<SrvActionCodes> _SrvActionCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SrvActionItems> SrvActionItems
        {
            get
            {
                if ((_SrvActionItems == null))
                {
                    _SrvActionItems = base.CreateObjectSet<SrvActionItems>("SrvActionItems");
                }
                return _SrvActionItems;
            }
        }
        private ObjectSet<SrvActionItems> _SrvActionItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelBrands> SteelBrands
        {
            get
            {
                if ((_SteelBrands == null))
                {
                    _SteelBrands = base.CreateObjectSet<SteelBrands>("SteelBrands");
                }
                return _SteelBrands;
            }
        }
        private ObjectSet<SteelBrands> _SteelBrands;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelMainCats> SteelMainCats
        {
            get
            {
                if ((_SteelMainCats == null))
                {
                    _SteelMainCats = base.CreateObjectSet<SteelMainCats>("SteelMainCats");
                }
                return _SteelMainCats;
            }
        }
        private ObjectSet<SteelMainCats> _SteelMainCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelMaterialGrades> SteelMaterialGrades
        {
            get
            {
                if ((_SteelMaterialGrades == null))
                {
                    _SteelMaterialGrades = base.CreateObjectSet<SteelMaterialGrades>("SteelMaterialGrades");
                }
                return _SteelMaterialGrades;
            }
        }
        private ObjectSet<SteelMaterialGrades> _SteelMaterialGrades;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelMaterials> SteelMaterials
        {
            get
            {
                if ((_SteelMaterials == null))
                {
                    _SteelMaterials = base.CreateObjectSet<SteelMaterials>("SteelMaterials");
                }
                return _SteelMaterials;
            }
        }
        private ObjectSet<SteelMaterials> _SteelMaterials;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelOrigins> SteelOrigins
        {
            get
            {
                if ((_SteelOrigins == null))
                {
                    _SteelOrigins = base.CreateObjectSet<SteelOrigins>("SteelOrigins");
                }
                return _SteelOrigins;
            }
        }
        private ObjectSet<SteelOrigins> _SteelOrigins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelSizes> SteelSizes
        {
            get
            {
                if ((_SteelSizes == null))
                {
                    _SteelSizes = base.CreateObjectSet<SteelSizes>("SteelSizes");
                }
                return _SteelSizes;
            }
        }
        private ObjectSet<SteelSizes> _SteelSizes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SteelSubCats> SteelSubCats
        {
            get
            {
                if ((_SteelSubCats == null))
                {
                    _SteelSubCats = base.CreateObjectSet<SteelSubCats>("SteelSubCats");
                }
                return _SteelSubCats;
            }
        }
        private ObjectSet<SteelSubCats> _SteelSubCats;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupDocuments> SupDocuments
        {
            get
            {
                if ((_SupDocuments == null))
                {
                    _SupDocuments = base.CreateObjectSet<SupDocuments>("SupDocuments");
                }
                return _SupDocuments;
            }
        }
        private ObjectSet<SupDocuments> _SupDocuments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierActActionCodes> SupplierActActionCodes
        {
            get
            {
                if ((_SupplierActActionCodes == null))
                {
                    _SupplierActActionCodes = base.CreateObjectSet<SupplierActActionCodes>("SupplierActActionCodes");
                }
                return _SupplierActActionCodes;
            }
        }
        private ObjectSet<SupplierActActionCodes> _SupplierActActionCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierActActionStatus> SupplierActActionStatuses
        {
            get
            {
                if ((_SupplierActActionStatuses == null))
                {
                    _SupplierActActionStatuses = base.CreateObjectSet<SupplierActActionStatus>("SupplierActActionStatuses");
                }
                return _SupplierActActionStatuses;
            }
        }
        private ObjectSet<SupplierActActionStatus> _SupplierActActionStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierActivities> SupplierActivities
        {
            get
            {
                if ((_SupplierActivities == null))
                {
                    _SupplierActivities = base.CreateObjectSet<SupplierActivities>("SupplierActivities");
                }
                return _SupplierActivities;
            }
        }
        private ObjectSet<SupplierActivities> _SupplierActivities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierActivityTypes> SupplierActivityTypes
        {
            get
            {
                if ((_SupplierActivityTypes == null))
                {
                    _SupplierActivityTypes = base.CreateObjectSet<SupplierActivityTypes>("SupplierActivityTypes");
                }
                return _SupplierActivityTypes;
            }
        }
        private ObjectSet<SupplierActivityTypes> _SupplierActivityTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierActStatus> SupplierActStatuses
        {
            get
            {
                if ((_SupplierActStatuses == null))
                {
                    _SupplierActStatuses = base.CreateObjectSet<SupplierActStatus>("SupplierActStatuses");
                }
                return _SupplierActStatuses;
            }
        }
        private ObjectSet<SupplierActStatus> _SupplierActStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierContacts> SupplierContacts
        {
            get
            {
                if ((_SupplierContacts == null))
                {
                    _SupplierContacts = base.CreateObjectSet<SupplierContacts>("SupplierContacts");
                }
                return _SupplierContacts;
            }
        }
        private ObjectSet<SupplierContacts> _SupplierContacts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierContactStatus> SupplierContactStatuses
        {
            get
            {
                if ((_SupplierContactStatuses == null))
                {
                    _SupplierContactStatuses = base.CreateObjectSet<SupplierContactStatus>("SupplierContactStatuses");
                }
                return _SupplierContactStatuses;
            }
        }
        private ObjectSet<SupplierContactStatus> _SupplierContactStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierDocuments> SupplierDocuments
        {
            get
            {
                if ((_SupplierDocuments == null))
                {
                    _SupplierDocuments = base.CreateObjectSet<SupplierDocuments>("SupplierDocuments");
                }
                return _SupplierDocuments;
            }
        }
        private ObjectSet<SupplierDocuments> _SupplierDocuments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierInvItems> SupplierInvItems
        {
            get
            {
                if ((_SupplierInvItems == null))
                {
                    _SupplierInvItems = base.CreateObjectSet<SupplierInvItems>("SupplierInvItems");
                }
                return _SupplierInvItems;
            }
        }
        private ObjectSet<SupplierInvItems> _SupplierInvItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierItemRates> SupplierItemRates
        {
            get
            {
                if ((_SupplierItemRates == null))
                {
                    _SupplierItemRates = base.CreateObjectSet<SupplierItemRates>("SupplierItemRates");
                }
                return _SupplierItemRates;
            }
        }
        private ObjectSet<SupplierItemRates> _SupplierItemRates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierItems> SupplierItems
        {
            get
            {
                if ((_SupplierItems == null))
                {
                    _SupplierItems = base.CreateObjectSet<SupplierItems>("SupplierItems");
                }
                return _SupplierItems;
            }
        }
        private ObjectSet<SupplierItems> _SupplierItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierPoDtls> SupplierPoDtls
        {
            get
            {
                if ((_SupplierPoDtls == null))
                {
                    _SupplierPoDtls = base.CreateObjectSet<SupplierPoDtls>("SupplierPoDtls");
                }
                return _SupplierPoDtls;
            }
        }
        private ObjectSet<SupplierPoDtls> _SupplierPoDtls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierPoHdrs> SupplierPoHdrs
        {
            get
            {
                if ((_SupplierPoHdrs == null))
                {
                    _SupplierPoHdrs = base.CreateObjectSet<SupplierPoHdrs>("SupplierPoHdrs");
                }
                return _SupplierPoHdrs;
            }
        }
        private ObjectSet<SupplierPoHdrs> _SupplierPoHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierPoItems> SupplierPoItems
        {
            get
            {
                if ((_SupplierPoItems == null))
                {
                    _SupplierPoItems = base.CreateObjectSet<SupplierPoItems>("SupplierPoItems");
                }
                return _SupplierPoItems;
            }
        }
        private ObjectSet<SupplierPoItems> _SupplierPoItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierPoStatus> SupplierPoStatuses
        {
            get
            {
                if ((_SupplierPoStatuses == null))
                {
                    _SupplierPoStatuses = base.CreateObjectSet<SupplierPoStatus>("SupplierPoStatuses");
                }
                return _SupplierPoStatuses;
            }
        }
        private ObjectSet<SupplierPoStatus> _SupplierPoStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Suppliers> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Suppliers>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Suppliers> _Suppliers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierTypes> SupplierTypes
        {
            get
            {
                if ((_SupplierTypes == null))
                {
                    _SupplierTypes = base.CreateObjectSet<SupplierTypes>("SupplierTypes");
                }
                return _SupplierTypes;
            }
        }
        private ObjectSet<SupplierTypes> _SupplierTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierUnits> SupplierUnits
        {
            get
            {
                if ((_SupplierUnits == null))
                {
                    _SupplierUnits = base.CreateObjectSet<SupplierUnits>("SupplierUnits");
                }
                return _SupplierUnits;
            }
        }
        private ObjectSet<SupplierUnits> _SupplierUnits;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysAccessRoles> SysAccessRoles
        {
            get
            {
                if ((_SysAccessRoles == null))
                {
                    _SysAccessRoles = base.CreateObjectSet<SysAccessRoles>("SysAccessRoles");
                }
                return _SysAccessRoles;
            }
        }
        private ObjectSet<SysAccessRoles> _SysAccessRoles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysAccessUsers> SysAccessUsers
        {
            get
            {
                if ((_SysAccessUsers == null))
                {
                    _SysAccessUsers = base.CreateObjectSet<SysAccessUsers>("SysAccessUsers");
                }
                return _SysAccessUsers;
            }
        }
        private ObjectSet<SysAccessUsers> _SysAccessUsers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysCmdIdRefs> SysCmdIdRefs
        {
            get
            {
                if ((_SysCmdIdRefs == null))
                {
                    _SysCmdIdRefs = base.CreateObjectSet<SysCmdIdRefs>("SysCmdIdRefs");
                }
                return _SysCmdIdRefs;
            }
        }
        private ObjectSet<SysCmdIdRefs> _SysCmdIdRefs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysLabels> SysLabels
        {
            get
            {
                if ((_SysLabels == null))
                {
                    _SysLabels = base.CreateObjectSet<SysLabels>("SysLabels");
                }
                return _SysLabels;
            }
        }
        private ObjectSet<SysLabels> _SysLabels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysMenus> SysMenus
        {
            get
            {
                if ((_SysMenus == null))
                {
                    _SysMenus = base.CreateObjectSet<SysMenus>("SysMenus");
                }
                return _SysMenus;
            }
        }
        private ObjectSet<SysMenus> _SysMenus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysServiceMenus> SysServiceMenus
        {
            get
            {
                if ((_SysServiceMenus == null))
                {
                    _SysServiceMenus = base.CreateObjectSet<SysServiceMenus>("SysServiceMenus");
                }
                return _SysServiceMenus;
            }
        }
        private ObjectSet<SysServiceMenus> _SysServiceMenus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysServices> SysServices
        {
            get
            {
                if ((_SysServices == null))
                {
                    _SysServices = base.CreateObjectSet<SysServices>("SysServices");
                }
                return _SysServices;
            }
        }
        private ObjectSet<SysServices> _SysServices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysSettings> SysSettings
        {
            get
            {
                if ((_SysSettings == null))
                {
                    _SysSettings = base.CreateObjectSet<SysSettings>("SysSettings");
                }
                return _SysSettings;
            }
        }
        private ObjectSet<SysSettings> _SysSettings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysSetupTypes> SysSetupTypes
        {
            get
            {
                if ((_SysSetupTypes == null))
                {
                    _SysSetupTypes = base.CreateObjectSet<SysSetupTypes>("SysSetupTypes");
                }
                return _SysSetupTypes;
            }
        }
        private ObjectSet<SysSetupTypes> _SysSetupTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleBrands> VehicleBrands
        {
            get
            {
                if ((_VehicleBrands == null))
                {
                    _VehicleBrands = base.CreateObjectSet<VehicleBrands>("VehicleBrands");
                }
                return _VehicleBrands;
            }
        }
        private ObjectSet<VehicleBrands> _VehicleBrands;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleDrives> VehicleDrives
        {
            get
            {
                if ((_VehicleDrives == null))
                {
                    _VehicleDrives = base.CreateObjectSet<VehicleDrives>("VehicleDrives");
                }
                return _VehicleDrives;
            }
        }
        private ObjectSet<VehicleDrives> _VehicleDrives;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleFuels> VehicleFuels
        {
            get
            {
                if ((_VehicleFuels == null))
                {
                    _VehicleFuels = base.CreateObjectSet<VehicleFuels>("VehicleFuels");
                }
                return _VehicleFuels;
            }
        }
        private ObjectSet<VehicleFuels> _VehicleFuels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleModels> VehicleModels
        {
            get
            {
                if ((_VehicleModels == null))
                {
                    _VehicleModels = base.CreateObjectSet<VehicleModels>("VehicleModels");
                }
                return _VehicleModels;
            }
        }
        private ObjectSet<VehicleModels> _VehicleModels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicles> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicles>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicles> _Vehicles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleTransmissions> VehicleTransmissions
        {
            get
            {
                if ((_VehicleTransmissions == null))
                {
                    _VehicleTransmissions = base.CreateObjectSet<VehicleTransmissions>("VehicleTransmissions");
                }
                return _VehicleTransmissions;
            }
        }
        private ObjectSet<VehicleTransmissions> _VehicleTransmissions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleTypes> VehicleTypes
        {
            get
            {
                if ((_VehicleTypes == null))
                {
                    _VehicleTypes = base.CreateObjectSet<VehicleTypes>("VehicleTypes");
                }
                return _VehicleTypes;
            }
        }
        private ObjectSet<VehicleTypes> _VehicleTypes;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntCategories EntitySet.
        /// </summary>
        public void AddToAccntCategories(AccntCategories accntCategories)
        {
            base.AddObject("AccntCategories", accntCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntLedgers EntitySet.
        /// </summary>
        public void AddToAccntLedgers(AccntLedgers accntLedgers)
        {
            base.AddObject("AccntLedgers", accntLedgers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntMains EntitySet.
        /// </summary>
        public void AddToAccntMains(AccntMains accntMains)
        {
            base.AddObject("AccntMains", accntMains);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntTrxDtls EntitySet.
        /// </summary>
        public void AddToAccntTrxDtls(AccntTrxDtls accntTrxDtls)
        {
            base.AddObject("AccntTrxDtls", accntTrxDtls);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntTrxHdrs EntitySet.
        /// </summary>
        public void AddToAccntTrxHdrs(AccntTrxHdrs accntTrxHdrs)
        {
            base.AddObject("AccntTrxHdrs", accntTrxHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntTrxHists EntitySet.
        /// </summary>
        public void AddToAccntTrxHists(AccntTrxHists accntTrxHists)
        {
            base.AddObject("AccntTrxHists", accntTrxHists);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntTrxTypes EntitySet.
        /// </summary>
        public void AddToAccntTrxTypes(AccntTrxTypes accntTrxTypes)
        {
            base.AddObject("AccntTrxTypes", accntTrxTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AccntTypes EntitySet.
        /// </summary>
        public void AddToAccntTypes(AccntTypes accntTypes)
        {
            base.AddObject("AccntTypes", accntTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AdminEmails EntitySet.
        /// </summary>
        public void AddToAdminEmails(AdminEmails adminEmails)
        {
            base.AddObject("AdminEmails", adminEmails);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsCostCenters EntitySet.
        /// </summary>
        public void AddToAsCostCenters(AsCostCenters asCostCenters)
        {
            base.AddObject("AsCostCenters", asCostCenters);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsExpBillers EntitySet.
        /// </summary>
        public void AddToAsExpBillers(AsExpBillers asExpBillers)
        {
            base.AddObject("AsExpBillers", asExpBillers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsExpCategories EntitySet.
        /// </summary>
        public void AddToAsExpCategories(AsExpCategories asExpCategories)
        {
            base.AddObject("AsExpCategories", asExpCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsExpenses EntitySet.
        /// </summary>
        public void AddToAsExpenses(AsExpenses asExpenses)
        {
            base.AddObject("AsExpenses", asExpenses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsIncCategories EntitySet.
        /// </summary>
        public void AddToAsIncCategories(AsIncCategories asIncCategories)
        {
            base.AddObject("AsIncCategories", asIncCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsIncClients EntitySet.
        /// </summary>
        public void AddToAsIncClients(AsIncClients asIncClients)
        {
            base.AddObject("AsIncClients", asIncClients);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetRoleClaims EntitySet.
        /// </summary>
        public void AddToAspNetRoleClaims(AspNetRoleClaims aspNetRoleClaims)
        {
            base.AddObject("AspNetRoleClaims", aspNetRoleClaims);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetRoles EntitySet.
        /// </summary>
        public void AddToAspNetRoles(AspNetRoles aspNetRoles)
        {
            base.AddObject("AspNetRoles", aspNetRoles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserClaims EntitySet.
        /// </summary>
        public void AddToAspNetUserClaims(AspNetUserClaims aspNetUserClaims)
        {
            base.AddObject("AspNetUserClaims", aspNetUserClaims);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserLogins EntitySet.
        /// </summary>
        public void AddToAspNetUserLogins(AspNetUserLogins aspNetUserLogins)
        {
            base.AddObject("AspNetUserLogins", aspNetUserLogins);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUsers EntitySet.
        /// </summary>
        public void AddToAspNetUsers(AspNetUsers aspNetUsers)
        {
            base.AddObject("AspNetUsers", aspNetUsers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AsSales EntitySet.
        /// </summary>
        public void AddToAsSales(AsSales asSales)
        {
            base.AddObject("AsSales", asSales);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet.
        /// </summary>
        public void AddToBanks(Banks banks)
        {
            base.AddObject("Banks", banks);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the BlasterLogs EntitySet.
        /// </summary>
        public void AddToBlasterLogs(BlasterLogs blasterLogs)
        {
            base.AddObject("BlasterLogs", blasterLogs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Branches EntitySet.
        /// </summary>
        public void AddToBranches(Branches branches)
        {
            base.AddObject("Branches", branches);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarCategories EntitySet.
        /// </summary>
        public void AddToCarCategories(CarCategories carCategories)
        {
            base.AddObject("CarCategories", carCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarDestinations EntitySet.
        /// </summary>
        public void AddToCarDestinations(CarDestinations carDestinations)
        {
            base.AddObject("CarDestinations", carDestinations);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarImages EntitySet.
        /// </summary>
        public void AddToCarImages(CarImages carImages)
        {
            base.AddObject("CarImages", carImages);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarRateGroups EntitySet.
        /// </summary>
        public void AddToCarRateGroups(CarRateGroups carRateGroups)
        {
            base.AddObject("CarRateGroups", carRateGroups);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarRatePackages EntitySet.
        /// </summary>
        public void AddToCarRatePackages(CarRatePackages carRatePackages)
        {
            base.AddObject("CarRatePackages", carRatePackages);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarRates EntitySet.
        /// </summary>
        public void AddToCarRates(CarRates carRates)
        {
            base.AddObject("CarRates", carRates);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarRateUnitPackages EntitySet.
        /// </summary>
        public void AddToCarRateUnitPackages(CarRateUnitPackages carRateUnitPackages)
        {
            base.AddObject("CarRateUnitPackages", carRateUnitPackages);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarReservations EntitySet.
        /// </summary>
        public void AddToCarReservations(CarReservations carReservations)
        {
            base.AddObject("CarReservations", carReservations);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarResPackages EntitySet.
        /// </summary>
        public void AddToCarResPackages(CarResPackages carResPackages)
        {
            base.AddObject("CarResPackages", carResPackages);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarUnitMetas EntitySet.
        /// </summary>
        public void AddToCarUnitMetas(CarUnitMetas carUnitMetas)
        {
            base.AddObject("CarUnitMetas", carUnitMetas);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarUnits EntitySet.
        /// </summary>
        public void AddToCarUnits(CarUnits carUnits)
        {
            base.AddObject("CarUnits", carUnits);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CarViewPages EntitySet.
        /// </summary>
        public void AddToCarViewPages(CarViewPages carViewPages)
        {
            base.AddObject("CarViewPages", carViewPages);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CashExpenses EntitySet.
        /// </summary>
        public void AddToCashExpenses(CashExpenses cashExpenses)
        {
            base.AddObject("CashExpenses", cashExpenses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CheckerActivities EntitySet.
        /// </summary>
        public void AddToCheckerActivities(CheckerActivities checkerActivities)
        {
            base.AddObject("CheckerActivities", checkerActivities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CheckerActivityTypes EntitySet.
        /// </summary>
        public void AddToCheckerActivityTypes(CheckerActivityTypes checkerActivityTypes)
        {
            base.AddObject("CheckerActivityTypes", checkerActivityTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet.
        /// </summary>
        public void AddToCities(Cities cities)
        {
            base.AddObject("Cities", cities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CoopMemberItems EntitySet.
        /// </summary>
        public void AddToCoopMemberItems(CoopMemberItems coopMemberItems)
        {
            base.AddObject("CoopMemberItems", coopMemberItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CoopMembers EntitySet.
        /// </summary>
        public void AddToCoopMembers(CoopMembers coopMembers)
        {
            base.AddObject("CoopMembers", coopMembers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet.
        /// </summary>
        public void AddToCountries(Countries countries)
        {
            base.AddObject("Countries", countries);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet.
        /// </summary>
        public void AddToCurrencies(Currencies currencies)
        {
            base.AddObject("Currencies", currencies);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustAssocTypes EntitySet.
        /// </summary>
        public void AddToCustAssocTypes(CustAssocTypes custAssocTypes)
        {
            base.AddObject("CustAssocTypes", custAssocTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustCategories EntitySet.
        /// </summary>
        public void AddToCustCategories(CustCategories custCategories)
        {
            base.AddObject("CustCategories", custCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustCats EntitySet.
        /// </summary>
        public void AddToCustCats(CustCats custCats)
        {
            base.AddObject("CustCats", custCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntAccountTypes EntitySet.
        /// </summary>
        public void AddToCustEntAccountTypes(CustEntAccountTypes custEntAccountTypes)
        {
            base.AddObject("CustEntAccountTypes", custEntAccountTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActActionCodes EntitySet.
        /// </summary>
        public void AddToCustEntActActionCodes(CustEntActActionCodes custEntActActionCodes)
        {
            base.AddObject("CustEntActActionCodes", custEntActActionCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActActionStatuses EntitySet.
        /// </summary>
        public void AddToCustEntActActionStatuses(CustEntActActionStatus custEntActActionStatus)
        {
            base.AddObject("CustEntActActionStatuses", custEntActActionStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActivities EntitySet.
        /// </summary>
        public void AddToCustEntActivities(CustEntActivities custEntActivities)
        {
            base.AddObject("CustEntActivities", custEntActivities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActivityTypes EntitySet.
        /// </summary>
        public void AddToCustEntActivityTypes(CustEntActivityTypes custEntActivityTypes)
        {
            base.AddObject("CustEntActivityTypes", custEntActivityTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActPostSales EntitySet.
        /// </summary>
        public void AddToCustEntActPostSales(CustEntActPostSales custEntActPostSales)
        {
            base.AddObject("CustEntActPostSales", custEntActPostSales);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActPostSaleStatuses EntitySet.
        /// </summary>
        public void AddToCustEntActPostSaleStatuses(CustEntActPostSaleStatus custEntActPostSaleStatus)
        {
            base.AddObject("CustEntActPostSaleStatuses", custEntActPostSaleStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActStatuses EntitySet.
        /// </summary>
        public void AddToCustEntActStatuses(CustEntActStatus custEntActStatus)
        {
            base.AddObject("CustEntActStatuses", custEntActStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntActTypes EntitySet.
        /// </summary>
        public void AddToCustEntActTypes(CustEntActTypes custEntActTypes)
        {
            base.AddObject("CustEntActTypes", custEntActTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntAddresses EntitySet.
        /// </summary>
        public void AddToCustEntAddresses(CustEntAddresses custEntAddresses)
        {
            base.AddObject("CustEntAddresses", custEntAddresses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntAssigns EntitySet.
        /// </summary>
        public void AddToCustEntAssigns(CustEntAssigns custEntAssigns)
        {
            base.AddObject("CustEntAssigns", custEntAssigns);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntCats EntitySet.
        /// </summary>
        public void AddToCustEntCats(CustEntCats custEntCats)
        {
            base.AddObject("CustEntCats", custEntCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntClauses EntitySet.
        /// </summary>
        public void AddToCustEntClauses(CustEntClauses custEntClauses)
        {
            base.AddObject("CustEntClauses", custEntClauses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntDocuments EntitySet.
        /// </summary>
        public void AddToCustEntDocuments(CustEntDocuments custEntDocuments)
        {
            base.AddObject("CustEntDocuments", custEntDocuments);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntities EntitySet.
        /// </summary>
        public void AddToCustEntities(CustEntities custEntities)
        {
            base.AddObject("CustEntities", custEntities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustEntMains EntitySet.
        /// </summary>
        public void AddToCustEntMains(CustEntMains custEntMains)
        {
            base.AddObject("CustEntMains", custEntMains);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustFileRefs EntitySet.
        /// </summary>
        public void AddToCustFileRefs(CustFileRefs custFileRefs)
        {
            base.AddObject("CustFileRefs", custFileRefs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustFiles EntitySet.
        /// </summary>
        public void AddToCustFiles(CustFiles custFiles)
        {
            base.AddObject("CustFiles", custFiles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustNotifActivities EntitySet.
        /// </summary>
        public void AddToCustNotifActivities(CustNotifActivities custNotifActivities)
        {
            base.AddObject("CustNotifActivities", custNotifActivities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustNotifRecipients EntitySet.
        /// </summary>
        public void AddToCustNotifRecipients(CustNotifRecipients custNotifRecipients)
        {
            base.AddObject("CustNotifRecipients", custNotifRecipients);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustNotifs EntitySet.
        /// </summary>
        public void AddToCustNotifs(CustNotifs custNotifs)
        {
            base.AddObject("CustNotifs", custNotifs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet.
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustSalesCategories EntitySet.
        /// </summary>
        public void AddToCustSalesCategories(CustSalesCategories custSalesCategories)
        {
            base.AddObject("CustSalesCategories", custSalesCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustSocialAccs EntitySet.
        /// </summary>
        public void AddToCustSocialAccs(CustSocialAccs custSocialAccs)
        {
            base.AddObject("CustSocialAccs", custSocialAccs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the DataGroupAssigns EntitySet.
        /// </summary>
        public void AddToDataGroupAssigns(DataGroupAssigns dataGroupAssigns)
        {
            base.AddObject("DataGroupAssigns", dataGroupAssigns);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the DataGroups EntitySet.
        /// </summary>
        public void AddToDataGroups(DataGroups dataGroups)
        {
            base.AddObject("DataGroups", dataGroups);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Destinations EntitySet.
        /// </summary>
        public void AddToDestinations(Destinations destinations)
        {
            base.AddObject("Destinations", destinations);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the DriverInstructions EntitySet.
        /// </summary>
        public void AddToDriverInstructions(DriverInstructions driverInstructions)
        {
            base.AddObject("DriverInstructions", driverInstructions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EmailBlasterLogs EntitySet.
        /// </summary>
        public void AddToEmailBlasterLogs(EmailBlasterLogs emailBlasterLogs)
        {
            base.AddObject("EmailBlasterLogs", emailBlasterLogs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EmailBlasterTemplates EntitySet.
        /// </summary>
        public void AddToEmailBlasterTemplates(EmailBlasterTemplates emailBlasterTemplates)
        {
            base.AddObject("EmailBlasterTemplates", emailBlasterTemplates);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EntAddresses EntitySet.
        /// </summary>
        public void AddToEntAddresses(EntAddresses entAddresses)
        {
            base.AddObject("EntAddresses", entAddresses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EntBusinesses EntitySet.
        /// </summary>
        public void AddToEntBusinesses(EntBusinesses entBusinesses)
        {
            base.AddObject("EntBusinesses", entBusinesses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EntContacts EntitySet.
        /// </summary>
        public void AddToEntContacts(EntContacts entContacts)
        {
            base.AddObject("EntContacts", entContacts);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EntServices EntitySet.
        /// </summary>
        public void AddToEntServices(EntServices entServices)
        {
            base.AddObject("EntServices", entServices);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EntSettings EntitySet.
        /// </summary>
        public void AddToEntSettings(EntSettings entSettings)
        {
            base.AddObject("EntSettings", entSettings);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EntSupportFiles EntitySet.
        /// </summary>
        public void AddToEntSupportFiles(EntSupportFiles entSupportFiles)
        {
            base.AddObject("EntSupportFiles", entSupportFiles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Expenses EntitySet.
        /// </summary>
        public void AddToExpenses(Expenses expenses)
        {
            base.AddObject("Expenses", expenses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ExpensesCategories EntitySet.
        /// </summary>
        public void AddToExpensesCategories(ExpensesCategories expensesCategories)
        {
            base.AddObject("ExpensesCategories", expensesCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrDtrs EntitySet.
        /// </summary>
        public void AddToHrDtrs(HrDtrs hrDtrs)
        {
            base.AddObject("HrDtrs", hrDtrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrDtrStatuses EntitySet.
        /// </summary>
        public void AddToHrDtrStatuses(HrDtrStatus hrDtrStatus)
        {
            base.AddObject("HrDtrStatuses", hrDtrStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPayrolls EntitySet.
        /// </summary>
        public void AddToHrPayrolls(HrPayrolls hrPayrolls)
        {
            base.AddObject("HrPayrolls", hrPayrolls);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPerDocs EntitySet.
        /// </summary>
        public void AddToHrPerDocs(HrPerDocs hrPerDocs)
        {
            base.AddObject("HrPerDocs", hrPerDocs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPerPositions EntitySet.
        /// </summary>
        public void AddToHrPerPositions(HrPerPositions hrPerPositions)
        {
            base.AddObject("HrPerPositions", hrPerPositions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPerSkills EntitySet.
        /// </summary>
        public void AddToHrPerSkills(HrPerSkills hrPerSkills)
        {
            base.AddObject("HrPerSkills", hrPerSkills);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPersonels EntitySet.
        /// </summary>
        public void AddToHrPersonels(HrPersonels hrPersonels)
        {
            base.AddObject("HrPersonels", hrPersonels);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPersonelStatuses EntitySet.
        /// </summary>
        public void AddToHrPersonelStatuses(HrPersonelStatus hrPersonelStatus)
        {
            base.AddObject("HrPersonelStatuses", hrPersonelStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPerTrainings EntitySet.
        /// </summary>
        public void AddToHrPerTrainings(HrPerTrainings hrPerTrainings)
        {
            base.AddObject("HrPerTrainings", hrPerTrainings);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrPositions EntitySet.
        /// </summary>
        public void AddToHrPositions(HrPositions hrPositions)
        {
            base.AddObject("HrPositions", hrPositions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrProficiencies EntitySet.
        /// </summary>
        public void AddToHrProficiencies(HrProficiencies hrProficiencies)
        {
            base.AddObject("HrProficiencies", hrProficiencies);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrProfiles EntitySet.
        /// </summary>
        public void AddToHrProfiles(HrProfiles hrProfiles)
        {
            base.AddObject("HrProfiles", hrProfiles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrSalaries EntitySet.
        /// </summary>
        public void AddToHrSalaries(HrSalaries hrSalaries)
        {
            base.AddObject("HrSalaries", hrSalaries);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrSkills EntitySet.
        /// </summary>
        public void AddToHrSkills(HrSkills hrSkills)
        {
            base.AddObject("HrSkills", hrSkills);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrTrainings EntitySet.
        /// </summary>
        public void AddToHrTrainings(HrTrainings hrTrainings)
        {
            base.AddObject("HrTrainings", hrTrainings);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the HrTrainingSkills EntitySet.
        /// </summary>
        public void AddToHrTrainingSkills(HrTrainingSkills hrTrainingSkills)
        {
            base.AddObject("HrTrainingSkills", hrTrainingSkills);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvAdjHdrs EntitySet.
        /// </summary>
        public void AddToInvAdjHdrs(InvAdjHdrs invAdjHdrs)
        {
            base.AddObject("InvAdjHdrs", invAdjHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvAdjItems EntitySet.
        /// </summary>
        public void AddToInvAdjItems(InvAdjItems invAdjItems)
        {
            base.AddObject("InvAdjItems", invAdjItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCarGateControls EntitySet.
        /// </summary>
        public void AddToInvCarGateControls(InvCarGateControls invCarGateControls)
        {
            base.AddObject("InvCarGateControls", invCarGateControls);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCarRecords EntitySet.
        /// </summary>
        public void AddToInvCarRecords(InvCarRecords invCarRecords)
        {
            base.AddObject("InvCarRecords", invCarRecords);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCarRecordTypes EntitySet.
        /// </summary>
        public void AddToInvCarRecordTypes(InvCarRecordTypes invCarRecordTypes)
        {
            base.AddObject("InvCarRecordTypes", invCarRecordTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCatCustomSpecs EntitySet.
        /// </summary>
        public void AddToInvCatCustomSpecs(InvCatCustomSpecs invCatCustomSpecs)
        {
            base.AddObject("InvCatCustomSpecs", invCatCustomSpecs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCategories EntitySet.
        /// </summary>
        public void AddToInvCategories(InvCategories invCategories)
        {
            base.AddObject("InvCategories", invCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCategorySpecDefs EntitySet.
        /// </summary>
        public void AddToInvCategorySpecDefs(InvCategorySpecDefs invCategorySpecDefs)
        {
            base.AddObject("InvCategorySpecDefs", invCategorySpecDefs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvClassifications EntitySet.
        /// </summary>
        public void AddToInvClassifications(InvClassifications invClassifications)
        {
            base.AddObject("InvClassifications", invClassifications);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCustomSpecs EntitySet.
        /// </summary>
        public void AddToInvCustomSpecs(InvCustomSpecs invCustomSpecs)
        {
            base.AddObject("InvCustomSpecs", invCustomSpecs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvCustomSpecTypes EntitySet.
        /// </summary>
        public void AddToInvCustomSpecTypes(InvCustomSpecTypes invCustomSpecTypes)
        {
            base.AddObject("InvCustomSpecTypes", invCustomSpecTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemBrands EntitySet.
        /// </summary>
        public void AddToInvItemBrands(InvItemBrands invItemBrands)
        {
            base.AddObject("InvItemBrands", invItemBrands);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemCategories EntitySet.
        /// </summary>
        public void AddToInvItemCategories(InvItemCategories invItemCategories)
        {
            base.AddObject("InvItemCategories", invItemCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemCats EntitySet.
        /// </summary>
        public void AddToInvItemCats(InvItemCats invItemCats)
        {
            base.AddObject("InvItemCats", invItemCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemClasses EntitySet.
        /// </summary>
        public void AddToInvItemClasses(InvItemClasses invItemClasses)
        {
            base.AddObject("InvItemClasses", invItemClasses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemCustomSpecs EntitySet.
        /// </summary>
        public void AddToInvItemCustomSpecs(InvItemCustomSpecs invItemCustomSpecs)
        {
            base.AddObject("InvItemCustomSpecs", invItemCustomSpecs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemMasters EntitySet.
        /// </summary>
        public void AddToInvItemMasters(InvItemMasters invItemMasters)
        {
            base.AddObject("InvItemMasters", invItemMasters);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemOrigins EntitySet.
        /// </summary>
        public void AddToInvItemOrigins(InvItemOrigins invItemOrigins)
        {
            base.AddObject("InvItemOrigins", invItemOrigins);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItems EntitySet.
        /// </summary>
        public void AddToInvItems(InvItems invItems)
        {
            base.AddObject("InvItems", invItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemSpec_Steels EntitySet.
        /// </summary>
        public void AddToInvItemSpec_Steels(InvItemSpec_Steel invItemSpec_Steel)
        {
            base.AddObject("InvItemSpec_Steels", invItemSpec_Steel);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvItemSysDefinedSpecs EntitySet.
        /// </summary>
        public void AddToInvItemSysDefinedSpecs(InvItemSysDefinedSpecs invItemSysDefinedSpecs)
        {
            base.AddObject("InvItemSysDefinedSpecs", invItemSysDefinedSpecs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvPoApprovals EntitySet.
        /// </summary>
        public void AddToInvPoApprovals(InvPoApprovals invPoApprovals)
        {
            base.AddObject("InvPoApprovals", invPoApprovals);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvPoHdrs EntitySet.
        /// </summary>
        public void AddToInvPoHdrs(InvPoHdrs invPoHdrs)
        {
            base.AddObject("InvPoHdrs", invPoHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvPoHdrStatuses EntitySet.
        /// </summary>
        public void AddToInvPoHdrStatuses(InvPoHdrStatus invPoHdrStatus)
        {
            base.AddObject("InvPoHdrStatuses", invPoHdrStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvPoItems EntitySet.
        /// </summary>
        public void AddToInvPoItems(InvPoItems invPoItems)
        {
            base.AddObject("InvPoItems", invPoItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvRecHdrs EntitySet.
        /// </summary>
        public void AddToInvRecHdrs(InvRecHdrs invRecHdrs)
        {
            base.AddObject("InvRecHdrs", invRecHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvRecItems EntitySet.
        /// </summary>
        public void AddToInvRecItems(InvRecItems invRecItems)
        {
            base.AddObject("InvRecItems", invRecItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvRequestHdrs EntitySet.
        /// </summary>
        public void AddToInvRequestHdrs(InvRequestHdrs invRequestHdrs)
        {
            base.AddObject("InvRequestHdrs", invRequestHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvRequestItems EntitySet.
        /// </summary>
        public void AddToInvRequestItems(InvRequestItems invRequestItems)
        {
            base.AddObject("InvRequestItems", invRequestItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvStoreAreas EntitySet.
        /// </summary>
        public void AddToInvStoreAreas(InvStoreAreas invStoreAreas)
        {
            base.AddObject("InvStoreAreas", invStoreAreas);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvStores EntitySet.
        /// </summary>
        public void AddToInvStores(InvStores invStores)
        {
            base.AddObject("InvStores", invStores);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvStoreUsers EntitySet.
        /// </summary>
        public void AddToInvStoreUsers(InvStoreUsers invStoreUsers)
        {
            base.AddObject("InvStoreUsers", invStoreUsers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvSupplierItems EntitySet.
        /// </summary>
        public void AddToInvSupplierItems(InvSupplierItems invSupplierItems)
        {
            base.AddObject("InvSupplierItems", invSupplierItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvSuppliers EntitySet.
        /// </summary>
        public void AddToInvSuppliers(InvSuppliers invSuppliers)
        {
            base.AddObject("InvSuppliers", invSuppliers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxApprovals EntitySet.
        /// </summary>
        public void AddToInvTrxApprovals(InvTrxApprovals invTrxApprovals)
        {
            base.AddObject("InvTrxApprovals", invTrxApprovals);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxDtlOperators EntitySet.
        /// </summary>
        public void AddToInvTrxDtlOperators(InvTrxDtlOperators invTrxDtlOperators)
        {
            base.AddObject("InvTrxDtlOperators", invTrxDtlOperators);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxDtls EntitySet.
        /// </summary>
        public void AddToInvTrxDtls(InvTrxDtls invTrxDtls)
        {
            base.AddObject("InvTrxDtls", invTrxDtls);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxDtlxItemMasters EntitySet.
        /// </summary>
        public void AddToInvTrxDtlxItemMasters(InvTrxDtlxItemMasters invTrxDtlxItemMasters)
        {
            base.AddObject("InvTrxDtlxItemMasters", invTrxDtlxItemMasters);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxHdrs EntitySet.
        /// </summary>
        public void AddToInvTrxHdrs(InvTrxHdrs invTrxHdrs)
        {
            base.AddObject("InvTrxHdrs", invTrxHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxHdrStatuses EntitySet.
        /// </summary>
        public void AddToInvTrxHdrStatuses(InvTrxHdrStatus invTrxHdrStatus)
        {
            base.AddObject("InvTrxHdrStatuses", invTrxHdrStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTrxTypes EntitySet.
        /// </summary>
        public void AddToInvTrxTypes(InvTrxTypes invTrxTypes)
        {
            base.AddObject("InvTrxTypes", invTrxTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvTypes EntitySet.
        /// </summary>
        public void AddToInvTypes(InvTypes invTypes)
        {
            base.AddObject("InvTypes", invTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvUomConversions EntitySet.
        /// </summary>
        public void AddToInvUomConversions(InvUomConversions invUomConversions)
        {
            base.AddObject("InvUomConversions", invUomConversions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvUomConvItems EntitySet.
        /// </summary>
        public void AddToInvUomConvItems(InvUomConvItems invUomConvItems)
        {
            base.AddObject("InvUomConvItems", invUomConvItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvUoms EntitySet.
        /// </summary>
        public void AddToInvUoms(InvUoms invUoms)
        {
            base.AddObject("InvUoms", invUoms);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvWarningLevels EntitySet.
        /// </summary>
        public void AddToInvWarningLevels(InvWarningLevels invWarningLevels)
        {
            base.AddObject("InvWarningLevels", invWarningLevels);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvWarningTypes EntitySet.
        /// </summary>
        public void AddToInvWarningTypes(InvWarningTypes invWarningTypes)
        {
            base.AddObject("InvWarningTypes", invWarningTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobActions EntitySet.
        /// </summary>
        public void AddToJobActions(JobActions jobActions)
        {
            base.AddObject("JobActions", jobActions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobChecklists EntitySet.
        /// </summary>
        public void AddToJobChecklists(JobChecklists jobChecklists)
        {
            base.AddObject("JobChecklists", jobChecklists);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobContacts EntitySet.
        /// </summary>
        public void AddToJobContacts(JobContacts jobContacts)
        {
            base.AddObject("JobContacts", jobContacts);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobEntMains EntitySet.
        /// </summary>
        public void AddToJobEntMains(JobEntMains jobEntMains)
        {
            base.AddObject("JobEntMains", jobEntMains);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobExpenses EntitySet.
        /// </summary>
        public void AddToJobExpenses(JobExpenses jobExpenses)
        {
            base.AddObject("JobExpenses", jobExpenses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobItineraries EntitySet.
        /// </summary>
        public void AddToJobItineraries(JobItineraries jobItineraries)
        {
            base.AddObject("JobItineraries", jobItineraries);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobMains EntitySet.
        /// </summary>
        public void AddToJobMains(JobMains jobMains)
        {
            base.AddObject("JobMains", jobMains);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobNotes EntitySet.
        /// </summary>
        public void AddToJobNotes(JobNotes jobNotes)
        {
            base.AddObject("JobNotes", jobNotes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobNotificationRequests EntitySet.
        /// </summary>
        public void AddToJobNotificationRequests(JobNotificationRequests jobNotificationRequests)
        {
            base.AddObject("JobNotificationRequests", jobNotificationRequests);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobPayments EntitySet.
        /// </summary>
        public void AddToJobPayments(JobPayments jobPayments)
        {
            base.AddObject("JobPayments", jobPayments);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobPickups EntitySet.
        /// </summary>
        public void AddToJobPickups(JobPickups jobPickups)
        {
            base.AddObject("JobPickups", jobPickups);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobPosts EntitySet.
        /// </summary>
        public void AddToJobPosts(JobPosts jobPosts)
        {
            base.AddObject("JobPosts", jobPosts);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobServiceItems EntitySet.
        /// </summary>
        public void AddToJobServiceItems(JobServiceItems jobServiceItems)
        {
            base.AddObject("JobServiceItems", jobServiceItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobServicePickups EntitySet.
        /// </summary>
        public void AddToJobServicePickups(JobServicePickups jobServicePickups)
        {
            base.AddObject("JobServicePickups", jobServicePickups);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobServices EntitySet.
        /// </summary>
        public void AddToJobServices(JobServices jobServices)
        {
            base.AddObject("JobServices", jobServices);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobStatuses EntitySet.
        /// </summary>
        public void AddToJobStatuses(JobStatus jobStatus)
        {
            base.AddObject("JobStatuses", jobStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobThrus EntitySet.
        /// </summary>
        public void AddToJobThrus(JobThrus jobThrus)
        {
            base.AddObject("JobThrus", jobThrus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobTrails EntitySet.
        /// </summary>
        public void AddToJobTrails(JobTrails jobTrails)
        {
            base.AddObject("JobTrails", jobTrails);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobTypes EntitySet.
        /// </summary>
        public void AddToJobTypes(JobTypes jobTypes)
        {
            base.AddObject("JobTypes", jobTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JobVehicles EntitySet.
        /// </summary>
        public void AddToJobVehicles(JobVehicles jobVehicles)
        {
            base.AddObject("JobVehicles", jobVehicles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the NotifRecipients EntitySet.
        /// </summary>
        public void AddToNotifRecipients(NotifRecipients notifRecipients)
        {
            base.AddObject("NotifRecipients", notifRecipients);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the OnlineReservations EntitySet.
        /// </summary>
        public void AddToOnlineReservations(OnlineReservations onlineReservations)
        {
            base.AddObject("OnlineReservations", onlineReservations);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PaypalAccounts EntitySet.
        /// </summary>
        public void AddToPaypalAccounts(PaypalAccounts paypalAccounts)
        {
            base.AddObject("PaypalAccounts", paypalAccounts);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PaypalTransactions EntitySet.
        /// </summary>
        public void AddToPaypalTransactions(PaypalTransactions paypalTransactions)
        {
            base.AddObject("PaypalTransactions", paypalTransactions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PickupInstructions EntitySet.
        /// </summary>
        public void AddToPickupInstructions(PickupInstructions pickupInstructions)
        {
            base.AddObject("PickupInstructions", pickupInstructions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PkgDestinations EntitySet.
        /// </summary>
        public void AddToPkgDestinations(PkgDestinations pkgDestinations)
        {
            base.AddObject("PkgDestinations", pkgDestinations);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PortalCustomers EntitySet.
        /// </summary>
        public void AddToPortalCustomers(PortalCustomers portalCustomers)
        {
            base.AddObject("PortalCustomers", portalCustomers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PreDefinedNotes EntitySet.
        /// </summary>
        public void AddToPreDefinedNotes(PreDefinedNotes preDefinedNotes)
        {
            base.AddObject("PreDefinedNotes", preDefinedNotes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategories EntitySet.
        /// </summary>
        public void AddToProductCategories(ProductCategories productCategories)
        {
            base.AddObject("ProductCategories", productCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductConditions EntitySet.
        /// </summary>
        public void AddToProductConditions(ProductConditions productConditions)
        {
            base.AddObject("ProductConditions", productConditions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductImages1s EntitySet.
        /// </summary>
        public void AddToProductImages1s(ProductImages1 productImages1)
        {
            base.AddObject("ProductImages1s", productImages1);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductPrices EntitySet.
        /// </summary>
        public void AddToProductPrices(ProductPrices productPrices)
        {
            base.AddObject("ProductPrices", productPrices);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductProdCats EntitySet.
        /// </summary>
        public void AddToProductProdCats(ProductProdCats productProdCats)
        {
            base.AddObject("ProductProdCats", productProdCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet.
        /// </summary>
        public void AddToProducts(Products products)
        {
            base.AddObject("Products", products);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RateGroups EntitySet.
        /// </summary>
        public void AddToRateGroups(RateGroups rateGroups)
        {
            base.AddObject("RateGroups", rateGroups);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet.
        /// </summary>
        public void AddToReports(Reports reports)
        {
            base.AddObject("Reports", reports);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RptAccessTypes EntitySet.
        /// </summary>
        public void AddToRptAccessTypes(RptAccessTypes rptAccessTypes)
        {
            base.AddObject("RptAccessTypes", rptAccessTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RptCategories EntitySet.
        /// </summary>
        public void AddToRptCategories(RptCategories rptCategories)
        {
            base.AddObject("RptCategories", rptCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RptReportCats EntitySet.
        /// </summary>
        public void AddToRptReportCats(RptReportCats rptReportCats)
        {
            base.AddObject("RptReportCats", rptReportCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RptReportRoles1s EntitySet.
        /// </summary>
        public void AddToRptReportRoles1s(RptReportRoles1 rptReportRoles1)
        {
            base.AddObject("RptReportRoles1s", rptReportRoles1);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RptReportUsers EntitySet.
        /// </summary>
        public void AddToRptReportUsers(RptReportUsers rptReportUsers)
        {
            base.AddObject("RptReportUsers", rptReportUsers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RptUserLevels EntitySet.
        /// </summary>
        public void AddToRptUserLevels(RptUserLevels rptUserLevels)
        {
            base.AddObject("RptUserLevels", rptUserLevels);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RsvPayments EntitySet.
        /// </summary>
        public void AddToRsvPayments(RsvPayments rsvPayments)
        {
            base.AddObject("RsvPayments", rsvPayments);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesActCodes EntitySet.
        /// </summary>
        public void AddToSalesActCodes(SalesActCodes salesActCodes)
        {
            base.AddObject("SalesActCodes", salesActCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesActivities EntitySet.
        /// </summary>
        public void AddToSalesActivities(SalesActivities salesActivities)
        {
            base.AddObject("SalesActivities", salesActivities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesActStatuses EntitySet.
        /// </summary>
        public void AddToSalesActStatuses(SalesActStatus salesActStatus)
        {
            base.AddObject("SalesActStatuses", salesActStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadCatCodes EntitySet.
        /// </summary>
        public void AddToSalesLeadCatCodes(SalesLeadCatCodes salesLeadCatCodes)
        {
            base.AddObject("SalesLeadCatCodes", salesLeadCatCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadCategories EntitySet.
        /// </summary>
        public void AddToSalesLeadCategories(SalesLeadCategories salesLeadCategories)
        {
            base.AddObject("SalesLeadCategories", salesLeadCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadCompanies EntitySet.
        /// </summary>
        public void AddToSalesLeadCompanies(SalesLeadCompanies salesLeadCompanies)
        {
            base.AddObject("SalesLeadCompanies", salesLeadCompanies);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadFiles EntitySet.
        /// </summary>
        public void AddToSalesLeadFiles(SalesLeadFiles salesLeadFiles)
        {
            base.AddObject("SalesLeadFiles", salesLeadFiles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadItems EntitySet.
        /// </summary>
        public void AddToSalesLeadItems(SalesLeadItems salesLeadItems)
        {
            base.AddObject("SalesLeadItems", salesLeadItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadLinks EntitySet.
        /// </summary>
        public void AddToSalesLeadLinks(SalesLeadLinks salesLeadLinks)
        {
            base.AddObject("SalesLeadLinks", salesLeadLinks);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadQuotedItems EntitySet.
        /// </summary>
        public void AddToSalesLeadQuotedItems(SalesLeadQuotedItems salesLeadQuotedItems)
        {
            base.AddObject("SalesLeadQuotedItems", salesLeadQuotedItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadQuotedItemStatuses EntitySet.
        /// </summary>
        public void AddToSalesLeadQuotedItemStatuses(SalesLeadQuotedItemStatus salesLeadQuotedItemStatus)
        {
            base.AddObject("SalesLeadQuotedItemStatuses", salesLeadQuotedItemStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeads EntitySet.
        /// </summary>
        public void AddToSalesLeads(SalesLeads salesLeads)
        {
            base.AddObject("SalesLeads", salesLeads);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLeadSupActivities EntitySet.
        /// </summary>
        public void AddToSalesLeadSupActivities(SalesLeadSupActivities salesLeadSupActivities)
        {
            base.AddObject("SalesLeadSupActivities", salesLeadSupActivities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesProcStatuses EntitySet.
        /// </summary>
        public void AddToSalesProcStatuses(SalesProcStatus salesProcStatus)
        {
            base.AddObject("SalesProcStatuses", salesProcStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesProcStatusCodes EntitySet.
        /// </summary>
        public void AddToSalesProcStatusCodes(SalesProcStatusCodes salesProcStatusCodes)
        {
            base.AddObject("SalesProcStatusCodes", salesProcStatusCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesStatuses EntitySet.
        /// </summary>
        public void AddToSalesStatuses(SalesStatus salesStatus)
        {
            base.AddObject("SalesStatuses", salesStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesStatusAllowedUsers EntitySet.
        /// </summary>
        public void AddToSalesStatusAllowedUsers(SalesStatusAllowedUsers salesStatusAllowedUsers)
        {
            base.AddObject("SalesStatusAllowedUsers", salesStatusAllowedUsers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesStatusCodes EntitySet.
        /// </summary>
        public void AddToSalesStatusCodes(SalesStatusCodes salesStatusCodes)
        {
            base.AddObject("SalesStatusCodes", salesStatusCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesStatusRestrictions EntitySet.
        /// </summary>
        public void AddToSalesStatusRestrictions(SalesStatusRestrictions salesStatusRestrictions)
        {
            base.AddObject("SalesStatusRestrictions", salesStatusRestrictions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesStatusStatuses EntitySet.
        /// </summary>
        public void AddToSalesStatusStatuses(SalesStatusStatus salesStatusStatus)
        {
            base.AddObject("SalesStatusStatuses", salesStatusStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesStatusTypes EntitySet.
        /// </summary>
        public void AddToSalesStatusTypes(SalesStatusTypes salesStatusTypes)
        {
            base.AddObject("SalesStatusTypes", salesStatusTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet.
        /// </summary>
        public void AddToServices(Services services)
        {
            base.AddObject("Services", services);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmBranches EntitySet.
        /// </summary>
        public void AddToSmBranches(SmBranches smBranches)
        {
            base.AddObject("SmBranches", smBranches);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmCategories EntitySet.
        /// </summary>
        public void AddToSmCategories(SmCategories smCategories)
        {
            base.AddObject("SmCategories", smCategories);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmFiles EntitySet.
        /// </summary>
        public void AddToSmFiles(SmFiles smFiles)
        {
            base.AddObject("SmFiles", smFiles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProdAds EntitySet.
        /// </summary>
        public void AddToSmProdAds(SmProdAds smProdAds)
        {
            base.AddObject("SmProdAds", smProdAds);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProdCats EntitySet.
        /// </summary>
        public void AddToSmProdCats(SmProdCats smProdCats)
        {
            base.AddObject("SmProdCats", smProdCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProdDescs EntitySet.
        /// </summary>
        public void AddToSmProdDescs(SmProdDescs smProdDescs)
        {
            base.AddObject("SmProdDescs", smProdDescs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProdInfoes EntitySet.
        /// </summary>
        public void AddToSmProdInfoes(SmProdInfoes smProdInfoes)
        {
            base.AddObject("SmProdInfoes", smProdInfoes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProdStatuses EntitySet.
        /// </summary>
        public void AddToSmProdStatuses(SmProdStatus smProdStatus)
        {
            base.AddObject("SmProdStatuses", smProdStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProdSuppliers EntitySet.
        /// </summary>
        public void AddToSmProdSuppliers(SmProdSuppliers smProdSuppliers)
        {
            base.AddObject("SmProdSuppliers", smProdSuppliers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmProducts EntitySet.
        /// </summary>
        public void AddToSmProducts(SmProducts smProducts)
        {
            base.AddObject("SmProducts", smProducts);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmRates EntitySet.
        /// </summary>
        public void AddToSmRates(SmRates smRates)
        {
            base.AddObject("SmRates", smRates);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmRateUoMs EntitySet.
        /// </summary>
        public void AddToSmRateUoMs(SmRateUoMs smRateUoMs)
        {
            base.AddObject("SmRateUoMs", smRateUoMs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmSupplierInfoes EntitySet.
        /// </summary>
        public void AddToSmSupplierInfoes(SmSupplierInfoes smSupplierInfoes)
        {
            base.AddObject("SmSupplierInfoes", smSupplierInfoes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SmSuppliers EntitySet.
        /// </summary>
        public void AddToSmSuppliers(SmSuppliers smSuppliers)
        {
            base.AddObject("SmSuppliers", smSuppliers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SqlDataConnections EntitySet.
        /// </summary>
        public void AddToSqlDataConnections(SqlDataConnections sqlDataConnections)
        {
            base.AddObject("SqlDataConnections", sqlDataConnections);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SrvActionCodes EntitySet.
        /// </summary>
        public void AddToSrvActionCodes(SrvActionCodes srvActionCodes)
        {
            base.AddObject("SrvActionCodes", srvActionCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SrvActionItems EntitySet.
        /// </summary>
        public void AddToSrvActionItems(SrvActionItems srvActionItems)
        {
            base.AddObject("SrvActionItems", srvActionItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelBrands EntitySet.
        /// </summary>
        public void AddToSteelBrands(SteelBrands steelBrands)
        {
            base.AddObject("SteelBrands", steelBrands);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelMainCats EntitySet.
        /// </summary>
        public void AddToSteelMainCats(SteelMainCats steelMainCats)
        {
            base.AddObject("SteelMainCats", steelMainCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelMaterialGrades EntitySet.
        /// </summary>
        public void AddToSteelMaterialGrades(SteelMaterialGrades steelMaterialGrades)
        {
            base.AddObject("SteelMaterialGrades", steelMaterialGrades);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelMaterials EntitySet.
        /// </summary>
        public void AddToSteelMaterials(SteelMaterials steelMaterials)
        {
            base.AddObject("SteelMaterials", steelMaterials);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelOrigins EntitySet.
        /// </summary>
        public void AddToSteelOrigins(SteelOrigins steelOrigins)
        {
            base.AddObject("SteelOrigins", steelOrigins);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelSizes EntitySet.
        /// </summary>
        public void AddToSteelSizes(SteelSizes steelSizes)
        {
            base.AddObject("SteelSizes", steelSizes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SteelSubCats EntitySet.
        /// </summary>
        public void AddToSteelSubCats(SteelSubCats steelSubCats)
        {
            base.AddObject("SteelSubCats", steelSubCats);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupDocuments EntitySet.
        /// </summary>
        public void AddToSupDocuments(SupDocuments supDocuments)
        {
            base.AddObject("SupDocuments", supDocuments);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierActActionCodes EntitySet.
        /// </summary>
        public void AddToSupplierActActionCodes(SupplierActActionCodes supplierActActionCodes)
        {
            base.AddObject("SupplierActActionCodes", supplierActActionCodes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierActActionStatuses EntitySet.
        /// </summary>
        public void AddToSupplierActActionStatuses(SupplierActActionStatus supplierActActionStatus)
        {
            base.AddObject("SupplierActActionStatuses", supplierActActionStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierActivities EntitySet.
        /// </summary>
        public void AddToSupplierActivities(SupplierActivities supplierActivities)
        {
            base.AddObject("SupplierActivities", supplierActivities);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierActivityTypes EntitySet.
        /// </summary>
        public void AddToSupplierActivityTypes(SupplierActivityTypes supplierActivityTypes)
        {
            base.AddObject("SupplierActivityTypes", supplierActivityTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierActStatuses EntitySet.
        /// </summary>
        public void AddToSupplierActStatuses(SupplierActStatus supplierActStatus)
        {
            base.AddObject("SupplierActStatuses", supplierActStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierContacts EntitySet.
        /// </summary>
        public void AddToSupplierContacts(SupplierContacts supplierContacts)
        {
            base.AddObject("SupplierContacts", supplierContacts);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierContactStatuses EntitySet.
        /// </summary>
        public void AddToSupplierContactStatuses(SupplierContactStatus supplierContactStatus)
        {
            base.AddObject("SupplierContactStatuses", supplierContactStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierDocuments EntitySet.
        /// </summary>
        public void AddToSupplierDocuments(SupplierDocuments supplierDocuments)
        {
            base.AddObject("SupplierDocuments", supplierDocuments);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierInvItems EntitySet.
        /// </summary>
        public void AddToSupplierInvItems(SupplierInvItems supplierInvItems)
        {
            base.AddObject("SupplierInvItems", supplierInvItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierItemRates EntitySet.
        /// </summary>
        public void AddToSupplierItemRates(SupplierItemRates supplierItemRates)
        {
            base.AddObject("SupplierItemRates", supplierItemRates);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierItems EntitySet.
        /// </summary>
        public void AddToSupplierItems(SupplierItems supplierItems)
        {
            base.AddObject("SupplierItems", supplierItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierPoDtls EntitySet.
        /// </summary>
        public void AddToSupplierPoDtls(SupplierPoDtls supplierPoDtls)
        {
            base.AddObject("SupplierPoDtls", supplierPoDtls);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierPoHdrs EntitySet.
        /// </summary>
        public void AddToSupplierPoHdrs(SupplierPoHdrs supplierPoHdrs)
        {
            base.AddObject("SupplierPoHdrs", supplierPoHdrs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierPoItems EntitySet.
        /// </summary>
        public void AddToSupplierPoItems(SupplierPoItems supplierPoItems)
        {
            base.AddObject("SupplierPoItems", supplierPoItems);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierPoStatuses EntitySet.
        /// </summary>
        public void AddToSupplierPoStatuses(SupplierPoStatus supplierPoStatus)
        {
            base.AddObject("SupplierPoStatuses", supplierPoStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet.
        /// </summary>
        public void AddToSuppliers(Suppliers suppliers)
        {
            base.AddObject("Suppliers", suppliers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierTypes EntitySet.
        /// </summary>
        public void AddToSupplierTypes(SupplierTypes supplierTypes)
        {
            base.AddObject("SupplierTypes", supplierTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierUnits EntitySet.
        /// </summary>
        public void AddToSupplierUnits(SupplierUnits supplierUnits)
        {
            base.AddObject("SupplierUnits", supplierUnits);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysAccessRoles EntitySet.
        /// </summary>
        public void AddToSysAccessRoles(SysAccessRoles sysAccessRoles)
        {
            base.AddObject("SysAccessRoles", sysAccessRoles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysAccessUsers EntitySet.
        /// </summary>
        public void AddToSysAccessUsers(SysAccessUsers sysAccessUsers)
        {
            base.AddObject("SysAccessUsers", sysAccessUsers);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysCmdIdRefs EntitySet.
        /// </summary>
        public void AddToSysCmdIdRefs(SysCmdIdRefs sysCmdIdRefs)
        {
            base.AddObject("SysCmdIdRefs", sysCmdIdRefs);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysLabels EntitySet.
        /// </summary>
        public void AddToSysLabels(SysLabels sysLabels)
        {
            base.AddObject("SysLabels", sysLabels);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysMenus EntitySet.
        /// </summary>
        public void AddToSysMenus(SysMenus sysMenus)
        {
            base.AddObject("SysMenus", sysMenus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysServiceMenus EntitySet.
        /// </summary>
        public void AddToSysServiceMenus(SysServiceMenus sysServiceMenus)
        {
            base.AddObject("SysServiceMenus", sysServiceMenus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysServices EntitySet.
        /// </summary>
        public void AddToSysServices(SysServices sysServices)
        {
            base.AddObject("SysServices", sysServices);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysSettings EntitySet.
        /// </summary>
        public void AddToSysSettings(SysSettings sysSettings)
        {
            base.AddObject("SysSettings", sysSettings);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SysSetupTypes EntitySet.
        /// </summary>
        public void AddToSysSetupTypes(SysSetupTypes sysSetupTypes)
        {
            base.AddObject("SysSetupTypes", sysSetupTypes);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleBrands EntitySet.
        /// </summary>
        public void AddToVehicleBrands(VehicleBrands vehicleBrands)
        {
            base.AddObject("VehicleBrands", vehicleBrands);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleDrives EntitySet.
        /// </summary>
        public void AddToVehicleDrives(VehicleDrives vehicleDrives)
        {
            base.AddObject("VehicleDrives", vehicleDrives);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleFuels EntitySet.
        /// </summary>
        public void AddToVehicleFuels(VehicleFuels vehicleFuels)
        {
            base.AddObject("VehicleFuels", vehicleFuels);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleModels EntitySet.
        /// </summary>
        public void AddToVehicleModels(VehicleModels vehicleModels)
        {
            base.AddObject("VehicleModels", vehicleModels);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet.
        /// </summary>
        public void AddToVehicles(Vehicles vehicles)
        {
            base.AddObject("Vehicles", vehicles);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleTransmissions EntitySet.
        /// </summary>
        public void AddToVehicleTransmissions(VehicleTransmissions vehicleTransmissions)
        {
            base.AddObject("VehicleTransmissions", vehicleTransmissions);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleTypes EntitySet.
        /// </summary>
        public void AddToVehicleTypes(VehicleTypes vehicleTypes)
        {
            base.AddObject("VehicleTypes", vehicleTypes);
        }

        #endregion
    }

    #endregion
}

namespace DB_A0A0AE_ClientModel
{

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        /// <param name="accntTypeId">Initial value of AccntTypeId.</param>
        public static AccntCategories CreateAccntCategories(int id, string code, string description, int orderNo, int accntTypeId)
        {
            AccntCategories accntCategories = new AccntCategories();
            accntCategories.Id = id;
            accntCategories.Code = code;
            accntCategories.Description = description;
            accntCategories.OrderNo = orderNo;
            accntCategories.AccntTypeId = accntTypeId;
            return accntCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();
    
        /// <summary>
        /// There are no comments for AccntTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntTypeId
        {
            get
            {
                int value = _AccntTypeId;
                OnGetAccntTypeId(ref value);
                return value;
            }
            set
            {
                if (_AccntTypeId != value)
                {
                  OnAccntTypeIdChanging(ref value);
                  ReportPropertyChanging("AccntTypeId");
                  _AccntTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntTypeId");
                  OnAccntTypeIdChanged();
              }
            }
        }
        private int _AccntTypeId;
        partial void OnGetAccntTypeId(ref int value);
        partial void OnAccntTypeIdChanging(ref int value);
        partial void OnAccntTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTypeAccntCategory", "AccntTypes")]
        public virtual AccntTypes AccntTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntTypes> AccntTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntCategoryAccntMain", "AccntMains")]
        public virtual EntityCollection<AccntMains> AccntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntMains", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntLedgers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntLedgers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntLedgers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntLedgers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="accntMainId">Initial value of AccntMainId.</param>
        public static AccntLedgers CreateAccntLedgers(int id, string code, string name, int accntMainId)
        {
            AccntLedgers accntLedgers = new AccntLedgers();
            accntLedgers.Id = id;
            accntLedgers.Code = code;
            accntLedgers.Name = name;
            accntLedgers.AccntMainId = accntMainId;
            return accntLedgers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for AccntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntMainId
        {
            get
            {
                int value = _AccntMainId;
                OnGetAccntMainId(ref value);
                return value;
            }
            set
            {
                if (_AccntMainId != value)
                {
                  OnAccntMainIdChanging(ref value);
                  ReportPropertyChanging("AccntMainId");
                  _AccntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntMainId");
                  OnAccntMainIdChanged();
              }
            }
        }
        private int _AccntMainId;
        partial void OnGetAccntMainId(ref int value);
        partial void OnAccntMainIdChanging(ref int value);
        partial void OnAccntMainIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntMainAccntLedger", "AccntMains")]
        public virtual AccntMains AccntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntMains> AccntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntLedgerAccntTrxDtl", "AccntTrxDtls")]
        public virtual EntityCollection<AccntTrxDtls> AccntTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntTrxDtls>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntTrxDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntTrxDtls>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntTrxDtls", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntMains in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntMains")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntMains : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntMains object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="accntCategoryId">Initial value of AccntCategoryId.</param>
        /// <param name="accntTypeId">Initial value of AccntTypeId.</param>
        public static AccntMains CreateAccntMains(int id, string code, string name, int accntCategoryId, int accntTypeId)
        {
            AccntMains accntMains = new AccntMains();
            accntMains.Id = id;
            accntMains.Code = code;
            accntMains.Name = name;
            accntMains.AccntCategoryId = accntCategoryId;
            accntMains.AccntTypeId = accntTypeId;
            return accntMains;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for AccntCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntCategoryId
        {
            get
            {
                int value = _AccntCategoryId;
                OnGetAccntCategoryId(ref value);
                return value;
            }
            set
            {
                if (_AccntCategoryId != value)
                {
                  OnAccntCategoryIdChanging(ref value);
                  ReportPropertyChanging("AccntCategoryId");
                  _AccntCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntCategoryId");
                  OnAccntCategoryIdChanged();
              }
            }
        }
        private int _AccntCategoryId;
        partial void OnGetAccntCategoryId(ref int value);
        partial void OnAccntCategoryIdChanging(ref int value);
        partial void OnAccntCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for AccntTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntTypeId
        {
            get
            {
                int value = _AccntTypeId;
                OnGetAccntTypeId(ref value);
                return value;
            }
            set
            {
                if (_AccntTypeId != value)
                {
                  OnAccntTypeIdChanging(ref value);
                  ReportPropertyChanging("AccntTypeId");
                  _AccntTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntTypeId");
                  OnAccntTypeIdChanged();
              }
            }
        }
        private int _AccntTypeId;
        partial void OnGetAccntTypeId(ref int value);
        partial void OnAccntTypeIdChanging(ref int value);
        partial void OnAccntTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntLedgers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntMainAccntLedger", "AccntLedgers")]
        public virtual EntityCollection<AccntLedgers> AccntLedgers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntLedgers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntMainAccntLedger", "AccntLedgers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntCategoryAccntMain", "AccntCategories")]
        public virtual AccntCategories AccntCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntCategories> AccntCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntCategoryAccntMain", "AccntCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTypeAccntMain", "AccntTypes")]
        public virtual AccntTypes AccntTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntTypes> AccntTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTypes>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntTrxDtls in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntTrxDtls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntTrxDtls : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntTrxDtls object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="accntTrxHdrId">Initial value of AccntTrxHdrId.</param>
        /// <param name="dbAmt">Initial value of DbAmt.</param>
        /// <param name="crAmt">Initial value of CrAmt.</param>
        /// <param name="accntLedgerId">Initial value of AccntLedgerId.</param>
        public static AccntTrxDtls CreateAccntTrxDtls(int id, int accntTrxHdrId, decimal dbAmt, decimal crAmt, int accntLedgerId)
        {
            AccntTrxDtls accntTrxDtls = new AccntTrxDtls();
            accntTrxDtls.Id = id;
            accntTrxDtls.AccntTrxHdrId = accntTrxHdrId;
            accntTrxDtls.DbAmt = dbAmt;
            accntTrxDtls.CrAmt = crAmt;
            accntTrxDtls.AccntLedgerId = accntLedgerId;
            return accntTrxDtls;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for AccntTrxHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntTrxHdrId
        {
            get
            {
                int value = _AccntTrxHdrId;
                OnGetAccntTrxHdrId(ref value);
                return value;
            }
            set
            {
                if (_AccntTrxHdrId != value)
                {
                  OnAccntTrxHdrIdChanging(ref value);
                  ReportPropertyChanging("AccntTrxHdrId");
                  _AccntTrxHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntTrxHdrId");
                  OnAccntTrxHdrIdChanged();
              }
            }
        }
        private int _AccntTrxHdrId;
        partial void OnGetAccntTrxHdrId(ref int value);
        partial void OnAccntTrxHdrIdChanging(ref int value);
        partial void OnAccntTrxHdrIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for DbAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DbAmt
        {
            get
            {
                decimal value = _DbAmt;
                OnGetDbAmt(ref value);
                return value;
            }
            set
            {
                if (_DbAmt != value)
                {
                  OnDbAmtChanging(ref value);
                  ReportPropertyChanging("DbAmt");
                  _DbAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DbAmt");
                  OnDbAmtChanged();
              }
            }
        }
        private decimal _DbAmt;
        partial void OnGetDbAmt(ref decimal value);
        partial void OnDbAmtChanging(ref decimal value);
        partial void OnDbAmtChanged();
    
        /// <summary>
        /// There are no comments for CrAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CrAmt
        {
            get
            {
                decimal value = _CrAmt;
                OnGetCrAmt(ref value);
                return value;
            }
            set
            {
                if (_CrAmt != value)
                {
                  OnCrAmtChanging(ref value);
                  ReportPropertyChanging("CrAmt");
                  _CrAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CrAmt");
                  OnCrAmtChanged();
              }
            }
        }
        private decimal _CrAmt;
        partial void OnGetCrAmt(ref decimal value);
        partial void OnCrAmtChanging(ref decimal value);
        partial void OnCrAmtChanged();
    
        /// <summary>
        /// There are no comments for AccntLedgerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntLedgerId
        {
            get
            {
                int value = _AccntLedgerId;
                OnGetAccntLedgerId(ref value);
                return value;
            }
            set
            {
                if (_AccntLedgerId != value)
                {
                  OnAccntLedgerIdChanging(ref value);
                  ReportPropertyChanging("AccntLedgerId");
                  _AccntLedgerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntLedgerId");
                  OnAccntLedgerIdChanged();
              }
            }
        }
        private int _AccntLedgerId;
        partial void OnGetAccntLedgerId(ref int value);
        partial void OnAccntLedgerIdChanging(ref int value);
        partial void OnAccntLedgerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs")]
        public virtual AccntTrxHdrs AccntTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTrxHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntTrxHdrs> AccntTrxHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntLedgers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntLedgerAccntTrxDtl", "AccntLedgers")]
        public virtual AccntLedgers AccntLedgers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntLedgers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntLedgers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntLedgers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntLedgers> AccntLedgersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntLedgers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntLedgers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntLedgers>("DB_A0A0AE_ClientModel.FK_AccntLedgerAccntTrxDtl", "AccntLedgers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntTrxHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntTrxHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntTrxHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntTrxHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="accntTrxTypeId">Initial value of AccntTrxTypeId.</param>
        /// <param name="dtTrx">Initial value of DtTrx.</param>
        public static AccntTrxHdrs CreateAccntTrxHdrs(int id, int accntTrxTypeId, global::System.DateTime dtTrx)
        {
            AccntTrxHdrs accntTrxHdrs = new AccntTrxHdrs();
            accntTrxHdrs.Id = id;
            accntTrxHdrs.AccntTrxTypeId = accntTrxTypeId;
            accntTrxHdrs.DtTrx = dtTrx;
            return accntTrxHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for AccntTrxTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccntTrxTypeId
        {
            get
            {
                int value = _AccntTrxTypeId;
                OnGetAccntTrxTypeId(ref value);
                return value;
            }
            set
            {
                if (_AccntTrxTypeId != value)
                {
                  OnAccntTrxTypeIdChanging(ref value);
                  ReportPropertyChanging("AccntTrxTypeId");
                  _AccntTrxTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccntTrxTypeId");
                  OnAccntTrxTypeIdChanged();
              }
            }
        }
        private int _AccntTrxTypeId;
        partial void OnGetAccntTrxTypeId(ref int value);
        partial void OnAccntTrxTypeIdChanging(ref int value);
        partial void OnAccntTrxTypeIdChanged();
    
        /// <summary>
        /// There are no comments for DtTrx in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtTrx
        {
            get
            {
                global::System.DateTime value = _DtTrx;
                OnGetDtTrx(ref value);
                return value;
            }
            set
            {
                if (_DtTrx != value)
                {
                  OnDtTrxChanging(ref value);
                  ReportPropertyChanging("DtTrx");
                  _DtTrx = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtTrx");
                  OnDtTrxChanged();
              }
            }
        }
        private global::System.DateTime _DtTrx;
        partial void OnGetDtTrx(ref global::System.DateTime value);
        partial void OnDtTrxChanging(ref global::System.DateTime value);
        partial void OnDtTrxChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTrxHdrAccntTrxDtl", "AccntTrxDtls")]
        public virtual EntityCollection<AccntTrxDtls> AccntTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntTrxDtls>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntTrxDtls>("DB_A0A0AE_ClientModel.FK_AccntTrxHdrAccntTrxDtl", "AccntTrxDtls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTrxTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes")]
        public virtual AccntTrxTypes AccntTrxTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxTypes>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxTypes>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AccntTrxTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccntTrxTypes> AccntTrxTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxTypes>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AccntTrxTypes>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AccntTrxTypes>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntTrxHists in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntTrxHists")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntTrxHists : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntTrxHists object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtHist">Initial value of DtHist.</param>
        /// <param name="histType">Initial value of HistType.</param>
        /// <param name="oldData">Initial value of OldData.</param>
        /// <param name="user">Initial value of User.</param>
        public static AccntTrxHists CreateAccntTrxHists(int id, string dtHist, string histType, string oldData, string user)
        {
            AccntTrxHists accntTrxHists = new AccntTrxHists();
            accntTrxHists.Id = id;
            accntTrxHists.DtHist = dtHist;
            accntTrxHists.HistType = histType;
            accntTrxHists.OldData = oldData;
            accntTrxHists.User = user;
            return accntTrxHists;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtHist in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtHist
        {
            get
            {
                string value = _DtHist;
                OnGetDtHist(ref value);
                return value;
            }
            set
            {
                if (_DtHist != value)
                {
                  OnDtHistChanging(ref value);
                  ReportPropertyChanging("DtHist");
                  _DtHist = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtHist");
                  OnDtHistChanged();
              }
            }
        }
        private string _DtHist;
        partial void OnGetDtHist(ref string value);
        partial void OnDtHistChanging(ref string value);
        partial void OnDtHistChanged();
    
        /// <summary>
        /// There are no comments for HistType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string HistType
        {
            get
            {
                string value = _HistType;
                OnGetHistType(ref value);
                return value;
            }
            set
            {
                if (_HistType != value)
                {
                  OnHistTypeChanging(ref value);
                  ReportPropertyChanging("HistType");
                  _HistType = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("HistType");
                  OnHistTypeChanged();
              }
            }
        }
        private string _HistType;
        partial void OnGetHistType(ref string value);
        partial void OnHistTypeChanging(ref string value);
        partial void OnHistTypeChanged();
    
        /// <summary>
        /// There are no comments for OldData in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OldData
        {
            get
            {
                string value = _OldData;
                OnGetOldData(ref value);
                return value;
            }
            set
            {
                if (_OldData != value)
                {
                  OnOldDataChanging(ref value);
                  ReportPropertyChanging("OldData");
                  _OldData = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OldData");
                  OnOldDataChanged();
              }
            }
        }
        private string _OldData;
        partial void OnGetOldData(ref string value);
        partial void OnOldDataChanging(ref string value);
        partial void OnOldDataChanged();
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string User
        {
            get
            {
                string value = _User;
                OnGetUser(ref value);
                return value;
            }
            set
            {
                if (_User != value)
                {
                  OnUserChanging(ref value);
                  ReportPropertyChanging("User");
                  _User = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("User");
                  OnUserChanged();
              }
            }
        }
        private string _User;
        partial void OnGetUser(ref string value);
        partial void OnUserChanging(ref string value);
        partial void OnUserChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntTrxTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntTrxTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntTrxTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntTrxTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        public static AccntTrxTypes CreateAccntTrxTypes(int id, string code)
        {
            AccntTrxTypes accntTrxTypes = new AccntTrxTypes();
            accntTrxTypes.Id = id;
            accntTrxTypes.Code = code;
            return accntTrxTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTrxTypeAccntTrxHdr", "AccntTrxHdrs")]
        public virtual EntityCollection<AccntTrxHdrs> AccntTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntTrxHdrs>("DB_A0A0AE_ClientModel.FK_AccntTrxTypeAccntTrxHdr", "AccntTrxHdrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AccntTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AccntTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccntTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AccntTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="normalForm">Initial value of NormalForm.</param>
        public static AccntTypes CreateAccntTypes(int id, string code, string normalForm)
        {
            AccntTypes accntTypes = new AccntTypes();
            accntTypes.Id = id;
            accntTypes.Code = code;
            accntTypes.NormalForm = normalForm;
            return accntTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for NormalForm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string NormalForm
        {
            get
            {
                string value = _NormalForm;
                OnGetNormalForm(ref value);
                return value;
            }
            set
            {
                if (_NormalForm != value)
                {
                  OnNormalFormChanging(ref value);
                  ReportPropertyChanging("NormalForm");
                  _NormalForm = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NormalForm");
                  OnNormalFormChanged();
              }
            }
        }
        private string _NormalForm;
        partial void OnGetNormalForm(ref string value);
        partial void OnNormalFormChanging(ref string value);
        partial void OnNormalFormChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AccntCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTypeAccntCategory", "AccntCategories")]
        public virtual EntityCollection<AccntCategories> AccntCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntCategories>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntCategory", "AccntCategories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AccntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AccntTypeAccntMain", "AccntMains")]
        public virtual EntityCollection<AccntMains> AccntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AccntMains>("DB_A0A0AE_ClientModel.FK_AccntTypeAccntMain", "AccntMains", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AdminEmails in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AdminEmails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdminEmails : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AdminEmails object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="accCode">Initial value of AccCode.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static AdminEmails CreateAdminEmails(int id, string email, string accCode, string remarks)
        {
            AdminEmails adminEmails = new AdminEmails();
            adminEmails.Id = id;
            adminEmails.Email = email;
            adminEmails.AccCode = accCode;
            adminEmails.Remarks = remarks;
            return adminEmails;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for AccCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AccCode
        {
            get
            {
                string value = _AccCode;
                OnGetAccCode(ref value);
                return value;
            }
            set
            {
                if (_AccCode != value)
                {
                  OnAccCodeChanging(ref value);
                  ReportPropertyChanging("AccCode");
                  _AccCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AccCode");
                  OnAccCodeChanged();
              }
            }
        }
        private string _AccCode;
        partial void OnGetAccCode(ref string value);
        partial void OnAccCodeChanging(ref string value);
        partial void OnAccCodeChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsCostCenters in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsCostCenters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsCostCenters : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsCostCenters object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="ccName">Initial value of CcName.</param>
        public static AsCostCenters CreateAsCostCenters(int id, string ccName)
        {
            AsCostCenters asCostCenters = new AsCostCenters();
            asCostCenters.Id = id;
            asCostCenters.CcName = ccName;
            return asCostCenters;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CcName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CcName
        {
            get
            {
                string value = _CcName;
                OnGetCcName(ref value);
                return value;
            }
            set
            {
                if (_CcName != value)
                {
                  OnCcNameChanging(ref value);
                  ReportPropertyChanging("CcName");
                  _CcName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CcName");
                  OnCcNameChanged();
              }
            }
        }
        private string _CcName;
        partial void OnGetCcName(ref string value);
        partial void OnCcNameChanging(ref string value);
        partial void OnCcNameChanged();
    
        /// <summary>
        /// There are no comments for XxRemarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string XxRemarks
        {
            get
            {
                string value = _XxRemarks;
                OnGetXxRemarks(ref value);
                return value;
            }
            set
            {
                if (_XxRemarks != value)
                {
                  OnXxRemarksChanging(ref value);
                  ReportPropertyChanging("XxRemarks");
                  _XxRemarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("XxRemarks");
                  OnXxRemarksChanged();
              }
            }
        }
        private string _XxRemarks;
        partial void OnGetXxRemarks(ref string value);
        partial void OnXxRemarksChanging(ref string value);
        partial void OnXxRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsExpenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsCostCenterAsExpense", "AsExpenses")]
        public virtual EntityCollection<AsExpenses> AsExpenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AsExpenses>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsExpenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AsExpenses>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsExpenses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AsSales in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsCostCenterAsSales", "AsSales")]
        public virtual EntityCollection<AsSales> AsSales
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AsSales>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsSales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AsSales>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsSales", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsExpBillers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsExpBillers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsExpBillers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsExpBillers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="shortName">Initial value of ShortName.</param>
        public static AsExpBillers CreateAsExpBillers(int id, string shortName)
        {
            AsExpBillers asExpBillers = new AsExpBillers();
            asExpBillers.Id = id;
            asExpBillers.ShortName = shortName;
            return asExpBillers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ShortName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ShortName
        {
            get
            {
                string value = _ShortName;
                OnGetShortName(ref value);
                return value;
            }
            set
            {
                if (_ShortName != value)
                {
                  OnShortNameChanging(ref value);
                  ReportPropertyChanging("ShortName");
                  _ShortName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ShortName");
                  OnShortNameChanged();
              }
            }
        }
        private string _ShortName;
        partial void OnGetShortName(ref string value);
        partial void OnShortNameChanging(ref string value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// There are no comments for FullName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FullName
        {
            get
            {
                string value = _FullName;
                OnGetFullName(ref value);
                return value;
            }
            set
            {
                if (_FullName != value)
                {
                  OnFullNameChanging(ref value);
                  ReportPropertyChanging("FullName");
                  _FullName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FullName");
                  OnFullNameChanged();
              }
            }
        }
        private string _FullName;
        partial void OnGetFullName(ref string value);
        partial void OnFullNameChanging(ref string value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for Contact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact
        {
            get
            {
                string value = _Contact;
                OnGetContact(ref value);
                return value;
            }
            set
            {
                if (_Contact != value)
                {
                  OnContactChanging(ref value);
                  ReportPropertyChanging("Contact");
                  _Contact = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact");
                  OnContactChanged();
              }
            }
        }
        private string _Contact;
        partial void OnGetContact(ref string value);
        partial void OnContactChanging(ref string value);
        partial void OnContactChanged();
    
        /// <summary>
        /// There are no comments for Contact2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact2
        {
            get
            {
                string value = _Contact2;
                OnGetContact2(ref value);
                return value;
            }
            set
            {
                if (_Contact2 != value)
                {
                  OnContact2Changing(ref value);
                  ReportPropertyChanging("Contact2");
                  _Contact2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact2");
                  OnContact2Changed();
              }
            }
        }
        private string _Contact2;
        partial void OnGetContact2(ref string value);
        partial void OnContact2Changing(ref string value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsExpenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsExpBillerAsExpense", "AsExpenses")]
        public virtual EntityCollection<AsExpenses> AsExpenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AsExpenses>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AsExpenses>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpenses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsExpCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsExpCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsExpCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsExpCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static AsExpCategories CreateAsExpCategories(int id, string desc)
        {
            AsExpCategories asExpCategories = new AsExpCategories();
            asExpCategories.Id = id;
            asExpCategories.Desc = desc;
            return asExpCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsExpenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsExpCategoryAsExpense", "AsExpenses")]
        public virtual EntityCollection<AsExpenses> AsExpenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AsExpenses>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AsExpenses>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpenses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsExpenses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsExpenses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsExpenses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsExpenses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="trxDate">Initial value of TrxDate.</param>
        /// <param name="trxDesc">Initial value of TrxDesc.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="dateEntered">Initial value of DateEntered.</param>
        /// <param name="asCostCenterId">Initial value of AsCostCenterId.</param>
        /// <param name="asExpCategoryId">Initial value of AsExpCategoryId.</param>
        /// <param name="asExpBillerId">Initial value of AsExpBillerId.</param>
        public static AsExpenses CreateAsExpenses(int id, global::System.DateTime trxDate, string trxDesc, decimal amount, global::System.DateTime dateEntered, int asCostCenterId, int asExpCategoryId, int asExpBillerId)
        {
            AsExpenses asExpenses = new AsExpenses();
            asExpenses.Id = id;
            asExpenses.TrxDate = trxDate;
            asExpenses.TrxDesc = trxDesc;
            asExpenses.Amount = amount;
            asExpenses.DateEntered = dateEntered;
            asExpenses.AsCostCenterId = asCostCenterId;
            asExpenses.AsExpCategoryId = asExpCategoryId;
            asExpenses.AsExpBillerId = asExpBillerId;
            return asExpenses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TrxDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TrxDate
        {
            get
            {
                global::System.DateTime value = _TrxDate;
                OnGetTrxDate(ref value);
                return value;
            }
            set
            {
                if (_TrxDate != value)
                {
                  OnTrxDateChanging(ref value);
                  ReportPropertyChanging("TrxDate");
                  _TrxDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrxDate");
                  OnTrxDateChanged();
              }
            }
        }
        private global::System.DateTime _TrxDate;
        partial void OnGetTrxDate(ref global::System.DateTime value);
        partial void OnTrxDateChanging(ref global::System.DateTime value);
        partial void OnTrxDateChanged();
    
        /// <summary>
        /// There are no comments for TrxDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TrxDesc
        {
            get
            {
                string value = _TrxDesc;
                OnGetTrxDesc(ref value);
                return value;
            }
            set
            {
                if (_TrxDesc != value)
                {
                  OnTrxDescChanging(ref value);
                  ReportPropertyChanging("TrxDesc");
                  _TrxDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TrxDesc");
                  OnTrxDescChanged();
              }
            }
        }
        private string _TrxDesc;
        partial void OnGetTrxDesc(ref string value);
        partial void OnTrxDescChanging(ref string value);
        partial void OnTrxDescChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for TrxRemarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TrxRemarks
        {
            get
            {
                string value = _TrxRemarks;
                OnGetTrxRemarks(ref value);
                return value;
            }
            set
            {
                if (_TrxRemarks != value)
                {
                  OnTrxRemarksChanging(ref value);
                  ReportPropertyChanging("TrxRemarks");
                  _TrxRemarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TrxRemarks");
                  OnTrxRemarksChanged();
              }
            }
        }
        private string _TrxRemarks;
        partial void OnGetTrxRemarks(ref string value);
        partial void OnTrxRemarksChanging(ref string value);
        partial void OnTrxRemarksChanged();
    
        /// <summary>
        /// There are no comments for DateEntered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DateEntered
        {
            get
            {
                global::System.DateTime value = _DateEntered;
                OnGetDateEntered(ref value);
                return value;
            }
            set
            {
                if (_DateEntered != value)
                {
                  OnDateEnteredChanging(ref value);
                  ReportPropertyChanging("DateEntered");
                  _DateEntered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateEntered");
                  OnDateEnteredChanged();
              }
            }
        }
        private global::System.DateTime _DateEntered;
        partial void OnGetDateEntered(ref global::System.DateTime value);
        partial void OnDateEnteredChanging(ref global::System.DateTime value);
        partial void OnDateEnteredChanged();
    
        /// <summary>
        /// There are no comments for AsCostCenterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AsCostCenterId
        {
            get
            {
                int value = _AsCostCenterId;
                OnGetAsCostCenterId(ref value);
                return value;
            }
            set
            {
                if (_AsCostCenterId != value)
                {
                  OnAsCostCenterIdChanging(ref value);
                  ReportPropertyChanging("AsCostCenterId");
                  _AsCostCenterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AsCostCenterId");
                  OnAsCostCenterIdChanged();
              }
            }
        }
        private int _AsCostCenterId;
        partial void OnGetAsCostCenterId(ref int value);
        partial void OnAsCostCenterIdChanging(ref int value);
        partial void OnAsCostCenterIdChanged();
    
        /// <summary>
        /// There are no comments for AsExpCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AsExpCategoryId
        {
            get
            {
                int value = _AsExpCategoryId;
                OnGetAsExpCategoryId(ref value);
                return value;
            }
            set
            {
                if (_AsExpCategoryId != value)
                {
                  OnAsExpCategoryIdChanging(ref value);
                  ReportPropertyChanging("AsExpCategoryId");
                  _AsExpCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AsExpCategoryId");
                  OnAsExpCategoryIdChanged();
              }
            }
        }
        private int _AsExpCategoryId;
        partial void OnGetAsExpCategoryId(ref int value);
        partial void OnAsExpCategoryIdChanging(ref int value);
        partial void OnAsExpCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for AsExpBillerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AsExpBillerId
        {
            get
            {
                int value = _AsExpBillerId;
                OnGetAsExpBillerId(ref value);
                return value;
            }
            set
            {
                if (_AsExpBillerId != value)
                {
                  OnAsExpBillerIdChanging(ref value);
                  ReportPropertyChanging("AsExpBillerId");
                  _AsExpBillerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AsExpBillerId");
                  OnAsExpBillerIdChanged();
              }
            }
        }
        private int _AsExpBillerId;
        partial void OnGetAsExpBillerId(ref int value);
        partial void OnAsExpBillerIdChanging(ref int value);
        partial void OnAsExpBillerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsCostCenters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsCostCenterAsExpense", "AsCostCenters")]
        public virtual AsCostCenters AsCostCenters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsCostCenters").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsCostCenters").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AsCostCenters in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsCostCenters> AsCostCentersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsCostCenters");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsCostCenters", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsExpense", "AsCostCenters").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AsExpCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsExpCategoryAsExpense", "AsExpCategories")]
        public virtual AsExpCategories AsExpCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpCategories>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpCategories>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AsExpCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsExpCategories> AsExpCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpCategories>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AsExpCategories>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpCategories>("DB_A0A0AE_ClientModel.FK_AsExpCategoryAsExpense", "AsExpCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AsExpBillers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsExpBillerAsExpense", "AsExpBillers")]
        public virtual AsExpBillers AsExpBillers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpBillers>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpBillers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpBillers>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpBillers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AsExpBillers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsExpBillers> AsExpBillersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpBillers>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpBillers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AsExpBillers>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpBillers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsExpBillers>("DB_A0A0AE_ClientModel.FK_AsExpBillerAsExpense", "AsExpBillers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsIncCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsIncCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsIncCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsIncCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static AsIncCategories CreateAsIncCategories(int id, string desc)
        {
            AsIncCategories asIncCategories = new AsIncCategories();
            asIncCategories.Id = id;
            asIncCategories.Desc = desc;
            return asIncCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsSales in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsIncCategoryAsSales", "AsSales")]
        public virtual EntityCollection<AsSales> AsSales
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AsSales>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsSales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AsSales>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsSales", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsIncClients in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsIncClients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsIncClients : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsIncClients object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="shortName">Initial value of ShortName.</param>
        /// <param name="name">Initial value of Name.</param>
        public static AsIncClients CreateAsIncClients(int id, string shortName, string name)
        {
            AsIncClients asIncClients = new AsIncClients();
            asIncClients.Id = id;
            asIncClients.ShortName = shortName;
            asIncClients.Name = name;
            return asIncClients;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ShortName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ShortName
        {
            get
            {
                string value = _ShortName;
                OnGetShortName(ref value);
                return value;
            }
            set
            {
                if (_ShortName != value)
                {
                  OnShortNameChanging(ref value);
                  ReportPropertyChanging("ShortName");
                  _ShortName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ShortName");
                  OnShortNameChanged();
              }
            }
        }
        private string _ShortName;
        partial void OnGetShortName(ref string value);
        partial void OnShortNameChanging(ref string value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Company
        {
            get
            {
                string value = _Company;
                OnGetCompany(ref value);
                return value;
            }
            set
            {
                if (_Company != value)
                {
                  OnCompanyChanging(ref value);
                  ReportPropertyChanging("Company");
                  _Company = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Company");
                  OnCompanyChanged();
              }
            }
        }
        private string _Company;
        partial void OnGetCompany(ref string value);
        partial void OnCompanyChanging(ref string value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// There are no comments for Contact1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact1
        {
            get
            {
                string value = _Contact1;
                OnGetContact1(ref value);
                return value;
            }
            set
            {
                if (_Contact1 != value)
                {
                  OnContact1Changing(ref value);
                  ReportPropertyChanging("Contact1");
                  _Contact1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact1");
                  OnContact1Changed();
              }
            }
        }
        private string _Contact1;
        partial void OnGetContact1(ref string value);
        partial void OnContact1Changing(ref string value);
        partial void OnContact1Changed();
    
        /// <summary>
        /// There are no comments for Contact2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact2
        {
            get
            {
                string value = _Contact2;
                OnGetContact2(ref value);
                return value;
            }
            set
            {
                if (_Contact2 != value)
                {
                  OnContact2Changing(ref value);
                  ReportPropertyChanging("Contact2");
                  _Contact2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact2");
                  OnContact2Changed();
              }
            }
        }
        private string _Contact2;
        partial void OnGetContact2(ref string value);
        partial void OnContact2Changing(ref string value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsSales in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsIncClientAsSales", "AsSales")]
        public virtual EntityCollection<AsSales> AsSales
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AsSales>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsSales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AsSales>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsSales", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AspNetRoleClaims in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AspNetRoleClaims")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetRoleClaims : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AspNetRoleClaims object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="roleId">Initial value of RoleId.</param>
        public static AspNetRoleClaims CreateAspNetRoleClaims(int id, string roleId)
        {
            AspNetRoleClaims aspNetRoleClaims = new AspNetRoleClaims();
            aspNetRoleClaims.Id = id;
            aspNetRoleClaims.RoleId = roleId;
            return aspNetRoleClaims;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RoleId
        {
            get
            {
                string value = _RoleId;
                OnGetRoleId(ref value);
                return value;
            }
            set
            {
                if (_RoleId != value)
                {
                  OnRoleIdChanging(ref value);
                  ReportPropertyChanging("RoleId");
                  _RoleId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RoleId");
                  OnRoleIdChanged();
              }
            }
        }
        private string _RoleId;
        partial void OnGetRoleId(ref string value);
        partial void OnRoleIdChanging(ref string value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// There are no comments for ClaimType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimType
        {
            get
            {
                string value = _ClaimType;
                OnGetClaimType(ref value);
                return value;
            }
            set
            {
                if (_ClaimType != value)
                {
                  OnClaimTypeChanging(ref value);
                  ReportPropertyChanging("ClaimType");
                  _ClaimType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimType");
                  OnClaimTypeChanged();
              }
            }
        }
        private string _ClaimType;
        partial void OnGetClaimType(ref string value);
        partial void OnClaimTypeChanging(ref string value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// There are no comments for ClaimValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimValue
        {
            get
            {
                string value = _ClaimValue;
                OnGetClaimValue(ref value);
                return value;
            }
            set
            {
                if (_ClaimValue != value)
                {
                  OnClaimValueChanging(ref value);
                  ReportPropertyChanging("ClaimValue");
                  _ClaimValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimValue");
                  OnClaimValueChanged();
              }
            }
        }
        private string _ClaimValue;
        partial void OnGetClaimValue(ref string value);
        partial void OnClaimValueChanging(ref string value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AspNetRoles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles")]
        public virtual AspNetRoles AspNetRoles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetRoles>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetRoles>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AspNetRoles in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetRoles> AspNetRolesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetRoles>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AspNetRoles>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetRoles>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoles").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AspNetRoles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AspNetRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetRoles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AspNetRoles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static AspNetRoles CreateAspNetRoles(string id, string name)
        {
            AspNetRoles aspNetRoles = new AspNetRoles();
            aspNetRoles.Id = id;
            aspNetRoles.Name = name;
            return aspNetRoles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for NormalizedName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NormalizedName
        {
            get
            {
                string value = _NormalizedName;
                OnGetNormalizedName(ref value);
                return value;
            }
            set
            {
                if (_NormalizedName != value)
                {
                  OnNormalizedNameChanging(ref value);
                  ReportPropertyChanging("NormalizedName");
                  _NormalizedName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NormalizedName");
                  OnNormalizedNameChanged();
              }
            }
        }
        private string _NormalizedName;
        partial void OnGetNormalizedName(ref string value);
        partial void OnNormalizedNameChanging(ref string value);
        partial void OnNormalizedNameChanged();
    
        /// <summary>
        /// There are no comments for ConcurrencyStamp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConcurrencyStamp
        {
            get
            {
                string value = _ConcurrencyStamp;
                OnGetConcurrencyStamp(ref value);
                return value;
            }
            set
            {
                if (_ConcurrencyStamp != value)
                {
                  OnConcurrencyStampChanging(ref value);
                  ReportPropertyChanging("ConcurrencyStamp");
                  _ConcurrencyStamp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConcurrencyStamp");
                  OnConcurrencyStampChanged();
              }
            }
        }
        private string _ConcurrencyStamp;
        partial void OnGetConcurrencyStamp(ref string value);
        partial void OnConcurrencyStampChanging(ref string value);
        partial void OnConcurrencyStampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AspNetRoleClaims in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoleClaims")]
        public virtual EntityCollection<AspNetRoleClaims> AspNetRoleClaims
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AspNetRoleClaims>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoleClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AspNetRoleClaims>("DB_A0A0AE_ClientModel.FK_AspNetRoleClaims_AspNetRoles_RoleId", "AspNetRoleClaims", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AspNetUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "AspNetRoles_AspNetUsers", "AspNetUsers")]
        public virtual EntityCollection<AspNetUsers> AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AspNetUsers>("DB_A0A0AE_ClientModel.AspNetRoles_AspNetUsers", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AspNetUsers>("DB_A0A0AE_ClientModel.AspNetRoles_AspNetUsers", "AspNetUsers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AspNetUserClaims in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AspNetUserClaims")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserClaims : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AspNetUserClaims object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static AspNetUserClaims CreateAspNetUserClaims(int id, string userId)
        {
            AspNetUserClaims aspNetUserClaims = new AspNetUserClaims();
            aspNetUserClaims.Id = id;
            aspNetUserClaims.UserId = userId;
            return aspNetUserClaims;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for ClaimType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimType
        {
            get
            {
                string value = _ClaimType;
                OnGetClaimType(ref value);
                return value;
            }
            set
            {
                if (_ClaimType != value)
                {
                  OnClaimTypeChanging(ref value);
                  ReportPropertyChanging("ClaimType");
                  _ClaimType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimType");
                  OnClaimTypeChanged();
              }
            }
        }
        private string _ClaimType;
        partial void OnGetClaimType(ref string value);
        partial void OnClaimTypeChanging(ref string value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// There are no comments for ClaimValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimValue
        {
            get
            {
                string value = _ClaimValue;
                OnGetClaimValue(ref value);
                return value;
            }
            set
            {
                if (_ClaimValue != value)
                {
                  OnClaimValueChanging(ref value);
                  ReportPropertyChanging("ClaimValue");
                  _ClaimValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimValue");
                  OnClaimValueChanged();
              }
            }
        }
        private string _ClaimValue;
        partial void OnGetClaimValue(ref string value);
        partial void OnClaimValueChanging(ref string value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AspNetUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers")]
        public virtual AspNetUsers AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AspNetUsers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUsers> AspNetUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUsers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AspNetUserLogins in the schema.
    /// </summary>
    /// <KeyProperties>
    /// LoginProvider
    /// ProviderKey
    /// UserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AspNetUserLogins")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserLogins : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AspNetUserLogins object.
        /// </summary>
        /// <param name="loginProvider">Initial value of LoginProvider.</param>
        /// <param name="providerKey">Initial value of ProviderKey.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static AspNetUserLogins CreateAspNetUserLogins(string loginProvider, string providerKey, string userId)
        {
            AspNetUserLogins aspNetUserLogins = new AspNetUserLogins();
            aspNetUserLogins.LoginProvider = loginProvider;
            aspNetUserLogins.ProviderKey = providerKey;
            aspNetUserLogins.UserId = userId;
            return aspNetUserLogins;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for LoginProvider in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LoginProvider
        {
            get
            {
                string value = _LoginProvider;
                OnGetLoginProvider(ref value);
                return value;
            }
            set
            {
                if (_LoginProvider != value)
                {
                  OnLoginProviderChanging(ref value);
                  ReportPropertyChanging("LoginProvider");
                  _LoginProvider = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LoginProvider");
                  OnLoginProviderChanged();
              }
            }
        }
        private string _LoginProvider;
        partial void OnGetLoginProvider(ref string value);
        partial void OnLoginProviderChanging(ref string value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// There are no comments for ProviderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProviderKey
        {
            get
            {
                string value = _ProviderKey;
                OnGetProviderKey(ref value);
                return value;
            }
            set
            {
                if (_ProviderKey != value)
                {
                  OnProviderKeyChanging(ref value);
                  ReportPropertyChanging("ProviderKey");
                  _ProviderKey = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProviderKey");
                  OnProviderKeyChanged();
              }
            }
        }
        private string _ProviderKey;
        partial void OnGetProviderKey(ref string value);
        partial void OnProviderKeyChanging(ref string value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AspNetUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers")]
        public virtual AspNetUsers AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AspNetUsers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUsers> AspNetUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AspNetUsers>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUsers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AspNetUsers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AspNetUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUsers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AspNetUsers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="emailConfirmed">Initial value of EmailConfirmed.</param>
        /// <param name="phoneNumberConfirmed">Initial value of PhoneNumberConfirmed.</param>
        /// <param name="twoFactorEnabled">Initial value of TwoFactorEnabled.</param>
        /// <param name="lockoutEnabled">Initial value of LockoutEnabled.</param>
        /// <param name="accessFailedCount">Initial value of AccessFailedCount.</param>
        /// <param name="userName">Initial value of UserName.</param>
        public static AspNetUsers CreateAspNetUsers(string id, bool emailConfirmed, bool phoneNumberConfirmed, bool twoFactorEnabled, bool lockoutEnabled, int accessFailedCount, string userName)
        {
            AspNetUsers aspNetUsers = new AspNetUsers();
            aspNetUsers.Id = id;
            aspNetUsers.EmailConfirmed = emailConfirmed;
            aspNetUsers.PhoneNumberConfirmed = phoneNumberConfirmed;
            aspNetUsers.TwoFactorEnabled = twoFactorEnabled;
            aspNetUsers.LockoutEnabled = lockoutEnabled;
            aspNetUsers.AccessFailedCount = accessFailedCount;
            aspNetUsers.UserName = userName;
            return aspNetUsers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for EmailConfirmed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool EmailConfirmed
        {
            get
            {
                bool value = _EmailConfirmed;
                OnGetEmailConfirmed(ref value);
                return value;
            }
            set
            {
                if (_EmailConfirmed != value)
                {
                  OnEmailConfirmedChanging(ref value);
                  ReportPropertyChanging("EmailConfirmed");
                  _EmailConfirmed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmailConfirmed");
                  OnEmailConfirmedChanged();
              }
            }
        }
        private bool _EmailConfirmed;
        partial void OnGetEmailConfirmed(ref bool value);
        partial void OnEmailConfirmedChanging(ref bool value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// There are no comments for PasswordHash in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PasswordHash
        {
            get
            {
                string value = _PasswordHash;
                OnGetPasswordHash(ref value);
                return value;
            }
            set
            {
                if (_PasswordHash != value)
                {
                  OnPasswordHashChanging(ref value);
                  ReportPropertyChanging("PasswordHash");
                  _PasswordHash = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PasswordHash");
                  OnPasswordHashChanged();
              }
            }
        }
        private string _PasswordHash;
        partial void OnGetPasswordHash(ref string value);
        partial void OnPasswordHashChanging(ref string value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// There are no comments for SecurityStamp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SecurityStamp
        {
            get
            {
                string value = _SecurityStamp;
                OnGetSecurityStamp(ref value);
                return value;
            }
            set
            {
                if (_SecurityStamp != value)
                {
                  OnSecurityStampChanging(ref value);
                  ReportPropertyChanging("SecurityStamp");
                  _SecurityStamp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SecurityStamp");
                  OnSecurityStampChanged();
              }
            }
        }
        private string _SecurityStamp;
        partial void OnGetSecurityStamp(ref string value);
        partial void OnSecurityStampChanging(ref string value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhoneNumber
        {
            get
            {
                string value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private string _PhoneNumber;
        partial void OnGetPhoneNumber(ref string value);
        partial void OnPhoneNumberChanging(ref string value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumberConfirmed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool PhoneNumberConfirmed
        {
            get
            {
                bool value = _PhoneNumberConfirmed;
                OnGetPhoneNumberConfirmed(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumberConfirmed != value)
                {
                  OnPhoneNumberConfirmedChanging(ref value);
                  ReportPropertyChanging("PhoneNumberConfirmed");
                  _PhoneNumberConfirmed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumberConfirmed");
                  OnPhoneNumberConfirmedChanged();
              }
            }
        }
        private bool _PhoneNumberConfirmed;
        partial void OnGetPhoneNumberConfirmed(ref bool value);
        partial void OnPhoneNumberConfirmedChanging(ref bool value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// There are no comments for TwoFactorEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool TwoFactorEnabled
        {
            get
            {
                bool value = _TwoFactorEnabled;
                OnGetTwoFactorEnabled(ref value);
                return value;
            }
            set
            {
                if (_TwoFactorEnabled != value)
                {
                  OnTwoFactorEnabledChanging(ref value);
                  ReportPropertyChanging("TwoFactorEnabled");
                  _TwoFactorEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TwoFactorEnabled");
                  OnTwoFactorEnabledChanged();
              }
            }
        }
        private bool _TwoFactorEnabled;
        partial void OnGetTwoFactorEnabled(ref bool value);
        partial void OnTwoFactorEnabledChanging(ref bool value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// There are no comments for LockoutEndDateUtc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LockoutEndDateUtc
        {
            get
            {
                global::System.DateTime? value = _LockoutEndDateUtc;
                OnGetLockoutEndDateUtc(ref value);
                return value;
            }
            set
            {
                if (_LockoutEndDateUtc != value)
                {
                  OnLockoutEndDateUtcChanging(ref value);
                  ReportPropertyChanging("LockoutEndDateUtc");
                  _LockoutEndDateUtc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEndDateUtc");
                  OnLockoutEndDateUtcChanged();
              }
            }
        }
        private global::System.DateTime? _LockoutEndDateUtc;
        partial void OnGetLockoutEndDateUtc(ref global::System.DateTime? value);
        partial void OnLockoutEndDateUtcChanging(ref global::System.DateTime? value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// There are no comments for LockoutEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool LockoutEnabled
        {
            get
            {
                bool value = _LockoutEnabled;
                OnGetLockoutEnabled(ref value);
                return value;
            }
            set
            {
                if (_LockoutEnabled != value)
                {
                  OnLockoutEnabledChanging(ref value);
                  ReportPropertyChanging("LockoutEnabled");
                  _LockoutEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEnabled");
                  OnLockoutEnabledChanged();
              }
            }
        }
        private bool _LockoutEnabled;
        partial void OnGetLockoutEnabled(ref bool value);
        partial void OnLockoutEnabledChanging(ref bool value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// There are no comments for AccessFailedCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccessFailedCount
        {
            get
            {
                int value = _AccessFailedCount;
                OnGetAccessFailedCount(ref value);
                return value;
            }
            set
            {
                if (_AccessFailedCount != value)
                {
                  OnAccessFailedCountChanging(ref value);
                  ReportPropertyChanging("AccessFailedCount");
                  _AccessFailedCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessFailedCount");
                  OnAccessFailedCountChanged();
              }
            }
        }
        private int _AccessFailedCount;
        partial void OnGetAccessFailedCount(ref int value);
        partial void OnAccessFailedCountChanging(ref int value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserName
        {
            get
            {
                string value = _UserName;
                OnGetUserName(ref value);
                return value;
            }
            set
            {
                if (_UserName != value)
                {
                  OnUserNameChanging(ref value);
                  ReportPropertyChanging("UserName");
                  _UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserName");
                  OnUserNameChanged();
              }
            }
        }
        private string _UserName;
        partial void OnGetUserName(ref string value);
        partial void OnUserNameChanging(ref string value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// There are no comments for ConcurrencyStamp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConcurrencyStamp
        {
            get
            {
                string value = _ConcurrencyStamp;
                OnGetConcurrencyStamp(ref value);
                return value;
            }
            set
            {
                if (_ConcurrencyStamp != value)
                {
                  OnConcurrencyStampChanging(ref value);
                  ReportPropertyChanging("ConcurrencyStamp");
                  _ConcurrencyStamp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConcurrencyStamp");
                  OnConcurrencyStampChanged();
              }
            }
        }
        private string _ConcurrencyStamp;
        partial void OnGetConcurrencyStamp(ref string value);
        partial void OnConcurrencyStampChanging(ref string value);
        partial void OnConcurrencyStampChanged();
    
        /// <summary>
        /// There are no comments for LockoutEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LockoutEnd
        {
            get
            {
                global::System.DateTime? value = _LockoutEnd;
                OnGetLockoutEnd(ref value);
                return value;
            }
            set
            {
                if (_LockoutEnd != value)
                {
                  OnLockoutEndChanging(ref value);
                  ReportPropertyChanging("LockoutEnd");
                  _LockoutEnd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEnd");
                  OnLockoutEndChanged();
              }
            }
        }
        private global::System.DateTime? _LockoutEnd;
        partial void OnGetLockoutEnd(ref global::System.DateTime? value);
        partial void OnLockoutEndChanging(ref global::System.DateTime? value);
        partial void OnLockoutEndChanged();
    
        /// <summary>
        /// There are no comments for NormalizedEmail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NormalizedEmail
        {
            get
            {
                string value = _NormalizedEmail;
                OnGetNormalizedEmail(ref value);
                return value;
            }
            set
            {
                if (_NormalizedEmail != value)
                {
                  OnNormalizedEmailChanging(ref value);
                  ReportPropertyChanging("NormalizedEmail");
                  _NormalizedEmail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NormalizedEmail");
                  OnNormalizedEmailChanged();
              }
            }
        }
        private string _NormalizedEmail;
        partial void OnGetNormalizedEmail(ref string value);
        partial void OnNormalizedEmailChanging(ref string value);
        partial void OnNormalizedEmailChanged();
    
        /// <summary>
        /// There are no comments for NormalizedUserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NormalizedUserName
        {
            get
            {
                string value = _NormalizedUserName;
                OnGetNormalizedUserName(ref value);
                return value;
            }
            set
            {
                if (_NormalizedUserName != value)
                {
                  OnNormalizedUserNameChanging(ref value);
                  ReportPropertyChanging("NormalizedUserName");
                  _NormalizedUserName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NormalizedUserName");
                  OnNormalizedUserNameChanged();
              }
            }
        }
        private string _NormalizedUserName;
        partial void OnGetNormalizedUserName(ref string value);
        partial void OnNormalizedUserNameChanging(ref string value);
        partial void OnNormalizedUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AspNetUserClaims in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUserClaims")]
        public virtual EntityCollection<AspNetUserClaims> AspNetUserClaims
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AspNetUserClaims>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUserClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AspNetUserClaims>("DB_A0A0AE_ClientModel.FK_dboAspNetUserClaims_dboAspNetUsers_UserId", "AspNetUserClaims", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AspNetUserLogins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUserLogins")]
        public virtual EntityCollection<AspNetUserLogins> AspNetUserLogins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AspNetUserLogins>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUserLogins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AspNetUserLogins>("DB_A0A0AE_ClientModel.FK_dboAspNetUserLogins_dboAspNetUsers_UserId", "AspNetUserLogins", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AspNetRoles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "AspNetRoles_AspNetUsers", "AspNetRoles")]
        public virtual EntityCollection<AspNetRoles> AspNetRoles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AspNetRoles>("DB_A0A0AE_ClientModel.AspNetRoles_AspNetUsers", "AspNetRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AspNetRoles>("DB_A0A0AE_ClientModel.AspNetRoles_AspNetUsers", "AspNetRoles", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.AsSales in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="AsSales")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsSales : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AsSales object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="trxDate">Initial value of TrxDate.</param>
        /// <param name="trxDesc">Initial value of TrxDesc.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="asCostCenterId">Initial value of AsCostCenterId.</param>
        /// <param name="asIncCategoryId">Initial value of AsIncCategoryId.</param>
        /// <param name="asIncClientId">Initial value of AsIncClientId.</param>
        public static AsSales CreateAsSales(int id, global::System.DateTime trxDate, string trxDesc, decimal amount, int asCostCenterId, int asIncCategoryId, int asIncClientId)
        {
            AsSales asSales = new AsSales();
            asSales.Id = id;
            asSales.TrxDate = trxDate;
            asSales.TrxDesc = trxDesc;
            asSales.Amount = amount;
            asSales.AsCostCenterId = asCostCenterId;
            asSales.AsIncCategoryId = asIncCategoryId;
            asSales.AsIncClientId = asIncClientId;
            return asSales;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TrxDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TrxDate
        {
            get
            {
                global::System.DateTime value = _TrxDate;
                OnGetTrxDate(ref value);
                return value;
            }
            set
            {
                if (_TrxDate != value)
                {
                  OnTrxDateChanging(ref value);
                  ReportPropertyChanging("TrxDate");
                  _TrxDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrxDate");
                  OnTrxDateChanged();
              }
            }
        }
        private global::System.DateTime _TrxDate;
        partial void OnGetTrxDate(ref global::System.DateTime value);
        partial void OnTrxDateChanging(ref global::System.DateTime value);
        partial void OnTrxDateChanged();
    
        /// <summary>
        /// There are no comments for TrxDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TrxDesc
        {
            get
            {
                string value = _TrxDesc;
                OnGetTrxDesc(ref value);
                return value;
            }
            set
            {
                if (_TrxDesc != value)
                {
                  OnTrxDescChanging(ref value);
                  ReportPropertyChanging("TrxDesc");
                  _TrxDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TrxDesc");
                  OnTrxDescChanged();
              }
            }
        }
        private string _TrxDesc;
        partial void OnGetTrxDesc(ref string value);
        partial void OnTrxDescChanging(ref string value);
        partial void OnTrxDescChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for DateEntered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DateEntered
        {
            get
            {
                global::System.DateTime? value = _DateEntered;
                OnGetDateEntered(ref value);
                return value;
            }
            set
            {
                if (_DateEntered != value)
                {
                  OnDateEnteredChanging(ref value);
                  ReportPropertyChanging("DateEntered");
                  _DateEntered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateEntered");
                  OnDateEnteredChanged();
              }
            }
        }
        private global::System.DateTime? _DateEntered;
        partial void OnGetDateEntered(ref global::System.DateTime? value);
        partial void OnDateEnteredChanging(ref global::System.DateTime? value);
        partial void OnDateEnteredChanged();
    
        /// <summary>
        /// There are no comments for AsCostCenterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AsCostCenterId
        {
            get
            {
                int value = _AsCostCenterId;
                OnGetAsCostCenterId(ref value);
                return value;
            }
            set
            {
                if (_AsCostCenterId != value)
                {
                  OnAsCostCenterIdChanging(ref value);
                  ReportPropertyChanging("AsCostCenterId");
                  _AsCostCenterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AsCostCenterId");
                  OnAsCostCenterIdChanged();
              }
            }
        }
        private int _AsCostCenterId;
        partial void OnGetAsCostCenterId(ref int value);
        partial void OnAsCostCenterIdChanging(ref int value);
        partial void OnAsCostCenterIdChanged();
    
        /// <summary>
        /// There are no comments for AsIncCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AsIncCategoryId
        {
            get
            {
                int value = _AsIncCategoryId;
                OnGetAsIncCategoryId(ref value);
                return value;
            }
            set
            {
                if (_AsIncCategoryId != value)
                {
                  OnAsIncCategoryIdChanging(ref value);
                  ReportPropertyChanging("AsIncCategoryId");
                  _AsIncCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AsIncCategoryId");
                  OnAsIncCategoryIdChanged();
              }
            }
        }
        private int _AsIncCategoryId;
        partial void OnGetAsIncCategoryId(ref int value);
        partial void OnAsIncCategoryIdChanging(ref int value);
        partial void OnAsIncCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for AsIncClientId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AsIncClientId
        {
            get
            {
                int value = _AsIncClientId;
                OnGetAsIncClientId(ref value);
                return value;
            }
            set
            {
                if (_AsIncClientId != value)
                {
                  OnAsIncClientIdChanging(ref value);
                  ReportPropertyChanging("AsIncClientId");
                  _AsIncClientId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AsIncClientId");
                  OnAsIncClientIdChanged();
              }
            }
        }
        private int _AsIncClientId;
        partial void OnGetAsIncClientId(ref int value);
        partial void OnAsIncClientIdChanging(ref int value);
        partial void OnAsIncClientIdChanged();
    
        /// <summary>
        /// There are no comments for OrRef in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string OrRef
        {
            get
            {
                string value = _OrRef;
                OnGetOrRef(ref value);
                return value;
            }
            set
            {
                if (_OrRef != value)
                {
                  OnOrRefChanging(ref value);
                  ReportPropertyChanging("OrRef");
                  _OrRef = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrRef");
                  OnOrRefChanged();
              }
            }
        }
        private string _OrRef;
        partial void OnGetOrRef(ref string value);
        partial void OnOrRefChanging(ref string value);
        partial void OnOrRefChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AsCostCenters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsCostCenterAsSales", "AsCostCenters")]
        public virtual AsCostCenters AsCostCenters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsCostCenters").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsCostCenters").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AsCostCenters in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsCostCenters> AsCostCentersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsCostCenters");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsCostCenters", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsCostCenters>("DB_A0A0AE_ClientModel.FK_AsCostCenterAsSales", "AsCostCenters").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AsIncCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsIncCategoryAsSales", "AsIncCategories")]
        public virtual AsIncCategories AsIncCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncCategories>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsIncCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncCategories>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsIncCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AsIncCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsIncCategories> AsIncCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncCategories>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsIncCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AsIncCategories>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsIncCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncCategories>("DB_A0A0AE_ClientModel.FK_AsIncCategoryAsSales", "AsIncCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AsIncClients in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_AsIncClientAsSales", "AsIncClients")]
        public virtual AsIncClients AsIncClients
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncClients>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsIncClients").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncClients>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsIncClients").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for AsIncClients in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsIncClients> AsIncClientsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncClients>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsIncClients");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<AsIncClients>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsIncClients", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<AsIncClients>("DB_A0A0AE_ClientModel.FK_AsIncClientAsSales", "AsIncClients").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Banks in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Banks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Banks : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Banks object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="bankName">Initial value of BankName.</param>
        /// <param name="bankBranch">Initial value of BankBranch.</param>
        /// <param name="accntName">Initial value of AccntName.</param>
        /// <param name="accntNo">Initial value of AccntNo.</param>
        public static Banks CreateBanks(int id, string bankName, string bankBranch, string accntName, string accntNo)
        {
            Banks banks = new Banks();
            banks.Id = id;
            banks.BankName = bankName;
            banks.BankBranch = bankBranch;
            banks.AccntName = accntName;
            banks.AccntNo = accntNo;
            return banks;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for BankName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BankName
        {
            get
            {
                string value = _BankName;
                OnGetBankName(ref value);
                return value;
            }
            set
            {
                if (_BankName != value)
                {
                  OnBankNameChanging(ref value);
                  ReportPropertyChanging("BankName");
                  _BankName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BankName");
                  OnBankNameChanged();
              }
            }
        }
        private string _BankName;
        partial void OnGetBankName(ref string value);
        partial void OnBankNameChanging(ref string value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// There are no comments for BankBranch in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BankBranch
        {
            get
            {
                string value = _BankBranch;
                OnGetBankBranch(ref value);
                return value;
            }
            set
            {
                if (_BankBranch != value)
                {
                  OnBankBranchChanging(ref value);
                  ReportPropertyChanging("BankBranch");
                  _BankBranch = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BankBranch");
                  OnBankBranchChanged();
              }
            }
        }
        private string _BankBranch;
        partial void OnGetBankBranch(ref string value);
        partial void OnBankBranchChanging(ref string value);
        partial void OnBankBranchChanged();
    
        /// <summary>
        /// There are no comments for AccntName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AccntName
        {
            get
            {
                string value = _AccntName;
                OnGetAccntName(ref value);
                return value;
            }
            set
            {
                if (_AccntName != value)
                {
                  OnAccntNameChanging(ref value);
                  ReportPropertyChanging("AccntName");
                  _AccntName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AccntName");
                  OnAccntNameChanged();
              }
            }
        }
        private string _AccntName;
        partial void OnGetAccntName(ref string value);
        partial void OnAccntNameChanging(ref string value);
        partial void OnAccntNameChanged();
    
        /// <summary>
        /// There are no comments for AccntNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AccntNo
        {
            get
            {
                string value = _AccntNo;
                OnGetAccntNo(ref value);
                return value;
            }
            set
            {
                if (_AccntNo != value)
                {
                  OnAccntNoChanging(ref value);
                  ReportPropertyChanging("AccntNo");
                  _AccntNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AccntNo");
                  OnAccntNoChanged();
              }
            }
        }
        private string _AccntNo;
        partial void OnGetAccntNo(ref string value);
        partial void OnAccntNoChanging(ref string value);
        partial void OnAccntNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobPayments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_BankJobPayment", "JobPayments")]
        public virtual EntityCollection<JobPayments> JobPayments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobPayments>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "JobPayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobPayments>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "JobPayments", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.BlasterLogs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="BlasterLogs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlasterLogs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new BlasterLogs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="emailBlasterLogsId">Initial value of EmailBlasterLogsId.</param>
        /// <param name="emailBlasterTemplateId">Initial value of EmailBlasterTemplateId.</param>
        /// <param name="reportId">Initial value of ReportId.</param>
        public static BlasterLogs CreateBlasterLogs(int id, int emailBlasterLogsId, int emailBlasterTemplateId, int reportId)
        {
            BlasterLogs blasterLogs = new BlasterLogs();
            blasterLogs.Id = id;
            blasterLogs.EmailBlasterLogsId = emailBlasterLogsId;
            blasterLogs.EmailBlasterTemplateId = emailBlasterTemplateId;
            blasterLogs.ReportId = reportId;
            return blasterLogs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for EmailBlasterLogsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EmailBlasterLogsId
        {
            get
            {
                int value = _EmailBlasterLogsId;
                OnGetEmailBlasterLogsId(ref value);
                return value;
            }
            set
            {
                if (_EmailBlasterLogsId != value)
                {
                  OnEmailBlasterLogsIdChanging(ref value);
                  ReportPropertyChanging("EmailBlasterLogsId");
                  _EmailBlasterLogsId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmailBlasterLogsId");
                  OnEmailBlasterLogsIdChanged();
              }
            }
        }
        private int _EmailBlasterLogsId;
        partial void OnGetEmailBlasterLogsId(ref int value);
        partial void OnEmailBlasterLogsIdChanging(ref int value);
        partial void OnEmailBlasterLogsIdChanged();
    
        /// <summary>
        /// There are no comments for EmailBlasterTemplateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EmailBlasterTemplateId
        {
            get
            {
                int value = _EmailBlasterTemplateId;
                OnGetEmailBlasterTemplateId(ref value);
                return value;
            }
            set
            {
                if (_EmailBlasterTemplateId != value)
                {
                  OnEmailBlasterTemplateIdChanging(ref value);
                  ReportPropertyChanging("EmailBlasterTemplateId");
                  _EmailBlasterTemplateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmailBlasterTemplateId");
                  OnEmailBlasterTemplateIdChanged();
              }
            }
        }
        private int _EmailBlasterTemplateId;
        partial void OnGetEmailBlasterTemplateId(ref int value);
        partial void OnEmailBlasterTemplateIdChanging(ref int value);
        partial void OnEmailBlasterTemplateIdChanged();
    
        /// <summary>
        /// There are no comments for ReportId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ReportId
        {
            get
            {
                int value = _ReportId;
                OnGetReportId(ref value);
                return value;
            }
            set
            {
                if (_ReportId != value)
                {
                  OnReportIdChanging(ref value);
                  ReportPropertyChanging("ReportId");
                  _ReportId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReportId");
                  OnReportIdChanged();
              }
            }
        }
        private int _ReportId;
        partial void OnGetReportId(ref int value);
        partial void OnReportIdChanging(ref int value);
        partial void OnReportIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EmailBlasterLogs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs")]
        public virtual EmailBlasterLogs EmailBlasterLogs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EmailBlasterLogs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailBlasterLogs> EmailBlasterLogsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EmailBlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "EmailBlasterLogs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EmailBlasterTemplates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates")]
        public virtual EmailBlasterTemplates EmailBlasterTemplates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterTemplates>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterTemplates>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EmailBlasterTemplates in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailBlasterTemplates> EmailBlasterTemplatesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterTemplates>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EmailBlasterTemplates>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EmailBlasterTemplates>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "EmailBlasterTemplates").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Branches in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Branches")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Branches : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Branches object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="cityId">Initial value of CityId.</param>
        public static Branches CreateBranches(int id, string name, int cityId)
        {
            Branches branches = new Branches();
            branches.Id = id;
            branches.Name = name;
            branches.CityId = cityId;
            return branches;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for CityId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CityId
        {
            get
            {
                int value = _CityId;
                OnGetCityId(ref value);
                return value;
            }
            set
            {
                if (_CityId != value)
                {
                  OnCityIdChanging(ref value);
                  ReportPropertyChanging("CityId");
                  _CityId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CityId");
                  OnCityIdChanged();
              }
            }
        }
        private int _CityId;
        partial void OnGetCityId(ref int value);
        partial void OnCityIdChanging(ref int value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for Landline in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Landline
        {
            get
            {
                string value = _Landline;
                OnGetLandline(ref value);
                return value;
            }
            set
            {
                if (_Landline != value)
                {
                  OnLandlineChanging(ref value);
                  ReportPropertyChanging("Landline");
                  _Landline = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Landline");
                  OnLandlineChanged();
              }
            }
        }
        private string _Landline;
        partial void OnGetLandline(ref string value);
        partial void OnLandlineChanging(ref string value);
        partial void OnLandlineChanged();
    
        /// <summary>
        /// There are no comments for Mobile in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mobile
        {
            get
            {
                string value = _Mobile;
                OnGetMobile(ref value);
                return value;
            }
            set
            {
                if (_Mobile != value)
                {
                  OnMobileChanging(ref value);
                  ReportPropertyChanging("Mobile");
                  _Mobile = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mobile");
                  OnMobileChanged();
              }
            }
        }
        private string _Mobile;
        partial void OnGetMobile(ref string value);
        partial void OnMobileChanging(ref string value);
        partial void OnMobileChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CityBranch", "Cities")]
        public virtual Cities Cities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityBranch", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityBranch", "Cities").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityBranch", "Cities");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityBranch", "Cities", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityBranch", "Cities").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_BranchJobMain", "JobMains")]
        public virtual EntityCollection<JobMains> JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "JobMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "JobMains", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static CarCategories CreateCarCategories(int id)
        {
            CarCategories carCategories = new CarCategories();
            carCategories.Id = id;
            return carCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarCategoryCarUnit", "CarUnits")]
        public virtual EntityCollection<CarUnits> CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarUnits>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarUnits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarUnits>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarUnits", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarDestinations in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarDestinations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarDestinations : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarDestinations object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="cityId">Initial value of CityId.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="kms">Initial value of Kms.</param>
        public static CarDestinations CreateCarDestinations(int id, int cityId, string description, int kms)
        {
            CarDestinations carDestinations = new CarDestinations();
            carDestinations.Id = id;
            carDestinations.CityId = cityId;
            carDestinations.Description = description;
            carDestinations.Kms = kms;
            return carDestinations;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CityId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CityId
        {
            get
            {
                int value = _CityId;
                OnGetCityId(ref value);
                return value;
            }
            set
            {
                if (_CityId != value)
                {
                  OnCityIdChanging(ref value);
                  ReportPropertyChanging("CityId");
                  _CityId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CityId");
                  OnCityIdChanged();
              }
            }
        }
        private int _CityId;
        partial void OnGetCityId(ref int value);
        partial void OnCityIdChanging(ref int value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Kms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Kms
        {
            get
            {
                int value = _Kms;
                OnGetKms(ref value);
                return value;
            }
            set
            {
                if (_Kms != value)
                {
                  OnKmsChanging(ref value);
                  ReportPropertyChanging("Kms");
                  _Kms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Kms");
                  OnKmsChanged();
              }
            }
        }
        private int _Kms;
        partial void OnGetKms(ref int value);
        partial void OnKmsChanging(ref int value);
        partial void OnKmsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CityCarDestination", "Cities")]
        public virtual Cities Cities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "Cities").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "Cities");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "Cities", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "Cities").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarImages in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarImages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarImages : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarImages object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="carUnitId">Initial value of CarUnitId.</param>
        /// <param name="imgUrl">Initial value of ImgUrl.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        public static CarImages CreateCarImages(int id, int carUnitId, string imgUrl, string remarks, string sysCode)
        {
            CarImages carImages = new CarImages();
            carImages.Id = id;
            carImages.CarUnitId = carUnitId;
            carImages.ImgUrl = imgUrl;
            carImages.Remarks = remarks;
            carImages.SysCode = sysCode;
            return carImages;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CarUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarUnitId
        {
            get
            {
                int value = _CarUnitId;
                OnGetCarUnitId(ref value);
                return value;
            }
            set
            {
                if (_CarUnitId != value)
                {
                  OnCarUnitIdChanging(ref value);
                  ReportPropertyChanging("CarUnitId");
                  _CarUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarUnitId");
                  OnCarUnitIdChanged();
              }
            }
        }
        private int _CarUnitId;
        partial void OnGetCarUnitId(ref int value);
        partial void OnCarUnitIdChanging(ref int value);
        partial void OnCarUnitIdChanged();
    
        /// <summary>
        /// There are no comments for ImgUrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ImgUrl
        {
            get
            {
                string value = _ImgUrl;
                OnGetImgUrl(ref value);
                return value;
            }
            set
            {
                if (_ImgUrl != value)
                {
                  OnImgUrlChanging(ref value);
                  ReportPropertyChanging("ImgUrl");
                  _ImgUrl = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ImgUrl");
                  OnImgUrlChanged();
              }
            }
        }
        private string _ImgUrl;
        partial void OnGetImgUrl(ref string value);
        partial void OnImgUrlChanging(ref string value);
        partial void OnImgUrlChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarImage", "CarUnits")]
        public virtual CarUnits CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarUnits> CarUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarUnits").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarRateGroups in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarRateGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarRateGroups : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarRateGroups object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="rateGroupId">Initial value of RateGroupId.</param>
        /// <param name="carRatePackageId">Initial value of CarRatePackageId.</param>
        public static CarRateGroups CreateCarRateGroups(int id, int rateGroupId, int carRatePackageId)
        {
            CarRateGroups carRateGroups = new CarRateGroups();
            carRateGroups.Id = id;
            carRateGroups.RateGroupId = rateGroupId;
            carRateGroups.CarRatePackageId = carRatePackageId;
            return carRateGroups;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for RateGroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RateGroupId
        {
            get
            {
                int value = _RateGroupId;
                OnGetRateGroupId(ref value);
                return value;
            }
            set
            {
                if (_RateGroupId != value)
                {
                  OnRateGroupIdChanging(ref value);
                  ReportPropertyChanging("RateGroupId");
                  _RateGroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RateGroupId");
                  OnRateGroupIdChanged();
              }
            }
        }
        private int _RateGroupId;
        partial void OnGetRateGroupId(ref int value);
        partial void OnRateGroupIdChanging(ref int value);
        partial void OnRateGroupIdChanged();
    
        /// <summary>
        /// There are no comments for CarRatePackageId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarRatePackageId
        {
            get
            {
                int value = _CarRatePackageId;
                OnGetCarRatePackageId(ref value);
                return value;
            }
            set
            {
                if (_CarRatePackageId != value)
                {
                  OnCarRatePackageIdChanging(ref value);
                  ReportPropertyChanging("CarRatePackageId");
                  _CarRatePackageId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarRatePackageId");
                  OnCarRatePackageIdChanged();
              }
            }
        }
        private int _CarRatePackageId;
        partial void OnGetCarRatePackageId(ref int value);
        partial void OnCarRatePackageIdChanging(ref int value);
        partial void OnCarRatePackageIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RateGroups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RateGroupCarRateGroup", "RateGroups")]
        public virtual RateGroups RateGroups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "RateGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "RateGroups").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RateGroups in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RateGroups> RateGroupsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "RateGroups");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<RateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "RateGroups", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "RateGroups").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarRatePackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarRatePackageCarRateGroup", "CarRatePackages")]
        public virtual CarRatePackages CarRatePackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRatePackages").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRatePackages").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarRatePackages in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarRatePackages> CarRatePackagesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRatePackages");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRatePackages", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRatePackages").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarRatePackages in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarRatePackages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarRatePackages : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarRatePackages object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="dailyMeals">Initial value of DailyMeals.</param>
        /// <param name="dailyRoom">Initial value of DailyRoom.</param>
        /// <param name="daysMin">Initial value of DaysMin.</param>
        public static CarRatePackages CreateCarRatePackages(int id, string description, decimal dailyMeals, decimal dailyRoom, int daysMin)
        {
            CarRatePackages carRatePackages = new CarRatePackages();
            carRatePackages.Id = id;
            carRatePackages.Description = description;
            carRatePackages.DailyMeals = dailyMeals;
            carRatePackages.DailyRoom = dailyRoom;
            carRatePackages.DaysMin = daysMin;
            return carRatePackages;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for DailyMeals in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DailyMeals
        {
            get
            {
                decimal value = _DailyMeals;
                OnGetDailyMeals(ref value);
                return value;
            }
            set
            {
                if (_DailyMeals != value)
                {
                  OnDailyMealsChanging(ref value);
                  ReportPropertyChanging("DailyMeals");
                  _DailyMeals = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DailyMeals");
                  OnDailyMealsChanged();
              }
            }
        }
        private decimal _DailyMeals;
        partial void OnGetDailyMeals(ref decimal value);
        partial void OnDailyMealsChanging(ref decimal value);
        partial void OnDailyMealsChanged();
    
        /// <summary>
        /// There are no comments for DailyRoom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DailyRoom
        {
            get
            {
                decimal value = _DailyRoom;
                OnGetDailyRoom(ref value);
                return value;
            }
            set
            {
                if (_DailyRoom != value)
                {
                  OnDailyRoomChanging(ref value);
                  ReportPropertyChanging("DailyRoom");
                  _DailyRoom = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DailyRoom");
                  OnDailyRoomChanged();
              }
            }
        }
        private decimal _DailyRoom;
        partial void OnGetDailyRoom(ref decimal value);
        partial void OnDailyRoomChanging(ref decimal value);
        partial void OnDailyRoomChanged();
    
        /// <summary>
        /// There are no comments for DaysMin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DaysMin
        {
            get
            {
                int value = _DaysMin;
                OnGetDaysMin(ref value);
                return value;
            }
            set
            {
                if (_DaysMin != value)
                {
                  OnDaysMinChanging(ref value);
                  ReportPropertyChanging("DaysMin");
                  _DaysMin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DaysMin");
                  OnDaysMinChanged();
              }
            }
        }
        private int _DaysMin;
        partial void OnGetDaysMin(ref int value);
        partial void OnDaysMinChanging(ref int value);
        partial void OnDaysMinChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarRateGroups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarRatePackageCarRateGroup", "CarRateGroups")]
        public virtual EntityCollection<CarRateGroups> CarRateGroups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarRateGroups>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRateGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarRateGroups>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateGroup", "CarRateGroups", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarRateUnitPackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarRatePackageCarRateUnitPackage", "CarRateUnitPackages")]
        public virtual EntityCollection<CarRateUnitPackages> CarRateUnitPackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRateUnitPackages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRateUnitPackages", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarRates in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarRates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarRates : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarRates object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="daily">Initial value of Daily.</param>
        /// <param name="weekly">Initial value of Weekly.</param>
        /// <param name="monthly">Initial value of Monthly.</param>
        /// <param name="kmFree">Initial value of KmFree.</param>
        /// <param name="kmRate">Initial value of KmRate.</param>
        /// <param name="carUnitId">Initial value of CarUnitId.</param>
        /// <param name="otRate">Initial value of OtRate.</param>
        public static CarRates CreateCarRates(int id, decimal daily, decimal weekly, decimal monthly, int kmFree, int kmRate, int carUnitId, decimal otRate)
        {
            CarRates carRates = new CarRates();
            carRates.Id = id;
            carRates.Daily = daily;
            carRates.Weekly = weekly;
            carRates.Monthly = monthly;
            carRates.KmFree = kmFree;
            carRates.KmRate = kmRate;
            carRates.CarUnitId = carUnitId;
            carRates.OtRate = otRate;
            return carRates;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Daily in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Daily
        {
            get
            {
                decimal value = _Daily;
                OnGetDaily(ref value);
                return value;
            }
            set
            {
                if (_Daily != value)
                {
                  OnDailyChanging(ref value);
                  ReportPropertyChanging("Daily");
                  _Daily = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Daily");
                  OnDailyChanged();
              }
            }
        }
        private decimal _Daily;
        partial void OnGetDaily(ref decimal value);
        partial void OnDailyChanging(ref decimal value);
        partial void OnDailyChanged();
    
        /// <summary>
        /// There are no comments for Weekly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Weekly
        {
            get
            {
                decimal value = _Weekly;
                OnGetWeekly(ref value);
                return value;
            }
            set
            {
                if (_Weekly != value)
                {
                  OnWeeklyChanging(ref value);
                  ReportPropertyChanging("Weekly");
                  _Weekly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Weekly");
                  OnWeeklyChanged();
              }
            }
        }
        private decimal _Weekly;
        partial void OnGetWeekly(ref decimal value);
        partial void OnWeeklyChanging(ref decimal value);
        partial void OnWeeklyChanged();
    
        /// <summary>
        /// There are no comments for Monthly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Monthly
        {
            get
            {
                decimal value = _Monthly;
                OnGetMonthly(ref value);
                return value;
            }
            set
            {
                if (_Monthly != value)
                {
                  OnMonthlyChanging(ref value);
                  ReportPropertyChanging("Monthly");
                  _Monthly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Monthly");
                  OnMonthlyChanged();
              }
            }
        }
        private decimal _Monthly;
        partial void OnGetMonthly(ref decimal value);
        partial void OnMonthlyChanging(ref decimal value);
        partial void OnMonthlyChanged();
    
        /// <summary>
        /// There are no comments for KmFree in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int KmFree
        {
            get
            {
                int value = _KmFree;
                OnGetKmFree(ref value);
                return value;
            }
            set
            {
                if (_KmFree != value)
                {
                  OnKmFreeChanging(ref value);
                  ReportPropertyChanging("KmFree");
                  _KmFree = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("KmFree");
                  OnKmFreeChanged();
              }
            }
        }
        private int _KmFree;
        partial void OnGetKmFree(ref int value);
        partial void OnKmFreeChanging(ref int value);
        partial void OnKmFreeChanged();
    
        /// <summary>
        /// There are no comments for KmRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int KmRate
        {
            get
            {
                int value = _KmRate;
                OnGetKmRate(ref value);
                return value;
            }
            set
            {
                if (_KmRate != value)
                {
                  OnKmRateChanging(ref value);
                  ReportPropertyChanging("KmRate");
                  _KmRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("KmRate");
                  OnKmRateChanged();
              }
            }
        }
        private int _KmRate;
        partial void OnGetKmRate(ref int value);
        partial void OnKmRateChanging(ref int value);
        partial void OnKmRateChanged();
    
        /// <summary>
        /// There are no comments for CarUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarUnitId
        {
            get
            {
                int value = _CarUnitId;
                OnGetCarUnitId(ref value);
                return value;
            }
            set
            {
                if (_CarUnitId != value)
                {
                  OnCarUnitIdChanging(ref value);
                  ReportPropertyChanging("CarUnitId");
                  _CarUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarUnitId");
                  OnCarUnitIdChanged();
              }
            }
        }
        private int _CarUnitId;
        partial void OnGetCarUnitId(ref int value);
        partial void OnCarUnitIdChanging(ref int value);
        partial void OnCarUnitIdChanged();
    
        /// <summary>
        /// There are no comments for OtRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OtRate
        {
            get
            {
                decimal value = _OtRate;
                OnGetOtRate(ref value);
                return value;
            }
            set
            {
                if (_OtRate != value)
                {
                  OnOtRateChanging(ref value);
                  ReportPropertyChanging("OtRate");
                  _OtRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OtRate");
                  OnOtRateChanged();
              }
            }
        }
        private decimal _OtRate;
        partial void OnGetOtRate(ref decimal value);
        partial void OnOtRateChanging(ref decimal value);
        partial void OnOtRateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarRate", "CarUnits")]
        public virtual CarUnits CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarUnits> CarUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarUnits").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarRateUnitPackages in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarRateUnitPackages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarRateUnitPackages : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarRateUnitPackages object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="carRatePackageId">Initial value of CarRatePackageId.</param>
        /// <param name="carUnitId">Initial value of CarUnitId.</param>
        /// <param name="dailyRate">Initial value of DailyRate.</param>
        /// <param name="fuelLonghaul">Initial value of FuelLonghaul.</param>
        /// <param name="fuelDaily">Initial value of FuelDaily.</param>
        public static CarRateUnitPackages CreateCarRateUnitPackages(int id, int carRatePackageId, int carUnitId, decimal dailyRate, decimal fuelLonghaul, decimal fuelDaily)
        {
            CarRateUnitPackages carRateUnitPackages = new CarRateUnitPackages();
            carRateUnitPackages.Id = id;
            carRateUnitPackages.CarRatePackageId = carRatePackageId;
            carRateUnitPackages.CarUnitId = carUnitId;
            carRateUnitPackages.DailyRate = dailyRate;
            carRateUnitPackages.FuelLonghaul = fuelLonghaul;
            carRateUnitPackages.FuelDaily = fuelDaily;
            return carRateUnitPackages;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CarRatePackageId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarRatePackageId
        {
            get
            {
                int value = _CarRatePackageId;
                OnGetCarRatePackageId(ref value);
                return value;
            }
            set
            {
                if (_CarRatePackageId != value)
                {
                  OnCarRatePackageIdChanging(ref value);
                  ReportPropertyChanging("CarRatePackageId");
                  _CarRatePackageId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarRatePackageId");
                  OnCarRatePackageIdChanged();
              }
            }
        }
        private int _CarRatePackageId;
        partial void OnGetCarRatePackageId(ref int value);
        partial void OnCarRatePackageIdChanging(ref int value);
        partial void OnCarRatePackageIdChanged();
    
        /// <summary>
        /// There are no comments for CarUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarUnitId
        {
            get
            {
                int value = _CarUnitId;
                OnGetCarUnitId(ref value);
                return value;
            }
            set
            {
                if (_CarUnitId != value)
                {
                  OnCarUnitIdChanging(ref value);
                  ReportPropertyChanging("CarUnitId");
                  _CarUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarUnitId");
                  OnCarUnitIdChanged();
              }
            }
        }
        private int _CarUnitId;
        partial void OnGetCarUnitId(ref int value);
        partial void OnCarUnitIdChanging(ref int value);
        partial void OnCarUnitIdChanged();
    
        /// <summary>
        /// There are no comments for DailyRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DailyRate
        {
            get
            {
                decimal value = _DailyRate;
                OnGetDailyRate(ref value);
                return value;
            }
            set
            {
                if (_DailyRate != value)
                {
                  OnDailyRateChanging(ref value);
                  ReportPropertyChanging("DailyRate");
                  _DailyRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DailyRate");
                  OnDailyRateChanged();
              }
            }
        }
        private decimal _DailyRate;
        partial void OnGetDailyRate(ref decimal value);
        partial void OnDailyRateChanging(ref decimal value);
        partial void OnDailyRateChanged();
    
        /// <summary>
        /// There are no comments for FuelLonghaul in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FuelLonghaul
        {
            get
            {
                decimal value = _FuelLonghaul;
                OnGetFuelLonghaul(ref value);
                return value;
            }
            set
            {
                if (_FuelLonghaul != value)
                {
                  OnFuelLonghaulChanging(ref value);
                  ReportPropertyChanging("FuelLonghaul");
                  _FuelLonghaul = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FuelLonghaul");
                  OnFuelLonghaulChanged();
              }
            }
        }
        private decimal _FuelLonghaul;
        partial void OnGetFuelLonghaul(ref decimal value);
        partial void OnFuelLonghaulChanging(ref decimal value);
        partial void OnFuelLonghaulChanged();
    
        /// <summary>
        /// There are no comments for FuelDaily in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FuelDaily
        {
            get
            {
                decimal value = _FuelDaily;
                OnGetFuelDaily(ref value);
                return value;
            }
            set
            {
                if (_FuelDaily != value)
                {
                  OnFuelDailyChanging(ref value);
                  ReportPropertyChanging("FuelDaily");
                  _FuelDaily = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FuelDaily");
                  OnFuelDailyChanged();
              }
            }
        }
        private decimal _FuelDaily;
        partial void OnGetFuelDaily(ref decimal value);
        partial void OnFuelDailyChanging(ref decimal value);
        partial void OnFuelDailyChanged();
    
        /// <summary>
        /// There are no comments for DailyAddon in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? DailyAddon
        {
            get
            {
                decimal? value = _DailyAddon;
                OnGetDailyAddon(ref value);
                return value;
            }
            set
            {
                if (_DailyAddon != value)
                {
                  OnDailyAddonChanging(ref value);
                  ReportPropertyChanging("DailyAddon");
                  _DailyAddon = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DailyAddon");
                  OnDailyAddonChanged();
              }
            }
        }
        private decimal? _DailyAddon;
        partial void OnGetDailyAddon(ref decimal? value);
        partial void OnDailyAddonChanging(ref decimal? value);
        partial void OnDailyAddonChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarRatePackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarRatePackageCarRateUnitPackage", "CarRatePackages")]
        public virtual CarRatePackages CarRatePackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRatePackages").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRatePackages").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarRatePackages in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarRatePackages> CarRatePackagesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRatePackages");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRatePackages", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRatePackages>("DB_A0A0AE_ClientModel.FK_CarRatePackageCarRateUnitPackage", "CarRatePackages").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarRateUnitPackage", "CarUnits")]
        public virtual CarUnits CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarUnits> CarUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarUnits").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarResPackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarRateUnitPackageCarResPackage", "CarResPackages")]
        public virtual EntityCollection<CarResPackages> CarResPackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarResPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarResPackages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarResPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarResPackages", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarReservations in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarReservations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarReservations : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarReservations object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtTrx">Initial value of DtTrx.</param>
        /// <param name="carUnitId">Initial value of CarUnitId.</param>
        /// <param name="dtStart">Initial value of DtStart.</param>
        /// <param name="dtEnd">Initial value of DtEnd.</param>
        /// <param name="baseRate">Initial value of BaseRate.</param>
        /// <param name="destinations">Initial value of Destinations.</param>
        /// <param name="useFor">Initial value of UseFor.</param>
        /// <param name="renterName">Initial value of RenterName.</param>
        /// <param name="renterEmail">Initial value of RenterEmail.</param>
        /// <param name="renterMobile">Initial value of RenterMobile.</param>
        public static CarReservations CreateCarReservations(int id, global::System.DateTime dtTrx, int carUnitId, string dtStart, string dtEnd, string baseRate, string destinations, string useFor, string renterName, string renterEmail, string renterMobile)
        {
            CarReservations carReservations = new CarReservations();
            carReservations.Id = id;
            carReservations.DtTrx = dtTrx;
            carReservations.CarUnitId = carUnitId;
            carReservations.DtStart = dtStart;
            carReservations.DtEnd = dtEnd;
            carReservations.BaseRate = baseRate;
            carReservations.Destinations = destinations;
            carReservations.UseFor = useFor;
            carReservations.RenterName = renterName;
            carReservations.RenterEmail = renterEmail;
            carReservations.RenterMobile = renterMobile;
            return carReservations;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtTrx in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtTrx
        {
            get
            {
                global::System.DateTime value = _DtTrx;
                OnGetDtTrx(ref value);
                return value;
            }
            set
            {
                if (_DtTrx != value)
                {
                  OnDtTrxChanging(ref value);
                  ReportPropertyChanging("DtTrx");
                  _DtTrx = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtTrx");
                  OnDtTrxChanged();
              }
            }
        }
        private global::System.DateTime _DtTrx;
        partial void OnGetDtTrx(ref global::System.DateTime value);
        partial void OnDtTrxChanging(ref global::System.DateTime value);
        partial void OnDtTrxChanged();
    
        /// <summary>
        /// There are no comments for CarUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarUnitId
        {
            get
            {
                int value = _CarUnitId;
                OnGetCarUnitId(ref value);
                return value;
            }
            set
            {
                if (_CarUnitId != value)
                {
                  OnCarUnitIdChanging(ref value);
                  ReportPropertyChanging("CarUnitId");
                  _CarUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarUnitId");
                  OnCarUnitIdChanged();
              }
            }
        }
        private int _CarUnitId;
        partial void OnGetCarUnitId(ref int value);
        partial void OnCarUnitIdChanging(ref int value);
        partial void OnCarUnitIdChanged();
    
        /// <summary>
        /// There are no comments for DtStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtStart
        {
            get
            {
                string value = _DtStart;
                OnGetDtStart(ref value);
                return value;
            }
            set
            {
                if (_DtStart != value)
                {
                  OnDtStartChanging(ref value);
                  ReportPropertyChanging("DtStart");
                  _DtStart = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtStart");
                  OnDtStartChanged();
              }
            }
        }
        private string _DtStart;
        partial void OnGetDtStart(ref string value);
        partial void OnDtStartChanging(ref string value);
        partial void OnDtStartChanged();
    
        /// <summary>
        /// There are no comments for LocStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LocStart
        {
            get
            {
                string value = _LocStart;
                OnGetLocStart(ref value);
                return value;
            }
            set
            {
                if (_LocStart != value)
                {
                  OnLocStartChanging(ref value);
                  ReportPropertyChanging("LocStart");
                  _LocStart = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LocStart");
                  OnLocStartChanged();
              }
            }
        }
        private string _LocStart;
        partial void OnGetLocStart(ref string value);
        partial void OnLocStartChanging(ref string value);
        partial void OnLocStartChanged();
    
        /// <summary>
        /// There are no comments for DtEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtEnd
        {
            get
            {
                string value = _DtEnd;
                OnGetDtEnd(ref value);
                return value;
            }
            set
            {
                if (_DtEnd != value)
                {
                  OnDtEndChanging(ref value);
                  ReportPropertyChanging("DtEnd");
                  _DtEnd = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtEnd");
                  OnDtEndChanged();
              }
            }
        }
        private string _DtEnd;
        partial void OnGetDtEnd(ref string value);
        partial void OnDtEndChanging(ref string value);
        partial void OnDtEndChanged();
    
        /// <summary>
        /// There are no comments for LocEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LocEnd
        {
            get
            {
                string value = _LocEnd;
                OnGetLocEnd(ref value);
                return value;
            }
            set
            {
                if (_LocEnd != value)
                {
                  OnLocEndChanging(ref value);
                  ReportPropertyChanging("LocEnd");
                  _LocEnd = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LocEnd");
                  OnLocEndChanged();
              }
            }
        }
        private string _LocEnd;
        partial void OnGetLocEnd(ref string value);
        partial void OnLocEndChanging(ref string value);
        partial void OnLocEndChanged();
    
        /// <summary>
        /// There are no comments for BaseRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BaseRate
        {
            get
            {
                string value = _BaseRate;
                OnGetBaseRate(ref value);
                return value;
            }
            set
            {
                if (_BaseRate != value)
                {
                  OnBaseRateChanging(ref value);
                  ReportPropertyChanging("BaseRate");
                  _BaseRate = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BaseRate");
                  OnBaseRateChanged();
              }
            }
        }
        private string _BaseRate;
        partial void OnGetBaseRate(ref string value);
        partial void OnBaseRateChanging(ref string value);
        partial void OnBaseRateChanged();
    
        /// <summary>
        /// There are no comments for Destinations in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Destinations
        {
            get
            {
                string value = _Destinations;
                OnGetDestinations(ref value);
                return value;
            }
            set
            {
                if (_Destinations != value)
                {
                  OnDestinationsChanging(ref value);
                  ReportPropertyChanging("Destinations");
                  _Destinations = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Destinations");
                  OnDestinationsChanged();
              }
            }
        }
        private string _Destinations;
        partial void OnGetDestinations(ref string value);
        partial void OnDestinationsChanging(ref string value);
        partial void OnDestinationsChanged();
    
        /// <summary>
        /// There are no comments for UseFor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UseFor
        {
            get
            {
                string value = _UseFor;
                OnGetUseFor(ref value);
                return value;
            }
            set
            {
                if (_UseFor != value)
                {
                  OnUseForChanging(ref value);
                  ReportPropertyChanging("UseFor");
                  _UseFor = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UseFor");
                  OnUseForChanged();
              }
            }
        }
        private string _UseFor;
        partial void OnGetUseFor(ref string value);
        partial void OnUseForChanging(ref string value);
        partial void OnUseForChanged();
    
        /// <summary>
        /// There are no comments for RenterName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RenterName
        {
            get
            {
                string value = _RenterName;
                OnGetRenterName(ref value);
                return value;
            }
            set
            {
                if (_RenterName != value)
                {
                  OnRenterNameChanging(ref value);
                  ReportPropertyChanging("RenterName");
                  _RenterName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RenterName");
                  OnRenterNameChanged();
              }
            }
        }
        private string _RenterName;
        partial void OnGetRenterName(ref string value);
        partial void OnRenterNameChanging(ref string value);
        partial void OnRenterNameChanged();
    
        /// <summary>
        /// There are no comments for RenterCompany in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RenterCompany
        {
            get
            {
                string value = _RenterCompany;
                OnGetRenterCompany(ref value);
                return value;
            }
            set
            {
                if (_RenterCompany != value)
                {
                  OnRenterCompanyChanging(ref value);
                  ReportPropertyChanging("RenterCompany");
                  _RenterCompany = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RenterCompany");
                  OnRenterCompanyChanged();
              }
            }
        }
        private string _RenterCompany;
        partial void OnGetRenterCompany(ref string value);
        partial void OnRenterCompanyChanging(ref string value);
        partial void OnRenterCompanyChanged();
    
        /// <summary>
        /// There are no comments for RenterEmail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RenterEmail
        {
            get
            {
                string value = _RenterEmail;
                OnGetRenterEmail(ref value);
                return value;
            }
            set
            {
                if (_RenterEmail != value)
                {
                  OnRenterEmailChanging(ref value);
                  ReportPropertyChanging("RenterEmail");
                  _RenterEmail = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RenterEmail");
                  OnRenterEmailChanged();
              }
            }
        }
        private string _RenterEmail;
        partial void OnGetRenterEmail(ref string value);
        partial void OnRenterEmailChanging(ref string value);
        partial void OnRenterEmailChanged();
    
        /// <summary>
        /// There are no comments for RenterMobile in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RenterMobile
        {
            get
            {
                string value = _RenterMobile;
                OnGetRenterMobile(ref value);
                return value;
            }
            set
            {
                if (_RenterMobile != value)
                {
                  OnRenterMobileChanging(ref value);
                  ReportPropertyChanging("RenterMobile");
                  _RenterMobile = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RenterMobile");
                  OnRenterMobileChanged();
              }
            }
        }
        private string _RenterMobile;
        partial void OnGetRenterMobile(ref string value);
        partial void OnRenterMobileChanging(ref string value);
        partial void OnRenterMobileChanged();
    
        /// <summary>
        /// There are no comments for RenterAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RenterAddress
        {
            get
            {
                string value = _RenterAddress;
                OnGetRenterAddress(ref value);
                return value;
            }
            set
            {
                if (_RenterAddress != value)
                {
                  OnRenterAddressChanging(ref value);
                  ReportPropertyChanging("RenterAddress");
                  _RenterAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RenterAddress");
                  OnRenterAddressChanged();
              }
            }
        }
        private string _RenterAddress;
        partial void OnGetRenterAddress(ref string value);
        partial void OnRenterAddressChanging(ref string value);
        partial void OnRenterAddressChanged();
    
        /// <summary>
        /// There are no comments for RenterFbAccnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RenterFbAccnt
        {
            get
            {
                string value = _RenterFbAccnt;
                OnGetRenterFbAccnt(ref value);
                return value;
            }
            set
            {
                if (_RenterFbAccnt != value)
                {
                  OnRenterFbAccntChanging(ref value);
                  ReportPropertyChanging("RenterFbAccnt");
                  _RenterFbAccnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RenterFbAccnt");
                  OnRenterFbAccntChanged();
              }
            }
        }
        private string _RenterFbAccnt;
        partial void OnGetRenterFbAccnt(ref string value);
        partial void OnRenterFbAccntChanging(ref string value);
        partial void OnRenterFbAccntChanged();
    
        /// <summary>
        /// There are no comments for RenterLinkedInAccnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RenterLinkedInAccnt
        {
            get
            {
                string value = _RenterLinkedInAccnt;
                OnGetRenterLinkedInAccnt(ref value);
                return value;
            }
            set
            {
                if (_RenterLinkedInAccnt != value)
                {
                  OnRenterLinkedInAccntChanging(ref value);
                  ReportPropertyChanging("RenterLinkedInAccnt");
                  _RenterLinkedInAccnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RenterLinkedInAccnt");
                  OnRenterLinkedInAccntChanged();
              }
            }
        }
        private string _RenterLinkedInAccnt;
        partial void OnGetRenterLinkedInAccnt(ref string value);
        partial void OnRenterLinkedInAccntChanging(ref string value);
        partial void OnRenterLinkedInAccntChanged();
    
        /// <summary>
        /// There are no comments for EstHrPerDay in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? EstHrPerDay
        {
            get
            {
                int? value = _EstHrPerDay;
                OnGetEstHrPerDay(ref value);
                return value;
            }
            set
            {
                if (_EstHrPerDay != value)
                {
                  OnEstHrPerDayChanging(ref value);
                  ReportPropertyChanging("EstHrPerDay");
                  _EstHrPerDay = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EstHrPerDay");
                  OnEstHrPerDayChanged();
              }
            }
        }
        private int? _EstHrPerDay;
        partial void OnGetEstHrPerDay(ref int? value);
        partial void OnEstHrPerDayChanging(ref int? value);
        partial void OnEstHrPerDayChanged();
    
        /// <summary>
        /// There are no comments for EstKmTravel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? EstKmTravel
        {
            get
            {
                int? value = _EstKmTravel;
                OnGetEstKmTravel(ref value);
                return value;
            }
            set
            {
                if (_EstKmTravel != value)
                {
                  OnEstKmTravelChanging(ref value);
                  ReportPropertyChanging("EstKmTravel");
                  _EstKmTravel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EstKmTravel");
                  OnEstKmTravelChanged();
              }
            }
        }
        private int? _EstKmTravel;
        partial void OnGetEstKmTravel(ref int? value);
        partial void OnEstKmTravelChanging(ref int? value);
        partial void OnEstKmTravelChanged();
    
        /// <summary>
        /// There are no comments for JobRefNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? JobRefNo
        {
            get
            {
                int? value = _JobRefNo;
                OnGetJobRefNo(ref value);
                return value;
            }
            set
            {
                if (_JobRefNo != value)
                {
                  OnJobRefNoChanging(ref value);
                  ReportPropertyChanging("JobRefNo");
                  _JobRefNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobRefNo");
                  OnJobRefNoChanged();
              }
            }
        }
        private int? _JobRefNo;
        partial void OnGetJobRefNo(ref int? value);
        partial void OnJobRefNoChanging(ref int? value);
        partial void OnJobRefNoChanged();
    
        /// <summary>
        /// There are no comments for SelfDrive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SelfDrive
        {
            get
            {
                int? value = _SelfDrive;
                OnGetSelfDrive(ref value);
                return value;
            }
            set
            {
                if (_SelfDrive != value)
                {
                  OnSelfDriveChanging(ref value);
                  ReportPropertyChanging("SelfDrive");
                  _SelfDrive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SelfDrive");
                  OnSelfDriveChanged();
              }
            }
        }
        private int? _SelfDrive;
        partial void OnGetSelfDrive(ref int? value);
        partial void OnSelfDriveChanging(ref int? value);
        partial void OnSelfDriveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarReservation", "CarUnits")]
        public virtual CarUnits CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarUnits> CarUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarUnits").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarResPackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarReservationCarResPackage", "CarResPackages")]
        public virtual EntityCollection<CarResPackages> CarResPackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarResPackages>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarResPackages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarResPackages>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarResPackages", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarResPackages in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarResPackages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarResPackages : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarResPackages object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="carRateUnitPackageId">Initial value of CarRateUnitPackageId.</param>
        /// <param name="carReservationId">Initial value of CarReservationId.</param>
        /// <param name="drvMealByClient">Initial value of DrvMealByClient.</param>
        /// <param name="drvRoomByClient">Initial value of DrvRoomByClient.</param>
        /// <param name="fuelByClient">Initial value of FuelByClient.</param>
        public static CarResPackages CreateCarResPackages(int id, int carRateUnitPackageId, int carReservationId, int drvMealByClient, int drvRoomByClient, int fuelByClient)
        {
            CarResPackages carResPackages = new CarResPackages();
            carResPackages.Id = id;
            carResPackages.CarRateUnitPackageId = carRateUnitPackageId;
            carResPackages.CarReservationId = carReservationId;
            carResPackages.DrvMealByClient = drvMealByClient;
            carResPackages.DrvRoomByClient = drvRoomByClient;
            carResPackages.FuelByClient = fuelByClient;
            return carResPackages;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CarRateUnitPackageId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarRateUnitPackageId
        {
            get
            {
                int value = _CarRateUnitPackageId;
                OnGetCarRateUnitPackageId(ref value);
                return value;
            }
            set
            {
                if (_CarRateUnitPackageId != value)
                {
                  OnCarRateUnitPackageIdChanging(ref value);
                  ReportPropertyChanging("CarRateUnitPackageId");
                  _CarRateUnitPackageId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarRateUnitPackageId");
                  OnCarRateUnitPackageIdChanged();
              }
            }
        }
        private int _CarRateUnitPackageId;
        partial void OnGetCarRateUnitPackageId(ref int value);
        partial void OnCarRateUnitPackageIdChanging(ref int value);
        partial void OnCarRateUnitPackageIdChanged();
    
        /// <summary>
        /// There are no comments for CarReservationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarReservationId
        {
            get
            {
                int value = _CarReservationId;
                OnGetCarReservationId(ref value);
                return value;
            }
            set
            {
                if (_CarReservationId != value)
                {
                  OnCarReservationIdChanging(ref value);
                  ReportPropertyChanging("CarReservationId");
                  _CarReservationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarReservationId");
                  OnCarReservationIdChanged();
              }
            }
        }
        private int _CarReservationId;
        partial void OnGetCarReservationId(ref int value);
        partial void OnCarReservationIdChanging(ref int value);
        partial void OnCarReservationIdChanged();
    
        /// <summary>
        /// There are no comments for DrvMealByClient in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DrvMealByClient
        {
            get
            {
                int value = _DrvMealByClient;
                OnGetDrvMealByClient(ref value);
                return value;
            }
            set
            {
                if (_DrvMealByClient != value)
                {
                  OnDrvMealByClientChanging(ref value);
                  ReportPropertyChanging("DrvMealByClient");
                  _DrvMealByClient = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DrvMealByClient");
                  OnDrvMealByClientChanged();
              }
            }
        }
        private int _DrvMealByClient;
        partial void OnGetDrvMealByClient(ref int value);
        partial void OnDrvMealByClientChanging(ref int value);
        partial void OnDrvMealByClientChanged();
    
        /// <summary>
        /// There are no comments for DrvRoomByClient in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DrvRoomByClient
        {
            get
            {
                int value = _DrvRoomByClient;
                OnGetDrvRoomByClient(ref value);
                return value;
            }
            set
            {
                if (_DrvRoomByClient != value)
                {
                  OnDrvRoomByClientChanging(ref value);
                  ReportPropertyChanging("DrvRoomByClient");
                  _DrvRoomByClient = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DrvRoomByClient");
                  OnDrvRoomByClientChanged();
              }
            }
        }
        private int _DrvRoomByClient;
        partial void OnGetDrvRoomByClient(ref int value);
        partial void OnDrvRoomByClientChanging(ref int value);
        partial void OnDrvRoomByClientChanged();
    
        /// <summary>
        /// There are no comments for FuelByClient in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FuelByClient
        {
            get
            {
                int value = _FuelByClient;
                OnGetFuelByClient(ref value);
                return value;
            }
            set
            {
                if (_FuelByClient != value)
                {
                  OnFuelByClientChanging(ref value);
                  ReportPropertyChanging("FuelByClient");
                  _FuelByClient = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FuelByClient");
                  OnFuelByClientChanged();
              }
            }
        }
        private int _FuelByClient;
        partial void OnGetFuelByClient(ref int value);
        partial void OnFuelByClientChanging(ref int value);
        partial void OnFuelByClientChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarRateUnitPackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages")]
        public virtual CarRateUnitPackages CarRateUnitPackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarRateUnitPackages in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarRateUnitPackages> CarRateUnitPackagesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarRateUnitPackageCarResPackage", "CarRateUnitPackages").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarReservations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarReservationCarResPackage", "CarReservations")]
        public virtual CarReservations CarReservations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarReservations>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarReservations").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarReservations>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarReservations").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarReservations in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarReservations> CarReservationsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarReservations>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarReservations");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarReservations>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarReservations", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarReservations>("DB_A0A0AE_ClientModel.FK_CarReservationCarResPackage", "CarReservations").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarUnitMetas in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarUnitMetas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarUnitMetas : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarUnitMetas object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="carUnitId">Initial value of CarUnitId.</param>
        /// <param name="pageTitle">Initial value of PageTitle.</param>
        /// <param name="metaDesc">Initial value of MetaDesc.</param>
        public static CarUnitMetas CreateCarUnitMetas(int id, int carUnitId, string pageTitle, string metaDesc)
        {
            CarUnitMetas carUnitMetas = new CarUnitMetas();
            carUnitMetas.Id = id;
            carUnitMetas.CarUnitId = carUnitId;
            carUnitMetas.PageTitle = pageTitle;
            carUnitMetas.MetaDesc = metaDesc;
            return carUnitMetas;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CarUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarUnitId
        {
            get
            {
                int value = _CarUnitId;
                OnGetCarUnitId(ref value);
                return value;
            }
            set
            {
                if (_CarUnitId != value)
                {
                  OnCarUnitIdChanging(ref value);
                  ReportPropertyChanging("CarUnitId");
                  _CarUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarUnitId");
                  OnCarUnitIdChanged();
              }
            }
        }
        private int _CarUnitId;
        partial void OnGetCarUnitId(ref int value);
        partial void OnCarUnitIdChanging(ref int value);
        partial void OnCarUnitIdChanged();
    
        /// <summary>
        /// There are no comments for PageTitle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PageTitle
        {
            get
            {
                string value = _PageTitle;
                OnGetPageTitle(ref value);
                return value;
            }
            set
            {
                if (_PageTitle != value)
                {
                  OnPageTitleChanging(ref value);
                  ReportPropertyChanging("PageTitle");
                  _PageTitle = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PageTitle");
                  OnPageTitleChanged();
              }
            }
        }
        private string _PageTitle;
        partial void OnGetPageTitle(ref string value);
        partial void OnPageTitleChanging(ref string value);
        partial void OnPageTitleChanged();
    
        /// <summary>
        /// There are no comments for MetaDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string MetaDesc
        {
            get
            {
                string value = _MetaDesc;
                OnGetMetaDesc(ref value);
                return value;
            }
            set
            {
                if (_MetaDesc != value)
                {
                  OnMetaDescChanging(ref value);
                  ReportPropertyChanging("MetaDesc");
                  _MetaDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MetaDesc");
                  OnMetaDescChanged();
              }
            }
        }
        private string _MetaDesc;
        partial void OnGetMetaDesc(ref string value);
        partial void OnMetaDescChanging(ref string value);
        partial void OnMetaDescChanged();
    
        /// <summary>
        /// There are no comments for HomeDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HomeDesc
        {
            get
            {
                string value = _HomeDesc;
                OnGetHomeDesc(ref value);
                return value;
            }
            set
            {
                if (_HomeDesc != value)
                {
                  OnHomeDescChanging(ref value);
                  ReportPropertyChanging("HomeDesc");
                  _HomeDesc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HomeDesc");
                  OnHomeDescChanged();
              }
            }
        }
        private string _HomeDesc;
        partial void OnGetHomeDesc(ref string value);
        partial void OnHomeDescChanging(ref string value);
        partial void OnHomeDescChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarUnitMeta", "CarUnits")]
        public virtual CarUnits CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarUnits> CarUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnits").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarUnits in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarUnits")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarUnits : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarUnits object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="carCategoryId">Initial value of CarCategoryId.</param>
        public static CarUnits CreateCarUnits(int id, int carCategoryId)
        {
            CarUnits carUnits = new CarUnits();
            carUnits.Id = id;
            carUnits.CarCategoryId = carCategoryId;
            return carUnits;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for CarCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarCategoryId
        {
            get
            {
                int value = _CarCategoryId;
                OnGetCarCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CarCategoryId != value)
                {
                  OnCarCategoryIdChanging(ref value);
                  ReportPropertyChanging("CarCategoryId");
                  _CarCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarCategoryId");
                  OnCarCategoryIdChanged();
              }
            }
        }
        private int _CarCategoryId;
        partial void OnGetCarCategoryId(ref int value);
        partial void OnCarCategoryIdChanging(ref int value);
        partial void OnCarCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for SelfDrive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SelfDrive
        {
            get
            {
                int? value = _SelfDrive;
                OnGetSelfDrive(ref value);
                return value;
            }
            set
            {
                if (_SelfDrive != value)
                {
                  OnSelfDriveChanging(ref value);
                  ReportPropertyChanging("SelfDrive");
                  _SelfDrive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SelfDrive");
                  OnSelfDriveChanged();
              }
            }
        }
        private int? _SelfDrive;
        partial void OnGetSelfDrive(ref int? value);
        partial void OnSelfDriveChanging(ref int? value);
        partial void OnSelfDriveChanged();
    
        /// <summary>
        /// There are no comments for SortOrder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SortOrder
        {
            get
            {
                int? value = _SortOrder;
                OnGetSortOrder(ref value);
                return value;
            }
            set
            {
                if (_SortOrder != value)
                {
                  OnSortOrderChanging(ref value);
                  ReportPropertyChanging("SortOrder");
                  _SortOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortOrder");
                  OnSortOrderChanged();
              }
            }
        }
        private int? _SortOrder;
        partial void OnGetSortOrder(ref int? value);
        partial void OnSortOrderChanging(ref int? value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarImages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarImage", "CarImages")]
        public virtual EntityCollection<CarImages> CarImages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarImages>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarImages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarImages>("DB_A0A0AE_ClientModel.FK_CarUnitCarImage", "CarImages", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarRates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarRate", "CarRates")]
        public virtual EntityCollection<CarRates> CarRates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarRates>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarRates>("DB_A0A0AE_ClientModel.FK_CarUnitCarRate", "CarRates", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarRateUnitPackages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarRateUnitPackage", "CarRateUnitPackages")]
        public virtual EntityCollection<CarRateUnitPackages> CarRateUnitPackages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarRateUnitPackages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarRateUnitPackages>("DB_A0A0AE_ClientModel.FK_CarUnitCarRateUnitPackage", "CarRateUnitPackages", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarReservations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarReservation", "CarReservations")]
        public virtual EntityCollection<CarReservations> CarReservations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarReservations>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarReservations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarReservations>("DB_A0A0AE_ClientModel.FK_CarUnitCarReservation", "CarReservations", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnitMetas in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarUnitMeta", "CarUnitMetas")]
        public virtual EntityCollection<CarUnitMetas> CarUnitMetas
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarUnitMetas>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnitMetas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarUnitMetas>("DB_A0A0AE_ClientModel.FK_CarUnitCarUnitMeta", "CarUnitMetas", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarCategoryCarUnit", "CarCategories")]
        public virtual CarCategories CarCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarCategories>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarCategories>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarCategories> CarCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarCategories>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarCategories>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarCategories>("DB_A0A0AE_ClientModel.FK_CarCategoryCarUnit", "CarCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarViewPages in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarViewPage", "CarViewPages")]
        public virtual EntityCollection<CarViewPages> CarViewPages
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarViewPages>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarViewPages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarViewPages>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarViewPages", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CarViewPages in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CarViewPages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarViewPages : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CarViewPages object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="carUnitId">Initial value of CarUnitId.</param>
        /// <param name="viewname">Initial value of Viewname.</param>
        public static CarViewPages CreateCarViewPages(int id, int carUnitId, string viewname)
        {
            CarViewPages carViewPages = new CarViewPages();
            carViewPages.Id = id;
            carViewPages.CarUnitId = carUnitId;
            carViewPages.Viewname = viewname;
            return carViewPages;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CarUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CarUnitId
        {
            get
            {
                int value = _CarUnitId;
                OnGetCarUnitId(ref value);
                return value;
            }
            set
            {
                if (_CarUnitId != value)
                {
                  OnCarUnitIdChanging(ref value);
                  ReportPropertyChanging("CarUnitId");
                  _CarUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarUnitId");
                  OnCarUnitIdChanged();
              }
            }
        }
        private int _CarUnitId;
        partial void OnGetCarUnitId(ref int value);
        partial void OnCarUnitIdChanging(ref int value);
        partial void OnCarUnitIdChanged();
    
        /// <summary>
        /// There are no comments for Viewname in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Viewname
        {
            get
            {
                string value = _Viewname;
                OnGetViewname(ref value);
                return value;
            }
            set
            {
                if (_Viewname != value)
                {
                  OnViewnameChanging(ref value);
                  ReportPropertyChanging("Viewname");
                  _Viewname = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Viewname");
                  OnViewnameChanged();
              }
            }
        }
        private string _Viewname;
        partial void OnGetViewname(ref string value);
        partial void OnViewnameChanging(ref string value);
        partial void OnViewnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CarUnitCarViewPage", "CarUnits")]
        public virtual CarUnits CarUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CarUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarUnits> CarUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CarUnits>("DB_A0A0AE_ClientModel.FK_CarUnitCarViewPage", "CarUnits").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CashExpenses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CashExpenses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashExpenses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CashExpenses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="dtExpense">Initial value of DtExpense.</param>
        /// <param name="amount">Initial value of Amount.</param>
        public static CashExpenses CreateCashExpenses(int id, int jobMainId, global::System.DateTime dtExpense, decimal amount)
        {
            CashExpenses cashExpenses = new CashExpenses();
            cashExpenses.Id = id;
            cashExpenses.JobMainId = jobMainId;
            cashExpenses.DtExpense = dtExpense;
            cashExpenses.Amount = amount;
            return cashExpenses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for DtExpense in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtExpense
        {
            get
            {
                global::System.DateTime value = _DtExpense;
                OnGetDtExpense(ref value);
                return value;
            }
            set
            {
                if (_DtExpense != value)
                {
                  OnDtExpenseChanging(ref value);
                  ReportPropertyChanging("DtExpense");
                  _DtExpense = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtExpense");
                  OnDtExpenseChanged();
              }
            }
        }
        private global::System.DateTime _DtExpense;
        partial void OnGetDtExpense(ref global::System.DateTime value);
        partial void OnDtExpenseChanging(ref global::System.DateTime value);
        partial void OnDtExpenseChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for RecievedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RecievedBy
        {
            get
            {
                string value = _RecievedBy;
                OnGetRecievedBy(ref value);
                return value;
            }
            set
            {
                if (_RecievedBy != value)
                {
                  OnRecievedByChanging(ref value);
                  ReportPropertyChanging("RecievedBy");
                  _RecievedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RecievedBy");
                  OnRecievedByChanged();
              }
            }
        }
        private string _RecievedBy;
        partial void OnGetRecievedBy(ref string value);
        partial void OnRecievedByChanging(ref string value);
        partial void OnRecievedByChanged();
    
        /// <summary>
        /// There are no comments for ReleasedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ReleasedBy
        {
            get
            {
                string value = _ReleasedBy;
                OnGetReleasedBy(ref value);
                return value;
            }
            set
            {
                if (_ReleasedBy != value)
                {
                  OnReleasedByChanging(ref value);
                  ReportPropertyChanging("ReleasedBy");
                  _ReleasedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ReleasedBy");
                  OnReleasedByChanged();
              }
            }
        }
        private string _ReleasedBy;
        partial void OnGetReleasedBy(ref string value);
        partial void OnReleasedByChanging(ref string value);
        partial void OnReleasedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CashExpenseJobMain", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CheckerActivities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CheckerActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckerActivities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CheckerActivities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtActivity">Initial value of DtActivity.</param>
        /// <param name="checkedBy">Initial value of CheckedBy.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="checkerActivityTypeId">Initial value of CheckerActivityTypeId.</param>
        public static CheckerActivities CreateCheckerActivities(int id, global::System.DateTime dtActivity, string checkedBy, string remarks, int salesLeadId, int checkerActivityTypeId)
        {
            CheckerActivities checkerActivities = new CheckerActivities();
            checkerActivities.Id = id;
            checkerActivities.DtActivity = dtActivity;
            checkerActivities.CheckedBy = checkedBy;
            checkerActivities.Remarks = remarks;
            checkerActivities.SalesLeadId = salesLeadId;
            checkerActivities.CheckerActivityTypeId = checkerActivityTypeId;
            return checkerActivities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtActivity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtActivity
        {
            get
            {
                global::System.DateTime value = _DtActivity;
                OnGetDtActivity(ref value);
                return value;
            }
            set
            {
                if (_DtActivity != value)
                {
                  OnDtActivityChanging(ref value);
                  ReportPropertyChanging("DtActivity");
                  _DtActivity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtActivity");
                  OnDtActivityChanged();
              }
            }
        }
        private global::System.DateTime _DtActivity;
        partial void OnGetDtActivity(ref global::System.DateTime value);
        partial void OnDtActivityChanging(ref global::System.DateTime value);
        partial void OnDtActivityChanged();
    
        /// <summary>
        /// There are no comments for CheckedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CheckedBy
        {
            get
            {
                string value = _CheckedBy;
                OnGetCheckedBy(ref value);
                return value;
            }
            set
            {
                if (_CheckedBy != value)
                {
                  OnCheckedByChanging(ref value);
                  ReportPropertyChanging("CheckedBy");
                  _CheckedBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CheckedBy");
                  OnCheckedByChanged();
              }
            }
        }
        private string _CheckedBy;
        partial void OnGetCheckedBy(ref string value);
        partial void OnCheckedByChanging(ref string value);
        partial void OnCheckedByChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for CheckerActivityTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CheckerActivityTypeId
        {
            get
            {
                int value = _CheckerActivityTypeId;
                OnGetCheckerActivityTypeId(ref value);
                return value;
            }
            set
            {
                if (_CheckerActivityTypeId != value)
                {
                  OnCheckerActivityTypeIdChanging(ref value);
                  ReportPropertyChanging("CheckerActivityTypeId");
                  _CheckerActivityTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CheckerActivityTypeId");
                  OnCheckerActivityTypeIdChanged();
              }
            }
        }
        private int _CheckerActivityTypeId;
        partial void OnGetCheckerActivityTypeId(ref int value);
        partial void OnCheckerActivityTypeIdChanging(ref int value);
        partial void OnCheckerActivityTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCheckerActivity", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CheckerActivityTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes")]
        public virtual CheckerActivityTypes CheckerActivityTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CheckerActivityTypes>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CheckerActivityTypes>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CheckerActivityTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CheckerActivityTypes> CheckerActivityTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CheckerActivityTypes>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CheckerActivityTypes>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CheckerActivityTypes>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivityTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CheckerActivityTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CheckerActivityTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckerActivityTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CheckerActivityTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        /// <param name="iconPath">Initial value of IconPath.</param>
        /// <param name="points">Initial value of Points.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        public static CheckerActivityTypes CreateCheckerActivityTypes(int id, string type, string iconPath, int points, int orderNo)
        {
            CheckerActivityTypes checkerActivityTypes = new CheckerActivityTypes();
            checkerActivityTypes.Id = id;
            checkerActivityTypes.Type = type;
            checkerActivityTypes.IconPath = iconPath;
            checkerActivityTypes.Points = points;
            checkerActivityTypes.OrderNo = orderNo;
            return checkerActivityTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for Points in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Points
        {
            get
            {
                int value = _Points;
                OnGetPoints(ref value);
                return value;
            }
            set
            {
                if (_Points != value)
                {
                  OnPointsChanging(ref value);
                  ReportPropertyChanging("Points");
                  _Points = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Points");
                  OnPointsChanged();
              }
            }
        }
        private int _Points;
        partial void OnGetPoints(ref int value);
        partial void OnPointsChanging(ref int value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CheckerActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CheckerActivityTypeCheckerActivity", "CheckerActivities")]
        public virtual EntityCollection<CheckerActivities> CheckerActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CheckerActivities>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CheckerActivities>("DB_A0A0AE_ClientModel.FK_CheckerActivityTypeCheckerActivity", "CheckerActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Cities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Cities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Cities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Cities CreateCities(int id, string name)
        {
            Cities cities = new Cities();
            cities.Id = id;
            cities.Name = name;
            return cities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Branches in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CityBranch", "Branches")]
        public virtual EntityCollection<Branches> Branches
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Branches>("DB_A0A0AE_ClientModel.FK_CityBranch", "Branches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Branches>("DB_A0A0AE_ClientModel.FK_CityBranch", "Branches", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CarDestinations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CityCarDestination", "CarDestinations")]
        public virtual EntityCollection<CarDestinations> CarDestinations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarDestinations>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "CarDestinations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarDestinations>("DB_A0A0AE_ClientModel.FK_CityCarDestination", "CarDestinations", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Destinations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CityDestination", "Destinations")]
        public virtual EntityCollection<Destinations> Destinations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Destinations>("DB_A0A0AE_ClientModel.FK_CityDestination", "Destinations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Destinations>("DB_A0A0AE_ClientModel.FK_CityDestination", "Destinations", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CitySupplier", "Suppliers")]
        public virtual EntityCollection<Suppliers> Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Suppliers>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Suppliers>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Suppliers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CoopMemberItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CoopMemberItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoopMemberItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CoopMemberItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="coopMemberId">Initial value of CoopMemberId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        public static CoopMemberItems CreateCoopMemberItems(int id, int coopMemberId, int invItemId)
        {
            CoopMemberItems coopMemberItems = new CoopMemberItems();
            coopMemberItems.Id = id;
            coopMemberItems.CoopMemberId = coopMemberId;
            coopMemberItems.InvItemId = invItemId;
            return coopMemberItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CoopMemberId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CoopMemberId
        {
            get
            {
                int value = _CoopMemberId;
                OnGetCoopMemberId(ref value);
                return value;
            }
            set
            {
                if (_CoopMemberId != value)
                {
                  OnCoopMemberIdChanging(ref value);
                  ReportPropertyChanging("CoopMemberId");
                  _CoopMemberId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CoopMemberId");
                  OnCoopMemberIdChanged();
              }
            }
        }
        private int _CoopMemberId;
        partial void OnGetCoopMemberId(ref int value);
        partial void OnCoopMemberIdChanging(ref int value);
        partial void OnCoopMemberIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CoopMembers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CoopMemberCoopMemberItem", "CoopMembers")]
        public virtual CoopMembers CoopMembers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CoopMembers>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMembers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CoopMembers>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMembers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CoopMembers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CoopMembers> CoopMembersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CoopMembers>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMembers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CoopMembers>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMembers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CoopMembers>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMembers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemCoopMemberItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CoopMembers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CoopMembers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoopMembers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CoopMembers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static CoopMembers CreateCoopMembers(int id, string name)
        {
            CoopMembers coopMembers = new CoopMembers();
            coopMembers.Id = id;
            coopMembers.Name = name;
            return coopMembers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Contact1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact1
        {
            get
            {
                string value = _Contact1;
                OnGetContact1(ref value);
                return value;
            }
            set
            {
                if (_Contact1 != value)
                {
                  OnContact1Changing(ref value);
                  ReportPropertyChanging("Contact1");
                  _Contact1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact1");
                  OnContact1Changed();
              }
            }
        }
        private string _Contact1;
        partial void OnGetContact1(ref string value);
        partial void OnContact1Changing(ref string value);
        partial void OnContact1Changed();
    
        /// <summary>
        /// There are no comments for Contact2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact2
        {
            get
            {
                string value = _Contact2;
                OnGetContact2(ref value);
                return value;
            }
            set
            {
                if (_Contact2 != value)
                {
                  OnContact2Changing(ref value);
                  ReportPropertyChanging("Contact2");
                  _Contact2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact2");
                  OnContact2Changed();
              }
            }
        }
        private string _Contact2;
        partial void OnGetContact2(ref string value);
        partial void OnContact2Changing(ref string value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// There are no comments for Contact3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact3
        {
            get
            {
                string value = _Contact3;
                OnGetContact3(ref value);
                return value;
            }
            set
            {
                if (_Contact3 != value)
                {
                  OnContact3Changing(ref value);
                  ReportPropertyChanging("Contact3");
                  _Contact3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact3");
                  OnContact3Changed();
              }
            }
        }
        private string _Contact3;
        partial void OnGetContact3(ref string value);
        partial void OnContact3Changing(ref string value);
        partial void OnContact3Changed();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Details
        {
            get
            {
                string value = _Details;
                OnGetDetails(ref value);
                return value;
            }
            set
            {
                if (_Details != value)
                {
                  OnDetailsChanging(ref value);
                  ReportPropertyChanging("Details");
                  _Details = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Details");
                  OnDetailsChanged();
              }
            }
        }
        private string _Details;
        partial void OnGetDetails(ref string value);
        partial void OnDetailsChanging(ref string value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CoopMemberItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CoopMemberCoopMemberItem", "CoopMemberItems")]
        public virtual EntityCollection<CoopMemberItems> CoopMemberItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CoopMemberItems>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMemberItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CoopMemberItems>("DB_A0A0AE_ClientModel.FK_CoopMemberCoopMemberItem", "CoopMemberItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Countries in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Countries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Countries : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Countries object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Countries CreateCountries(int id, string name)
        {
            Countries countries = new Countries();
            countries.Id = id;
            countries.Name = name;
            return countries;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Currencies in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Currencies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currencies : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Currencies object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Currencies CreateCurrencies(int id, string name)
        {
            Currencies currencies = new Currencies();
            currencies.Id = id;
            currencies.Name = name;
            return currencies;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustAssocTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustAssocTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustAssocTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustAssocTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static CustAssocTypes CreateCustAssocTypes(int id, string type)
        {
            CustAssocTypes custAssocTypes = new CustAssocTypes();
            custAssocTypes.Id = id;
            custAssocTypes.Type = type;
            return custAssocTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustAssocTypeCustEntity", "CustEntities")]
        public virtual EntityCollection<CustEntities> CustEntities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntities>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntities>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustEntities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static CustCategories CreateCustCategories(int id, string name)
        {
            CustCategories custCategories = new CustCategories();
            custCategories.Id = id;
            custCategories.Name = name;
            return custCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustCategoryCustCat", "CustCats")]
        public virtual EntityCollection<CustCats> CustCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustCats>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustCats>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCats", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustCategoryCustEntCat", "CustEntCats")]
        public virtual EntityCollection<CustEntCats> CustEntCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntCats>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustEntCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntCats>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustEntCats", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="custCategoryId">Initial value of CustCategoryId.</param>
        public static CustCats CreateCustCats(int id, int customerId, int custCategoryId)
        {
            CustCats custCats = new CustCats();
            custCats.Id = id;
            custCats.CustomerId = customerId;
            custCats.CustCategoryId = custCategoryId;
            return custCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for CustCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustCategoryId
        {
            get
            {
                int value = _CustCategoryId;
                OnGetCustCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CustCategoryId != value)
                {
                  OnCustCategoryIdChanging(ref value);
                  ReportPropertyChanging("CustCategoryId");
                  _CustCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustCategoryId");
                  OnCustCategoryIdChanged();
              }
            }
        }
        private int _CustCategoryId;
        partial void OnGetCustCategoryId(ref int value);
        partial void OnCustCategoryIdChanging(ref int value);
        partial void OnCustCategoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustCat", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "Customers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustCategoryCustCat", "CustCategories")]
        public virtual CustCategories CustCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustCategories> CustCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustCat", "CustCategories").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntAccountTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntAccountTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntAccountTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntAccountTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        public static CustEntAccountTypes CreateCustEntAccountTypes(int id, string name, string sysCode)
        {
            CustEntAccountTypes custEntAccountTypes = new CustEntAccountTypes();
            custEntAccountTypes.Id = id;
            custEntAccountTypes.Name = name;
            custEntAccountTypes.SysCode = sysCode;
            return custEntAccountTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActActionCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActActionCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActActionCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActActionCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        /// <param name="iconPath">Initial value of IconPath.</param>
        /// <param name="defaultActStatus">Initial value of DefaultActStatus.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        public static CustEntActActionCodes CreateCustEntActActionCodes(int id, string name, string desc, string sysCode, string iconPath, int defaultActStatus, int seqNo)
        {
            CustEntActActionCodes custEntActActionCodes = new CustEntActActionCodes();
            custEntActActionCodes.Id = id;
            custEntActActionCodes.Name = name;
            custEntActActionCodes.Desc = desc;
            custEntActActionCodes.SysCode = sysCode;
            custEntActActionCodes.IconPath = iconPath;
            custEntActActionCodes.DefaultActStatus = defaultActStatus;
            custEntActActionCodes.SeqNo = seqNo;
            return custEntActActionCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for DefaultActStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DefaultActStatus
        {
            get
            {
                int value = _DefaultActStatus;
                OnGetDefaultActStatus(ref value);
                return value;
            }
            set
            {
                if (_DefaultActStatus != value)
                {
                  OnDefaultActStatusChanging(ref value);
                  ReportPropertyChanging("DefaultActStatus");
                  _DefaultActStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DefaultActStatus");
                  OnDefaultActStatusChanged();
              }
            }
        }
        private int _DefaultActStatus;
        partial void OnGetDefaultActStatus(ref int value);
        partial void OnDefaultActStatusChanging(ref int value);
        partial void OnDefaultActStatusChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo = 1;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActActionCodesCustEntActivity", "CustEntActivities")]
        public virtual EntityCollection<CustEntActivities> CustEntActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActActionStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActActionStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActActionStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActActionStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="actionStatus">Initial value of ActionStatus.</param>
        public static CustEntActActionStatus CreateCustEntActActionStatus(int id, string actionStatus)
        {
            CustEntActActionStatus custEntActActionStatus = new CustEntActActionStatus();
            custEntActActionStatus.Id = id;
            custEntActActionStatus.ActionStatus = actionStatus;
            return custEntActActionStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ActionStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ActionStatus
        {
            get
            {
                string value = _ActionStatus;
                OnGetActionStatus(ref value);
                return value;
            }
            set
            {
                if (_ActionStatus != value)
                {
                  OnActionStatusChanging(ref value);
                  ReportPropertyChanging("ActionStatus");
                  _ActionStatus = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ActionStatus");
                  OnActionStatusChanged();
              }
            }
        }
        private string _ActionStatus;
        partial void OnGetActionStatus(ref string value);
        partial void OnActionStatusChanging(ref string value);
        partial void OnActionStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActActionStatusCustEntActivity", "CustEntActivities")]
        public virtual EntityCollection<CustEntActivities> CustEntActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActivities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActivities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActivities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="date">Initial value of Date.</param>
        /// <param name="assigned">Initial value of Assigned.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        /// <param name="custEntActStatusId">Initial value of CustEntActStatusId.</param>
        /// <param name="custEntActActionStatusId">Initial value of CustEntActActionStatusId.</param>
        /// <param name="custEntActActionCodesId">Initial value of CustEntActActionCodesId.</param>
        public static CustEntActivities CreateCustEntActivities(int id, global::System.DateTime date, string assigned, string status, int custEntMainId, int custEntActStatusId, int custEntActActionStatusId, int custEntActActionCodesId)
        {
            CustEntActivities custEntActivities = new CustEntActivities();
            custEntActivities.Id = id;
            custEntActivities.Date = date;
            custEntActivities.Assigned = assigned;
            custEntActivities.Status = status;
            custEntActivities.CustEntMainId = custEntMainId;
            custEntActivities.CustEntActStatusId = custEntActStatusId;
            custEntActivities.CustEntActActionStatusId = custEntActActionStatusId;
            custEntActivities.CustEntActActionCodesId = custEntActActionCodesId;
            return custEntActivities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Date
        {
            get
            {
                global::System.DateTime value = _Date;
                OnGetDate(ref value);
                return value;
            }
            set
            {
                if (_Date != value)
                {
                  OnDateChanging(ref value);
                  ReportPropertyChanging("Date");
                  _Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Date");
                  OnDateChanged();
              }
            }
        }
        private global::System.DateTime _Date;
        partial void OnGetDate(ref global::System.DateTime value);
        partial void OnDateChanging(ref global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// There are no comments for Assigned in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Assigned
        {
            get
            {
                string value = _Assigned;
                OnGetAssigned(ref value);
                return value;
            }
            set
            {
                if (_Assigned != value)
                {
                  OnAssignedChanging(ref value);
                  ReportPropertyChanging("Assigned");
                  _Assigned = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Assigned");
                  OnAssignedChanged();
              }
            }
        }
        private string _Assigned;
        partial void OnGetAssigned(ref string value);
        partial void OnAssignedChanging(ref string value);
        partial void OnAssignedChanged();
    
        /// <summary>
        /// There are no comments for ProjectName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProjectName
        {
            get
            {
                string value = _ProjectName;
                OnGetProjectName(ref value);
                return value;
            }
            set
            {
                if (_ProjectName != value)
                {
                  OnProjectNameChanging(ref value);
                  ReportPropertyChanging("ProjectName");
                  _ProjectName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProjectName");
                  OnProjectNameChanged();
              }
            }
        }
        private string _ProjectName;
        partial void OnGetProjectName(ref string value);
        partial void OnProjectNameChanging(ref string value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// There are no comments for SalesCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SalesCode
        {
            get
            {
                string value = _SalesCode;
                OnGetSalesCode(ref value);
                return value;
            }
            set
            {
                if (_SalesCode != value)
                {
                  OnSalesCodeChanging(ref value);
                  ReportPropertyChanging("SalesCode");
                  _SalesCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SalesCode");
                  OnSalesCodeChanged();
              }
            }
        }
        private string _SalesCode;
        partial void OnGetSalesCode(ref string value);
        partial void OnSalesCodeChanging(ref string value);
        partial void OnSalesCodeChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Amount
        {
            get
            {
                decimal? value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal? _Amount;
        partial void OnGetAmount(ref decimal? value);
        partial void OnAmountChanging(ref decimal? value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for ActivityType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ActivityType
        {
            get
            {
                string value = _ActivityType;
                OnGetActivityType(ref value);
                return value;
            }
            set
            {
                if (_ActivityType != value)
                {
                  OnActivityTypeChanging(ref value);
                  ReportPropertyChanging("ActivityType");
                  _ActivityType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ActivityType");
                  OnActivityTypeChanged();
              }
            }
        }
        private string _ActivityType;
        partial void OnGetActivityType(ref string value);
        partial void OnActivityTypeChanging(ref string value);
        partial void OnActivityTypeChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesLeadId
        {
            get
            {
                int? value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int? _SalesLeadId;
        partial void OnGetSalesLeadId(ref int? value);
        partial void OnSalesLeadIdChanging(ref int? value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntActStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntActStatusId
        {
            get
            {
                int value = _CustEntActStatusId;
                OnGetCustEntActStatusId(ref value);
                return value;
            }
            set
            {
                if (_CustEntActStatusId != value)
                {
                  OnCustEntActStatusIdChanging(ref value);
                  ReportPropertyChanging("CustEntActStatusId");
                  _CustEntActStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntActStatusId");
                  OnCustEntActStatusIdChanged();
              }
            }
        }
        private int _CustEntActStatusId = 1;
        partial void OnGetCustEntActStatusId(ref int value);
        partial void OnCustEntActStatusIdChanging(ref int value);
        partial void OnCustEntActStatusIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntActActionStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntActActionStatusId
        {
            get
            {
                int value = _CustEntActActionStatusId;
                OnGetCustEntActActionStatusId(ref value);
                return value;
            }
            set
            {
                if (_CustEntActActionStatusId != value)
                {
                  OnCustEntActActionStatusIdChanging(ref value);
                  ReportPropertyChanging("CustEntActActionStatusId");
                  _CustEntActActionStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntActActionStatusId");
                  OnCustEntActActionStatusIdChanged();
              }
            }
        }
        private int _CustEntActActionStatusId = 1;
        partial void OnGetCustEntActActionStatusId(ref int value);
        partial void OnCustEntActActionStatusIdChanging(ref int value);
        partial void OnCustEntActActionStatusIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntActActionCodesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntActActionCodesId
        {
            get
            {
                int value = _CustEntActActionCodesId;
                OnGetCustEntActActionCodesId(ref value);
                return value;
            }
            set
            {
                if (_CustEntActActionCodesId != value)
                {
                  OnCustEntActActionCodesIdChanging(ref value);
                  ReportPropertyChanging("CustEntActActionCodesId");
                  _CustEntActActionCodesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntActActionCodesId");
                  OnCustEntActActionCodesIdChanged();
              }
            }
        }
        private int _CustEntActActionCodesId = 1;
        partial void OnGetCustEntActActionCodesId(ref int value);
        partial void OnCustEntActActionCodesIdChanging(ref int value);
        partial void OnCustEntActActionCodesIdChanged();
    
        /// <summary>
        /// There are no comments for Commodity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Commodity
        {
            get
            {
                string value = _Commodity;
                OnGetCommodity(ref value);
                return value;
            }
            set
            {
                if (_Commodity != value)
                {
                  OnCommodityChanging(ref value);
                  ReportPropertyChanging("Commodity");
                  _Commodity = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Commodity");
                  OnCommodityChanged();
              }
            }
        }
        private string _Commodity;
        partial void OnGetCommodity(ref string value);
        partial void OnCommodityChanging(ref string value);
        partial void OnCommodityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActStatusCustEntActivity", "CustEntActStatus")]
        public virtual CustEntActStatus CustEntActStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActStatus>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActStatus>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntActStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntActStatus> CustEntActStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActStatus>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntActStatus>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActStatus>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntActActionStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus")]
        public virtual CustEntActActionStatus CustEntActActionStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionStatus>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionStatus>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntActActionStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntActActionStatus> CustEntActActionStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionStatus>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntActActionStatus>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionStatus>("DB_A0A0AE_ClientModel.FK_CustEntActActionStatusCustEntActivity", "CustEntActActionStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntActActionCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes")]
        public virtual CustEntActActionCodes CustEntActActionCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionCodes>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionCodes>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntActActionCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntActActionCodes> CustEntActActionCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionCodes>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntActActionCodes>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActActionCodes>("DB_A0A0AE_ClientModel.FK_CustEntActActionCodesCustEntActivity", "CustEntActActionCodes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntActivity", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActivityTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActivityTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActivityTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActivityTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static CustEntActivityTypes CreateCustEntActivityTypes(int id, string type)
        {
            CustEntActivityTypes custEntActivityTypes = new CustEntActivityTypes();
            custEntActivityTypes.Id = id;
            custEntActivityTypes.Type = type;
            return custEntActivityTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for Points in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Points
        {
            get
            {
                int? value = _Points;
                OnGetPoints(ref value);
                return value;
            }
            set
            {
                if (_Points != value)
                {
                  OnPointsChanging(ref value);
                  ReportPropertyChanging("Points");
                  _Points = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Points");
                  OnPointsChanged();
              }
            }
        }
        private int? _Points;
        partial void OnGetPoints(ref int? value);
        partial void OnPointsChanging(ref int? value);
        partial void OnPointsChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActPostSales in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActPostSales")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActPostSales : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActPostSales object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="by">Initial value of By.</param>
        /// <param name="dateEncoded">Initial value of DateEncoded.</param>
        /// <param name="salesCode">Initial value of SalesCode.</param>
        /// <param name="custEntActPostSaleStatusId">Initial value of CustEntActPostSaleStatusId.</param>
        public static CustEntActPostSales CreateCustEntActPostSales(int id, string by, global::System.DateTime dateEncoded, string salesCode, int custEntActPostSaleStatusId)
        {
            CustEntActPostSales custEntActPostSales = new CustEntActPostSales();
            custEntActPostSales.Id = id;
            custEntActPostSales.By = by;
            custEntActPostSales.DateEncoded = dateEncoded;
            custEntActPostSales.SalesCode = salesCode;
            custEntActPostSales.CustEntActPostSaleStatusId = custEntActPostSaleStatusId;
            return custEntActPostSales;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for By in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string By
        {
            get
            {
                string value = _By;
                OnGetBy(ref value);
                return value;
            }
            set
            {
                if (_By != value)
                {
                  OnByChanging(ref value);
                  ReportPropertyChanging("By");
                  _By = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("By");
                  OnByChanged();
              }
            }
        }
        private string _By;
        partial void OnGetBy(ref string value);
        partial void OnByChanging(ref string value);
        partial void OnByChanged();
    
        /// <summary>
        /// There are no comments for DateEncoded in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DateEncoded
        {
            get
            {
                global::System.DateTime value = _DateEncoded;
                OnGetDateEncoded(ref value);
                return value;
            }
            set
            {
                if (_DateEncoded != value)
                {
                  OnDateEncodedChanging(ref value);
                  ReportPropertyChanging("DateEncoded");
                  _DateEncoded = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateEncoded");
                  OnDateEncodedChanged();
              }
            }
        }
        private global::System.DateTime _DateEncoded;
        partial void OnGetDateEncoded(ref global::System.DateTime value);
        partial void OnDateEncodedChanging(ref global::System.DateTime value);
        partial void OnDateEncodedChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SalesCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SalesCode
        {
            get
            {
                string value = _SalesCode;
                OnGetSalesCode(ref value);
                return value;
            }
            set
            {
                if (_SalesCode != value)
                {
                  OnSalesCodeChanging(ref value);
                  ReportPropertyChanging("SalesCode");
                  _SalesCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SalesCode");
                  OnSalesCodeChanged();
              }
            }
        }
        private string _SalesCode;
        partial void OnGetSalesCode(ref string value);
        partial void OnSalesCodeChanging(ref string value);
        partial void OnSalesCodeChanged();
    
        /// <summary>
        /// There are no comments for CustEntActPostSaleStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntActPostSaleStatusId
        {
            get
            {
                int value = _CustEntActPostSaleStatusId;
                OnGetCustEntActPostSaleStatusId(ref value);
                return value;
            }
            set
            {
                if (_CustEntActPostSaleStatusId != value)
                {
                  OnCustEntActPostSaleStatusIdChanging(ref value);
                  ReportPropertyChanging("CustEntActPostSaleStatusId");
                  _CustEntActPostSaleStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntActPostSaleStatusId");
                  OnCustEntActPostSaleStatusIdChanged();
              }
            }
        }
        private int _CustEntActPostSaleStatusId;
        partial void OnGetCustEntActPostSaleStatusId(ref int value);
        partial void OnCustEntActPostSaleStatusIdChanging(ref int value);
        partial void OnCustEntActPostSaleStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActPostSaleStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus")]
        public virtual CustEntActPostSaleStatus CustEntActPostSaleStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActPostSaleStatus>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActPostSaleStatus>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntActPostSaleStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntActPostSaleStatus> CustEntActPostSaleStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActPostSaleStatus>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntActPostSaleStatus>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntActPostSaleStatus>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSaleStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActPostSaleStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActPostSaleStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActPostSaleStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActPostSaleStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static CustEntActPostSaleStatus CreateCustEntActPostSaleStatus(int id, string status)
        {
            CustEntActPostSaleStatus custEntActPostSaleStatus = new CustEntActPostSaleStatus();
            custEntActPostSaleStatus.Id = id;
            custEntActPostSaleStatus.Status = status;
            return custEntActPostSaleStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActPostSales in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSales")]
        public virtual EntityCollection<CustEntActPostSales> CustEntActPostSales
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntActPostSales>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntActPostSales>("DB_A0A0AE_ClientModel.FK_CustEntActPostSaleStatusCustEntActPostSale", "CustEntActPostSales", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static CustEntActStatus CreateCustEntActStatus(int id, string status)
        {
            CustEntActStatus custEntActStatus = new CustEntActStatus();
            custEntActStatus.Id = id;
            custEntActStatus.Status = status;
            return custEntActStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntActStatusCustEntActivity", "CustEntActivities")]
        public virtual EntityCollection<CustEntActivities> CustEntActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntActStatusCustEntActivity", "CustEntActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntActTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntActTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntActTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntActTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static CustEntActTypes CreateCustEntActTypes(int id, string type)
        {
            CustEntActTypes custEntActTypes = new CustEntActTypes();
            custEntActTypes.Id = id;
            custEntActTypes.Type = type;
            return custEntActTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntAddresses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntAddresses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntAddresses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntAddresses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        /// <param name="isBilling">Initial value of IsBilling.</param>
        /// <param name="isPrimary">Initial value of IsPrimary.</param>
        public static CustEntAddresses CreateCustEntAddresses(int id, int custEntMainId, bool isBilling, bool isPrimary)
        {
            CustEntAddresses custEntAddresses = new CustEntAddresses();
            custEntAddresses.Id = id;
            custEntAddresses.CustEntMainId = custEntMainId;
            custEntAddresses.IsBilling = isBilling;
            custEntAddresses.IsPrimary = isPrimary;
            return custEntAddresses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for Line1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Line1
        {
            get
            {
                string value = _Line1;
                OnGetLine1(ref value);
                return value;
            }
            set
            {
                if (_Line1 != value)
                {
                  OnLine1Changing(ref value);
                  ReportPropertyChanging("Line1");
                  _Line1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Line1");
                  OnLine1Changed();
              }
            }
        }
        private string _Line1;
        partial void OnGetLine1(ref string value);
        partial void OnLine1Changing(ref string value);
        partial void OnLine1Changed();
    
        /// <summary>
        /// There are no comments for Line2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Line2
        {
            get
            {
                string value = _Line2;
                OnGetLine2(ref value);
                return value;
            }
            set
            {
                if (_Line2 != value)
                {
                  OnLine2Changing(ref value);
                  ReportPropertyChanging("Line2");
                  _Line2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Line2");
                  OnLine2Changed();
              }
            }
        }
        private string _Line2;
        partial void OnGetLine2(ref string value);
        partial void OnLine2Changing(ref string value);
        partial void OnLine2Changed();
    
        /// <summary>
        /// There are no comments for Line3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Line3
        {
            get
            {
                string value = _Line3;
                OnGetLine3(ref value);
                return value;
            }
            set
            {
                if (_Line3 != value)
                {
                  OnLine3Changing(ref value);
                  ReportPropertyChanging("Line3");
                  _Line3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Line3");
                  OnLine3Changed();
              }
            }
        }
        private string _Line3;
        partial void OnGetLine3(ref string value);
        partial void OnLine3Changing(ref string value);
        partial void OnLine3Changed();
    
        /// <summary>
        /// There are no comments for Line4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Line4
        {
            get
            {
                string value = _Line4;
                OnGetLine4(ref value);
                return value;
            }
            set
            {
                if (_Line4 != value)
                {
                  OnLine4Changing(ref value);
                  ReportPropertyChanging("Line4");
                  _Line4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Line4");
                  OnLine4Changed();
              }
            }
        }
        private string _Line4;
        partial void OnGetLine4(ref string value);
        partial void OnLine4Changing(ref string value);
        partial void OnLine4Changed();
    
        /// <summary>
        /// There are no comments for Line5 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Line5
        {
            get
            {
                string value = _Line5;
                OnGetLine5(ref value);
                return value;
            }
            set
            {
                if (_Line5 != value)
                {
                  OnLine5Changing(ref value);
                  ReportPropertyChanging("Line5");
                  _Line5 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Line5");
                  OnLine5Changed();
              }
            }
        }
        private string _Line5;
        partial void OnGetLine5(ref string value);
        partial void OnLine5Changing(ref string value);
        partial void OnLine5Changed();
    
        /// <summary>
        /// There are no comments for IsBilling in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool IsBilling
        {
            get
            {
                bool value = _IsBilling;
                OnGetIsBilling(ref value);
                return value;
            }
            set
            {
                if (_IsBilling != value)
                {
                  OnIsBillingChanging(ref value);
                  ReportPropertyChanging("IsBilling");
                  _IsBilling = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsBilling");
                  OnIsBillingChanged();
              }
            }
        }
        private bool _IsBilling;
        partial void OnGetIsBilling(ref bool value);
        partial void OnIsBillingChanging(ref bool value);
        partial void OnIsBillingChanged();
    
        /// <summary>
        /// There are no comments for IsPrimary in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool IsPrimary
        {
            get
            {
                bool value = _IsPrimary;
                OnGetIsPrimary(ref value);
                return value;
            }
            set
            {
                if (_IsPrimary != value)
                {
                  OnIsPrimaryChanging(ref value);
                  ReportPropertyChanging("IsPrimary");
                  _IsPrimary = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsPrimary");
                  OnIsPrimaryChanged();
              }
            }
        }
        private bool _IsPrimary;
        partial void OnGetIsPrimary(ref bool value);
        partial void OnIsPrimaryChanging(ref bool value);
        partial void OnIsPrimaryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntAddress", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntAssigns in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntAssigns")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntAssigns : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntAssigns object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="assigned">Initial value of Assigned.</param>
        /// <param name="date">Initial value of Date.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        public static CustEntAssigns CreateCustEntAssigns(int id, string assigned, global::System.DateTime date, int custEntMainId)
        {
            CustEntAssigns custEntAssigns = new CustEntAssigns();
            custEntAssigns.Id = id;
            custEntAssigns.Assigned = assigned;
            custEntAssigns.Date = date;
            custEntAssigns.CustEntMainId = custEntMainId;
            return custEntAssigns;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Assigned in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Assigned
        {
            get
            {
                string value = _Assigned;
                OnGetAssigned(ref value);
                return value;
            }
            set
            {
                if (_Assigned != value)
                {
                  OnAssignedChanging(ref value);
                  ReportPropertyChanging("Assigned");
                  _Assigned = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Assigned");
                  OnAssignedChanged();
              }
            }
        }
        private string _Assigned;
        partial void OnGetAssigned(ref string value);
        partial void OnAssignedChanging(ref string value);
        partial void OnAssignedChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Date
        {
            get
            {
                global::System.DateTime value = _Date;
                OnGetDate(ref value);
                return value;
            }
            set
            {
                if (_Date != value)
                {
                  OnDateChanging(ref value);
                  ReportPropertyChanging("Date");
                  _Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Date");
                  OnDateChanged();
              }
            }
        }
        private global::System.DateTime _Date;
        partial void OnGetDate(ref global::System.DateTime value);
        partial void OnDateChanging(ref global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntAssign", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        /// <param name="custCategoryId">Initial value of CustCategoryId.</param>
        public static CustEntCats CreateCustEntCats(int id, int custEntMainId, int custCategoryId)
        {
            CustEntCats custEntCats = new CustEntCats();
            custEntCats.Id = id;
            custEntCats.CustEntMainId = custEntMainId;
            custEntCats.CustCategoryId = custCategoryId;
            return custEntCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for CustCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustCategoryId
        {
            get
            {
                int value = _CustCategoryId;
                OnGetCustCategoryId(ref value);
                return value;
            }
            set
            {
                if (_CustCategoryId != value)
                {
                  OnCustCategoryIdChanging(ref value);
                  ReportPropertyChanging("CustCategoryId");
                  _CustCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustCategoryId");
                  OnCustCategoryIdChanged();
              }
            }
        }
        private int _CustCategoryId;
        partial void OnGetCustCategoryId(ref int value);
        partial void OnCustCategoryIdChanging(ref int value);
        partial void OnCustCategoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntCat", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustCategoryCustEntCat", "CustCategories")]
        public virtual CustCategories CustCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustCategories> CustCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustCategories>("DB_A0A0AE_ClientModel.FK_CustCategoryCustEntCat", "CustCategories").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntClauses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntClauses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntClauses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntClauses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        /// <param name="title">Initial value of Title.</param>
        /// <param name="validStart">Initial value of ValidStart.</param>
        /// <param name="validEnd">Initial value of ValidEnd.</param>
        /// <param name="dtEncoded">Initial value of DtEncoded.</param>
        /// <param name="encodedBy">Initial value of EncodedBy.</param>
        public static CustEntClauses CreateCustEntClauses(int id, int custEntMainId, string title, global::System.DateTime validStart, global::System.DateTime validEnd, global::System.DateTime dtEncoded, string encodedBy)
        {
            CustEntClauses custEntClauses = new CustEntClauses();
            custEntClauses.Id = id;
            custEntClauses.CustEntMainId = custEntMainId;
            custEntClauses.Title = title;
            custEntClauses.ValidStart = validStart;
            custEntClauses.ValidEnd = validEnd;
            custEntClauses.DtEncoded = dtEncoded;
            custEntClauses.EncodedBy = encodedBy;
            return custEntClauses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for ValidStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ValidStart
        {
            get
            {
                global::System.DateTime value = _ValidStart;
                OnGetValidStart(ref value);
                return value;
            }
            set
            {
                if (_ValidStart != value)
                {
                  OnValidStartChanging(ref value);
                  ReportPropertyChanging("ValidStart");
                  _ValidStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidStart");
                  OnValidStartChanged();
              }
            }
        }
        private global::System.DateTime _ValidStart;
        partial void OnGetValidStart(ref global::System.DateTime value);
        partial void OnValidStartChanging(ref global::System.DateTime value);
        partial void OnValidStartChanged();
    
        /// <summary>
        /// There are no comments for ValidEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ValidEnd
        {
            get
            {
                global::System.DateTime value = _ValidEnd;
                OnGetValidEnd(ref value);
                return value;
            }
            set
            {
                if (_ValidEnd != value)
                {
                  OnValidEndChanging(ref value);
                  ReportPropertyChanging("ValidEnd");
                  _ValidEnd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidEnd");
                  OnValidEndChanged();
              }
            }
        }
        private global::System.DateTime _ValidEnd;
        partial void OnGetValidEnd(ref global::System.DateTime value);
        partial void OnValidEndChanging(ref global::System.DateTime value);
        partial void OnValidEndChanged();
    
        /// <summary>
        /// There are no comments for Desc1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Desc1
        {
            get
            {
                string value = _Desc1;
                OnGetDesc1(ref value);
                return value;
            }
            set
            {
                if (_Desc1 != value)
                {
                  OnDesc1Changing(ref value);
                  ReportPropertyChanging("Desc1");
                  _Desc1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Desc1");
                  OnDesc1Changed();
              }
            }
        }
        private string _Desc1;
        partial void OnGetDesc1(ref string value);
        partial void OnDesc1Changing(ref string value);
        partial void OnDesc1Changed();
    
        /// <summary>
        /// There are no comments for Desc2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Desc2
        {
            get
            {
                string value = _Desc2;
                OnGetDesc2(ref value);
                return value;
            }
            set
            {
                if (_Desc2 != value)
                {
                  OnDesc2Changing(ref value);
                  ReportPropertyChanging("Desc2");
                  _Desc2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Desc2");
                  OnDesc2Changed();
              }
            }
        }
        private string _Desc2;
        partial void OnGetDesc2(ref string value);
        partial void OnDesc2Changing(ref string value);
        partial void OnDesc2Changed();
    
        /// <summary>
        /// There are no comments for Desc3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Desc3
        {
            get
            {
                string value = _Desc3;
                OnGetDesc3(ref value);
                return value;
            }
            set
            {
                if (_Desc3 != value)
                {
                  OnDesc3Changing(ref value);
                  ReportPropertyChanging("Desc3");
                  _Desc3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Desc3");
                  OnDesc3Changed();
              }
            }
        }
        private string _Desc3;
        partial void OnGetDesc3(ref string value);
        partial void OnDesc3Changing(ref string value);
        partial void OnDesc3Changed();
    
        /// <summary>
        /// There are no comments for DtEncoded in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtEncoded
        {
            get
            {
                global::System.DateTime value = _DtEncoded;
                OnGetDtEncoded(ref value);
                return value;
            }
            set
            {
                if (_DtEncoded != value)
                {
                  OnDtEncodedChanging(ref value);
                  ReportPropertyChanging("DtEncoded");
                  _DtEncoded = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEncoded");
                  OnDtEncodedChanged();
              }
            }
        }
        private global::System.DateTime _DtEncoded;
        partial void OnGetDtEncoded(ref global::System.DateTime value);
        partial void OnDtEncodedChanging(ref global::System.DateTime value);
        partial void OnDtEncodedChanged();
    
        /// <summary>
        /// There are no comments for EncodedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EncodedBy
        {
            get
            {
                string value = _EncodedBy;
                OnGetEncodedBy(ref value);
                return value;
            }
            set
            {
                if (_EncodedBy != value)
                {
                  OnEncodedByChanging(ref value);
                  ReportPropertyChanging("EncodedBy");
                  _EncodedBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EncodedBy");
                  OnEncodedByChanged();
              }
            }
        }
        private string _EncodedBy;
        partial void OnGetEncodedBy(ref string value);
        partial void OnEncodedByChanging(ref string value);
        partial void OnEncodedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntClauses", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntDocuments in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntDocuments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntDocuments : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntDocuments object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="supDocumentId">Initial value of SupDocumentId.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        public static CustEntDocuments CreateCustEntDocuments(int id, int supDocumentId, int custEntMainId)
        {
            CustEntDocuments custEntDocuments = new CustEntDocuments();
            custEntDocuments.Id = id;
            custEntDocuments.SupDocumentId = supDocumentId;
            custEntDocuments.CustEntMainId = custEntMainId;
            return custEntDocuments;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SupDocumentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupDocumentId
        {
            get
            {
                int value = _SupDocumentId;
                OnGetSupDocumentId(ref value);
                return value;
            }
            set
            {
                if (_SupDocumentId != value)
                {
                  OnSupDocumentIdChanging(ref value);
                  ReportPropertyChanging("SupDocumentId");
                  _SupDocumentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupDocumentId");
                  OnSupDocumentIdChanged();
              }
            }
        }
        private int _SupDocumentId;
        partial void OnGetSupDocumentId(ref int value);
        partial void OnSupDocumentIdChanging(ref int value);
        partial void OnSupDocumentIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for IsApproved in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? IsApproved
        {
            get
            {
                int? value = _IsApproved;
                OnGetIsApproved(ref value);
                return value;
            }
            set
            {
                if (_IsApproved != value)
                {
                  OnIsApprovedChanging(ref value);
                  ReportPropertyChanging("IsApproved");
                  _IsApproved = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsApproved");
                  OnIsApprovedChanged();
              }
            }
        }
        private int? _IsApproved;
        partial void OnGetIsApproved(ref int? value);
        partial void OnIsApprovedChanging(ref int? value);
        partial void OnIsApprovedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupDocuments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntDocumentsSupDocument", "SupDocuments")]
        public virtual SupDocuments SupDocuments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "SupDocuments").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "SupDocuments").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupDocuments in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupDocuments> SupDocumentsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "SupDocuments");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "SupDocuments", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "SupDocuments").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntDocuments", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="custAssocTypeId">Initial value of CustAssocTypeId.</param>
        public static CustEntities CreateCustEntities(int id, int custEntMainId, int customerId, int custAssocTypeId)
        {
            CustEntities custEntities = new CustEntities();
            custEntities.Id = id;
            custEntities.CustEntMainId = custEntMainId;
            custEntities.CustomerId = customerId;
            custEntities.CustAssocTypeId = custAssocTypeId;
            return custEntities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for Position in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Position
        {
            get
            {
                string value = _Position;
                OnGetPosition(ref value);
                return value;
            }
            set
            {
                if (_Position != value)
                {
                  OnPositionChanging(ref value);
                  ReportPropertyChanging("Position");
                  _Position = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Position");
                  OnPositionChanged();
              }
            }
        }
        private string _Position;
        partial void OnGetPosition(ref string value);
        partial void OnPositionChanging(ref string value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// There are no comments for CustAssocTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustAssocTypeId
        {
            get
            {
                int value = _CustAssocTypeId;
                OnGetCustAssocTypeId(ref value);
                return value;
            }
            set
            {
                if (_CustAssocTypeId != value)
                {
                  OnCustAssocTypeIdChanging(ref value);
                  ReportPropertyChanging("CustAssocTypeId");
                  _CustAssocTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustAssocTypeId");
                  OnCustAssocTypeIdChanged();
              }
            }
        }
        private int _CustAssocTypeId = 1;
        partial void OnGetCustAssocTypeId(ref int value);
        partial void OnCustAssocTypeIdChanging(ref int value);
        partial void OnCustAssocTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Company
        {
            get
            {
                string value = _Company;
                OnGetCompany(ref value);
                return value;
            }
            set
            {
                if (_Company != value)
                {
                  OnCompanyChanging(ref value);
                  ReportPropertyChanging("Company");
                  _Company = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Company");
                  OnCompanyChanged();
              }
            }
        }
        private string _Company;
        partial void OnGetCompany(ref string value);
        partial void OnCompanyChanging(ref string value);
        partial void OnCompanyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntity", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustEntity", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "Customers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustAssocTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustAssocTypeCustEntity", "CustAssocTypes")]
        public virtual CustAssocTypes CustAssocTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustAssocTypes>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustAssocTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustAssocTypes>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustAssocTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustAssocTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustAssocTypes> CustAssocTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustAssocTypes>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustAssocTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustAssocTypes>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustAssocTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustAssocTypes>("DB_A0A0AE_ClientModel.FK_CustAssocTypeCustEntity", "CustAssocTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustEntMains in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustEntMains")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustEntMains : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustEntMains object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="custEntAccountTypeId">Initial value of CustEntAccountTypeId.</param>
        /// <param name="dataGroupId">Initial value of DataGroupId.</param>
        public static CustEntMains CreateCustEntMains(int id, string name, int custEntAccountTypeId, int dataGroupId)
        {
            CustEntMains custEntMains = new CustEntMains();
            custEntMains.Id = id;
            custEntMains.Name = name;
            custEntMains.CustEntAccountTypeId = custEntAccountTypeId;
            custEntMains.DataGroupId = dataGroupId;
            return custEntMains;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for Contact1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact1
        {
            get
            {
                string value = _Contact1;
                OnGetContact1(ref value);
                return value;
            }
            set
            {
                if (_Contact1 != value)
                {
                  OnContact1Changing(ref value);
                  ReportPropertyChanging("Contact1");
                  _Contact1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact1");
                  OnContact1Changed();
              }
            }
        }
        private string _Contact1;
        partial void OnGetContact1(ref string value);
        partial void OnContact1Changing(ref string value);
        partial void OnContact1Changed();
    
        /// <summary>
        /// There are no comments for Contact2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact2
        {
            get
            {
                string value = _Contact2;
                OnGetContact2(ref value);
                return value;
            }
            set
            {
                if (_Contact2 != value)
                {
                  OnContact2Changing(ref value);
                  ReportPropertyChanging("Contact2");
                  _Contact2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact2");
                  OnContact2Changed();
              }
            }
        }
        private string _Contact2;
        partial void OnGetContact2(ref string value);
        partial void OnContact2Changing(ref string value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for Website in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Website
        {
            get
            {
                string value = _Website;
                OnGetWebsite(ref value);
                return value;
            }
            set
            {
                if (_Website != value)
                {
                  OnWebsiteChanging(ref value);
                  ReportPropertyChanging("Website");
                  _Website = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Website");
                  OnWebsiteChanged();
              }
            }
        }
        private string _Website;
        partial void OnGetWebsite(ref string value);
        partial void OnWebsiteChanging(ref string value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for CityId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CityId
        {
            get
            {
                int? value = _CityId;
                OnGetCityId(ref value);
                return value;
            }
            set
            {
                if (_CityId != value)
                {
                  OnCityIdChanging(ref value);
                  ReportPropertyChanging("CityId");
                  _CityId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CityId");
                  OnCityIdChanged();
              }
            }
        }
        private int? _CityId;
        partial void OnGetCityId(ref int? value);
        partial void OnCityIdChanging(ref int? value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for AssignedTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AssignedTo
        {
            get
            {
                string value = _AssignedTo;
                OnGetAssignedTo(ref value);
                return value;
            }
            set
            {
                if (_AssignedTo != value)
                {
                  OnAssignedToChanging(ref value);
                  ReportPropertyChanging("AssignedTo");
                  _AssignedTo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AssignedTo");
                  OnAssignedToChanged();
              }
            }
        }
        private string _AssignedTo;
        partial void OnGetAssignedTo(ref string value);
        partial void OnAssignedToChanging(ref string value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// There are no comments for Mobile in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mobile
        {
            get
            {
                string value = _Mobile;
                OnGetMobile(ref value);
                return value;
            }
            set
            {
                if (_Mobile != value)
                {
                  OnMobileChanging(ref value);
                  ReportPropertyChanging("Mobile");
                  _Mobile = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mobile");
                  OnMobileChanged();
              }
            }
        }
        private string _Mobile;
        partial void OnGetMobile(ref string value);
        partial void OnMobileChanging(ref string value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Exclusive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Exclusive
        {
            get
            {
                string value = _Exclusive;
                OnGetExclusive(ref value);
                return value;
            }
            set
            {
                if (_Exclusive != value)
                {
                  OnExclusiveChanging(ref value);
                  ReportPropertyChanging("Exclusive");
                  _Exclusive = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Exclusive");
                  OnExclusiveChanged();
              }
            }
        }
        private string _Exclusive;
        partial void OnGetExclusive(ref string value);
        partial void OnExclusiveChanging(ref string value);
        partial void OnExclusiveChanged();
    
        /// <summary>
        /// There are no comments for CustEntAccountTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntAccountTypeId
        {
            get
            {
                int value = _CustEntAccountTypeId;
                OnGetCustEntAccountTypeId(ref value);
                return value;
            }
            set
            {
                if (_CustEntAccountTypeId != value)
                {
                  OnCustEntAccountTypeIdChanging(ref value);
                  ReportPropertyChanging("CustEntAccountTypeId");
                  _CustEntAccountTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntAccountTypeId");
                  OnCustEntAccountTypeIdChanged();
              }
            }
        }
        private int _CustEntAccountTypeId = 1;
        partial void OnGetCustEntAccountTypeId(ref int value);
        partial void OnCustEntAccountTypeIdChanging(ref int value);
        partial void OnCustEntAccountTypeIdChanged();
    
        /// <summary>
        /// There are no comments for DataGroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DataGroupId
        {
            get
            {
                int value = _DataGroupId;
                OnGetDataGroupId(ref value);
                return value;
            }
            set
            {
                if (_DataGroupId != value)
                {
                  OnDataGroupIdChanging(ref value);
                  ReportPropertyChanging("DataGroupId");
                  _DataGroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DataGroupId");
                  OnDataGroupIdChanged();
              }
            }
        }
        private int _DataGroupId = 1;
        partial void OnGetDataGroupId(ref int value);
        partial void OnDataGroupIdChanging(ref int value);
        partial void OnDataGroupIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntActivity", "CustEntActivities")]
        public virtual EntityCollection<CustEntActivities> CustEntActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntActivities>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntActivity", "CustEntActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntAddresses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntAddress", "CustEntAddresses")]
        public virtual EntityCollection<CustEntAddresses> CustEntAddresses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntAddresses>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntAddresses>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAddress", "CustEntAddresses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntAssigns in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntAssign", "CustEntAssigns")]
        public virtual EntityCollection<CustEntAssigns> CustEntAssigns
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntAssigns>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntAssigns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntAssigns>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntAssign", "CustEntAssigns", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntCat", "CustEntCats")]
        public virtual EntityCollection<CustEntCats> CustEntCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntCats>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntCats>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntCat", "CustEntCats", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntClauses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntClauses", "CustEntClauses")]
        public virtual EntityCollection<CustEntClauses> CustEntClauses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntClauses>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntClauses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntClauses>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntClauses", "CustEntClauses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntDocuments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntDocuments", "CustEntDocuments")]
        public virtual EntityCollection<CustEntDocuments> CustEntDocuments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntDocuments>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntDocuments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntDocuments>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntDocuments", "CustEntDocuments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainCustEntity", "CustEntities")]
        public virtual EntityCollection<CustEntities> CustEntities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntities>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntities>("DB_A0A0AE_ClientModel.FK_CustEntMainCustEntity", "CustEntities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobEntMainCustEntMain", "JobEntMains")]
        public virtual EntityCollection<JobEntMains> JobEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "JobEntMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "JobEntMains", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadCompanies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainSalesLeadCompany", "SalesLeadCompanies")]
        public virtual EntityCollection<SalesLeadCompanies> SalesLeadCompanies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadCompanies>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "SalesLeadCompanies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadCompanies>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "SalesLeadCompanies", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Vehicles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainVehicle", "Vehicles")]
        public virtual EntityCollection<Vehicles> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Vehicles>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Vehicles>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "Vehicles", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustFileRefs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustFileRefs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustFileRefs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustFileRefs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="refTable">Initial value of RefTable.</param>
        /// <param name="refId">Initial value of RefId.</param>
        /// <param name="custFilesId">Initial value of CustFilesId.</param>
        public static CustFileRefs CreateCustFileRefs(int id, string refTable, int refId, int custFilesId)
        {
            CustFileRefs custFileRefs = new CustFileRefs();
            custFileRefs.Id = id;
            custFileRefs.RefTable = refTable;
            custFileRefs.RefId = refId;
            custFileRefs.CustFilesId = custFilesId;
            return custFileRefs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for RefTable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RefTable
        {
            get
            {
                string value = _RefTable;
                OnGetRefTable(ref value);
                return value;
            }
            set
            {
                if (_RefTable != value)
                {
                  OnRefTableChanging(ref value);
                  ReportPropertyChanging("RefTable");
                  _RefTable = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RefTable");
                  OnRefTableChanged();
              }
            }
        }
        private string _RefTable;
        partial void OnGetRefTable(ref string value);
        partial void OnRefTableChanging(ref string value);
        partial void OnRefTableChanged();
    
        /// <summary>
        /// There are no comments for RefId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RefId
        {
            get
            {
                int value = _RefId;
                OnGetRefId(ref value);
                return value;
            }
            set
            {
                if (_RefId != value)
                {
                  OnRefIdChanging(ref value);
                  ReportPropertyChanging("RefId");
                  _RefId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefId");
                  OnRefIdChanged();
              }
            }
        }
        private int _RefId;
        partial void OnGetRefId(ref int value);
        partial void OnRefIdChanging(ref int value);
        partial void OnRefIdChanged();
    
        /// <summary>
        /// There are no comments for CustFilesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustFilesId
        {
            get
            {
                int value = _CustFilesId;
                OnGetCustFilesId(ref value);
                return value;
            }
            set
            {
                if (_CustFilesId != value)
                {
                  OnCustFilesIdChanging(ref value);
                  ReportPropertyChanging("CustFilesId");
                  _CustFilesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustFilesId");
                  OnCustFilesIdChanged();
              }
            }
        }
        private int _CustFilesId;
        partial void OnGetCustFilesId(ref int value);
        partial void OnCustFilesIdChanging(ref int value);
        partial void OnCustFilesIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustFiles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustFilesCustFileRef", "CustFiles")]
        public virtual CustFiles CustFiles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustFiles>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustFiles>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFiles").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustFiles in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustFiles> CustFilesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustFiles>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFiles");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustFiles>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFiles", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustFiles>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFiles").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustFiles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustFiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustFiles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustFiles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="folder">Initial value of Folder.</param>
        /// <param name="path">Initial value of Path.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        public static CustFiles CreateCustFiles(int id, string desc, string folder, string path, int customerId)
        {
            CustFiles custFiles = new CustFiles();
            custFiles.Id = id;
            custFiles.Desc = desc;
            custFiles.Folder = folder;
            custFiles.Path = path;
            custFiles.CustomerId = customerId;
            return custFiles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Folder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Folder
        {
            get
            {
                string value = _Folder;
                OnGetFolder(ref value);
                return value;
            }
            set
            {
                if (_Folder != value)
                {
                  OnFolderChanging(ref value);
                  ReportPropertyChanging("Folder");
                  _Folder = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Folder");
                  OnFolderChanged();
              }
            }
        }
        private string _Folder;
        partial void OnGetFolder(ref string value);
        partial void OnFolderChanging(ref string value);
        partial void OnFolderChanged();
    
        /// <summary>
        /// There are no comments for Path in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Path
        {
            get
            {
                string value = _Path;
                OnGetPath(ref value);
                return value;
            }
            set
            {
                if (_Path != value)
                {
                  OnPathChanging(ref value);
                  ReportPropertyChanging("Path");
                  _Path = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Path");
                  OnPathChanged();
              }
            }
        }
        private string _Path;
        partial void OnGetPath(ref string value);
        partial void OnPathChanging(ref string value);
        partial void OnPathChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustFileRefs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustFilesCustFileRef", "CustFileRefs")]
        public virtual EntityCollection<CustFileRefs> CustFileRefs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustFileRefs>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFileRefs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustFileRefs>("DB_A0A0AE_ClientModel.FK_CustFilesCustFileRef", "CustFileRefs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustFiles", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "Customers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustNotifActivities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustNotifActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustNotifActivities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustNotifActivities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtActivity">Initial value of DtActivity.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="custNotifId">Initial value of CustNotifId.</param>
        public static CustNotifActivities CreateCustNotifActivities(int id, global::System.DateTime dtActivity, string status, int custNotifId)
        {
            CustNotifActivities custNotifActivities = new CustNotifActivities();
            custNotifActivities.Id = id;
            custNotifActivities.DtActivity = dtActivity;
            custNotifActivities.Status = status;
            custNotifActivities.CustNotifId = custNotifId;
            return custNotifActivities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtActivity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtActivity
        {
            get
            {
                global::System.DateTime value = _DtActivity;
                OnGetDtActivity(ref value);
                return value;
            }
            set
            {
                if (_DtActivity != value)
                {
                  OnDtActivityChanging(ref value);
                  ReportPropertyChanging("DtActivity");
                  _DtActivity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtActivity");
                  OnDtActivityChanged();
              }
            }
        }
        private global::System.DateTime _DtActivity;
        partial void OnGetDtActivity(ref global::System.DateTime value);
        partial void OnDtActivityChanging(ref global::System.DateTime value);
        partial void OnDtActivityChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for CustNotifId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustNotifId
        {
            get
            {
                int value = _CustNotifId;
                OnGetCustNotifId(ref value);
                return value;
            }
            set
            {
                if (_CustNotifId != value)
                {
                  OnCustNotifIdChanging(ref value);
                  ReportPropertyChanging("CustNotifId");
                  _CustNotifId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustNotifId");
                  OnCustNotifIdChanged();
              }
            }
        }
        private int _CustNotifId;
        partial void OnGetCustNotifId(ref int value);
        partial void OnCustNotifIdChanging(ref int value);
        partial void OnCustNotifIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustNotifs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustNotifCustNotifActivity", "CustNotifs")]
        public virtual CustNotifs CustNotifs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustNotifs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustNotifs> CustNotifsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustNotifRecipients in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustNotifRecipients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustNotifRecipients : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustNotifRecipients object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="custNotifId">Initial value of CustNotifId.</param>
        /// <param name="notifRecipientId">Initial value of NotifRecipientId.</param>
        public static CustNotifRecipients CreateCustNotifRecipients(int id, int customerId, int custNotifId, int notifRecipientId)
        {
            CustNotifRecipients custNotifRecipients = new CustNotifRecipients();
            custNotifRecipients.Id = id;
            custNotifRecipients.CustomerId = customerId;
            custNotifRecipients.CustNotifId = custNotifId;
            custNotifRecipients.NotifRecipientId = notifRecipientId;
            return custNotifRecipients;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for CustNotifId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustNotifId
        {
            get
            {
                int value = _CustNotifId;
                OnGetCustNotifId(ref value);
                return value;
            }
            set
            {
                if (_CustNotifId != value)
                {
                  OnCustNotifIdChanging(ref value);
                  ReportPropertyChanging("CustNotifId");
                  _CustNotifId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustNotifId");
                  OnCustNotifIdChanged();
              }
            }
        }
        private int _CustNotifId;
        partial void OnGetCustNotifId(ref int value);
        partial void OnCustNotifIdChanging(ref int value);
        partial void OnCustNotifIdChanged();
    
        /// <summary>
        /// There are no comments for NotifRecipientId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NotifRecipientId
        {
            get
            {
                int value = _NotifRecipientId;
                OnGetNotifRecipientId(ref value);
                return value;
            }
            set
            {
                if (_NotifRecipientId != value)
                {
                  OnNotifRecipientIdChanging(ref value);
                  ReportPropertyChanging("NotifRecipientId");
                  _NotifRecipientId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotifRecipientId");
                  OnNotifRecipientIdChanged();
              }
            }
        }
        private int _NotifRecipientId;
        partial void OnGetNotifRecipientId(ref int value);
        partial void OnNotifRecipientIdChanging(ref int value);
        partial void OnNotifRecipientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustNotifRecipient", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "Customers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustNotifs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustNotifCustNotifRecipient", "CustNotifs")]
        public virtual CustNotifs CustNotifs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustNotifs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustNotifs> CustNotifsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustNotifs>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for NotifRecipients in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_NotifRecipientCustNotifRecipient", "NotifRecipients")]
        public virtual NotifRecipients NotifRecipients
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "NotifRecipients").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "NotifRecipients").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for NotifRecipients in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotifRecipients> NotifRecipientsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "NotifRecipients");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<NotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "NotifRecipients", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "NotifRecipients").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustNotifs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustNotifs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustNotifs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustNotifs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="msgBody">Initial value of MsgBody.</param>
        /// <param name="dtScheduled">Initial value of DtScheduled.</param>
        /// <param name="occurence">Initial value of Occurence.</param>
        /// <param name="isEmail">Initial value of IsEmail.</param>
        /// <param name="isSms">Initial value of IsSms.</param>
        /// <param name="status">Initial value of Status.</param>
        public static CustNotifs CreateCustNotifs(int id, string msgBody, global::System.DateTime dtScheduled, string occurence, bool isEmail, bool isSms, string status)
        {
            CustNotifs custNotifs = new CustNotifs();
            custNotifs.Id = id;
            custNotifs.MsgBody = msgBody;
            custNotifs.DtScheduled = dtScheduled;
            custNotifs.Occurence = occurence;
            custNotifs.IsEmail = isEmail;
            custNotifs.IsSms = isSms;
            custNotifs.Status = status;
            return custNotifs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for MsgTitle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MsgTitle
        {
            get
            {
                string value = _MsgTitle;
                OnGetMsgTitle(ref value);
                return value;
            }
            set
            {
                if (_MsgTitle != value)
                {
                  OnMsgTitleChanging(ref value);
                  ReportPropertyChanging("MsgTitle");
                  _MsgTitle = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MsgTitle");
                  OnMsgTitleChanged();
              }
            }
        }
        private string _MsgTitle;
        partial void OnGetMsgTitle(ref string value);
        partial void OnMsgTitleChanging(ref string value);
        partial void OnMsgTitleChanged();
    
        /// <summary>
        /// There are no comments for MsgBody in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string MsgBody
        {
            get
            {
                string value = _MsgBody;
                OnGetMsgBody(ref value);
                return value;
            }
            set
            {
                if (_MsgBody != value)
                {
                  OnMsgBodyChanging(ref value);
                  ReportPropertyChanging("MsgBody");
                  _MsgBody = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MsgBody");
                  OnMsgBodyChanged();
              }
            }
        }
        private string _MsgBody;
        partial void OnGetMsgBody(ref string value);
        partial void OnMsgBodyChanging(ref string value);
        partial void OnMsgBodyChanged();
    
        /// <summary>
        /// There are no comments for DtEncoded in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtEncoded
        {
            get
            {
                global::System.DateTime? value = _DtEncoded;
                OnGetDtEncoded(ref value);
                return value;
            }
            set
            {
                if (_DtEncoded != value)
                {
                  OnDtEncodedChanging(ref value);
                  ReportPropertyChanging("DtEncoded");
                  _DtEncoded = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEncoded");
                  OnDtEncodedChanged();
              }
            }
        }
        private global::System.DateTime? _DtEncoded;
        partial void OnGetDtEncoded(ref global::System.DateTime? value);
        partial void OnDtEncodedChanging(ref global::System.DateTime? value);
        partial void OnDtEncodedChanged();
    
        /// <summary>
        /// There are no comments for DtScheduled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtScheduled
        {
            get
            {
                global::System.DateTime value = _DtScheduled;
                OnGetDtScheduled(ref value);
                return value;
            }
            set
            {
                if (_DtScheduled != value)
                {
                  OnDtScheduledChanging(ref value);
                  ReportPropertyChanging("DtScheduled");
                  _DtScheduled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtScheduled");
                  OnDtScheduledChanged();
              }
            }
        }
        private global::System.DateTime _DtScheduled;
        partial void OnGetDtScheduled(ref global::System.DateTime value);
        partial void OnDtScheduledChanging(ref global::System.DateTime value);
        partial void OnDtScheduledChanged();
    
        /// <summary>
        /// There are no comments for Occurence in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Occurence
        {
            get
            {
                string value = _Occurence;
                OnGetOccurence(ref value);
                return value;
            }
            set
            {
                if (_Occurence != value)
                {
                  OnOccurenceChanging(ref value);
                  ReportPropertyChanging("Occurence");
                  _Occurence = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Occurence");
                  OnOccurenceChanged();
              }
            }
        }
        private string _Occurence;
        partial void OnGetOccurence(ref string value);
        partial void OnOccurenceChanging(ref string value);
        partial void OnOccurenceChanged();
    
        /// <summary>
        /// There are no comments for IsEmail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool IsEmail
        {
            get
            {
                bool value = _IsEmail;
                OnGetIsEmail(ref value);
                return value;
            }
            set
            {
                if (_IsEmail != value)
                {
                  OnIsEmailChanging(ref value);
                  ReportPropertyChanging("IsEmail");
                  _IsEmail = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsEmail");
                  OnIsEmailChanged();
              }
            }
        }
        private bool _IsEmail;
        partial void OnGetIsEmail(ref bool value);
        partial void OnIsEmailChanging(ref bool value);
        partial void OnIsEmailChanged();
    
        /// <summary>
        /// There are no comments for IsSms in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool IsSms
        {
            get
            {
                bool value = _IsSms;
                OnGetIsSms(ref value);
                return value;
            }
            set
            {
                if (_IsSms != value)
                {
                  OnIsSmsChanging(ref value);
                  ReportPropertyChanging("IsSms");
                  _IsSms = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsSms");
                  OnIsSmsChanged();
              }
            }
        }
        private bool _IsSms;
        partial void OnGetIsSms(ref bool value);
        partial void OnIsSmsChanging(ref bool value);
        partial void OnIsSmsChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustNotifActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustNotifCustNotifActivity", "CustNotifActivities")]
        public virtual EntityCollection<CustNotifActivities> CustNotifActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustNotifActivities>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustNotifActivities>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifActivity", "CustNotifActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustNotifRecipients in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustNotifCustNotifRecipient", "CustNotifRecipients")]
        public virtual EntityCollection<CustNotifRecipients> CustNotifRecipients
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustNotifRecipients>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustNotifRecipients>("DB_A0A0AE_ClientModel.FK_CustNotifCustNotifRecipient", "CustNotifRecipients", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Customers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Customers CreateCustomers(int id, string name)
        {
            Customers customers = new Customers();
            customers.Id = id;
            customers.Name = name;
            return customers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Contact1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact1
        {
            get
            {
                string value = _Contact1;
                OnGetContact1(ref value);
                return value;
            }
            set
            {
                if (_Contact1 != value)
                {
                  OnContact1Changing(ref value);
                  ReportPropertyChanging("Contact1");
                  _Contact1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact1");
                  OnContact1Changed();
              }
            }
        }
        private string _Contact1;
        partial void OnGetContact1(ref string value);
        partial void OnContact1Changing(ref string value);
        partial void OnContact1Changed();
    
        /// <summary>
        /// There are no comments for Contact2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact2
        {
            get
            {
                string value = _Contact2;
                OnGetContact2(ref value);
                return value;
            }
            set
            {
                if (_Contact2 != value)
                {
                  OnContact2Changing(ref value);
                  ReportPropertyChanging("Contact2");
                  _Contact2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact2");
                  OnContact2Changed();
              }
            }
        }
        private string _Contact2;
        partial void OnGetContact2(ref string value);
        partial void OnContact2Changing(ref string value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustCat", "CustCats")]
        public virtual EntityCollection<CustCats> CustCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustCats>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "CustCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustCats>("DB_A0A0AE_ClientModel.FK_CustomerCustCat", "CustCats", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustEntity", "CustEntities")]
        public virtual EntityCollection<CustEntities> CustEntities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntities>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "CustEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntities>("DB_A0A0AE_ClientModel.FK_CustomerCustEntity", "CustEntities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustFiles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustFiles", "CustFiles")]
        public virtual EntityCollection<CustFiles> CustFiles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustFiles>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "CustFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustFiles>("DB_A0A0AE_ClientModel.FK_CustomerCustFiles", "CustFiles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustNotifRecipients in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustNotifRecipient", "CustNotifRecipients")]
        public virtual EntityCollection<CustNotifRecipients> CustNotifRecipients
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustNotifRecipients>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "CustNotifRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustNotifRecipients>("DB_A0A0AE_ClientModel.FK_CustomerCustNotifRecipient", "CustNotifRecipients", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustSalesCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustSalesCategory", "CustSalesCategories")]
        public virtual EntityCollection<CustSalesCategories> CustSalesCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustSalesCategories>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "CustSalesCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustSalesCategories>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "CustSalesCategories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustSocialAccs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustSocialAcc", "CustSocialAccs")]
        public virtual EntityCollection<CustSocialAccs> CustSocialAccs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustSocialAccs>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "CustSocialAccs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustSocialAccs>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "CustSocialAccs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerJobMain", "JobMains")]
        public virtual EntityCollection<JobMains> JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "JobMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "JobMains", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PortalCustomers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerPortalCustomer", "PortalCustomers")]
        public virtual EntityCollection<PortalCustomers> PortalCustomers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<PortalCustomers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "PortalCustomers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<PortalCustomers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "PortalCustomers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerSalesLead", "SalesLeads")]
        public virtual EntityCollection<SalesLeads> SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeads>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "SalesLeads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeads>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "SalesLeads", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Vehicles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerVehicle", "Vehicles")]
        public virtual EntityCollection<Vehicles> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Vehicles>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Vehicles>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Vehicles", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustSalesCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustSalesCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustSalesCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustSalesCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadCatCodeId">Initial value of SalesLeadCatCodeId.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        public static CustSalesCategories CreateCustSalesCategories(int id, int salesLeadCatCodeId, int customerId)
        {
            CustSalesCategories custSalesCategories = new CustSalesCategories();
            custSalesCategories.Id = id;
            custSalesCategories.SalesLeadCatCodeId = salesLeadCatCodeId;
            custSalesCategories.CustomerId = customerId;
            return custSalesCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadCatCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadCatCodeId
        {
            get
            {
                int value = _SalesLeadCatCodeId;
                OnGetSalesLeadCatCodeId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadCatCodeId != value)
                {
                  OnSalesLeadCatCodeIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadCatCodeId");
                  _SalesLeadCatCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadCatCodeId");
                  OnSalesLeadCatCodeIdChanged();
              }
            }
        }
        private int _SalesLeadCatCodeId;
        partial void OnGetSalesLeadCatCodeId(ref int value);
        partial void OnSalesLeadCatCodeIdChanging(ref int value);
        partial void OnSalesLeadCatCodeIdChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeadCatCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes")]
        public virtual SalesLeadCatCodes SalesLeadCatCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadCatCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeadCatCodes> SalesLeadCatCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "SalesLeadCatCodes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustSalesCategory", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSalesCategory", "Customers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.CustSocialAccs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="CustSocialAccs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustSocialAccs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustSocialAccs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="facebook">Initial value of Facebook.</param>
        /// <param name="viber">Initial value of Viber.</param>
        /// <param name="skype">Initial value of Skype.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        public static CustSocialAccs CreateCustSocialAccs(int id, string facebook, string viber, string skype, int customerId)
        {
            CustSocialAccs custSocialAccs = new CustSocialAccs();
            custSocialAccs.Id = id;
            custSocialAccs.Facebook = facebook;
            custSocialAccs.Viber = viber;
            custSocialAccs.Skype = skype;
            custSocialAccs.CustomerId = customerId;
            return custSocialAccs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Facebook in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Facebook
        {
            get
            {
                string value = _Facebook;
                OnGetFacebook(ref value);
                return value;
            }
            set
            {
                if (_Facebook != value)
                {
                  OnFacebookChanging(ref value);
                  ReportPropertyChanging("Facebook");
                  _Facebook = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Facebook");
                  OnFacebookChanged();
              }
            }
        }
        private string _Facebook;
        partial void OnGetFacebook(ref string value);
        partial void OnFacebookChanging(ref string value);
        partial void OnFacebookChanged();
    
        /// <summary>
        /// There are no comments for Viber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Viber
        {
            get
            {
                string value = _Viber;
                OnGetViber(ref value);
                return value;
            }
            set
            {
                if (_Viber != value)
                {
                  OnViberChanging(ref value);
                  ReportPropertyChanging("Viber");
                  _Viber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Viber");
                  OnViberChanged();
              }
            }
        }
        private string _Viber;
        partial void OnGetViber(ref string value);
        partial void OnViberChanging(ref string value);
        partial void OnViberChanged();
    
        /// <summary>
        /// There are no comments for Skype in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Skype
        {
            get
            {
                string value = _Skype;
                OnGetSkype(ref value);
                return value;
            }
            set
            {
                if (_Skype != value)
                {
                  OnSkypeChanging(ref value);
                  ReportPropertyChanging("Skype");
                  _Skype = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Skype");
                  OnSkypeChanged();
              }
            }
        }
        private string _Skype;
        partial void OnGetSkype(ref string value);
        partial void OnSkypeChanging(ref string value);
        partial void OnSkypeChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerCustSocialAcc", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerCustSocialAcc", "Customers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.DataGroupAssigns in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="DataGroupAssigns")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataGroupAssigns : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new DataGroupAssigns object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="user">Initial value of User.</param>
        /// <param name="dataGroupId">Initial value of DataGroupId.</param>
        public static DataGroupAssigns CreateDataGroupAssigns(int id, string user, int dataGroupId)
        {
            DataGroupAssigns dataGroupAssigns = new DataGroupAssigns();
            dataGroupAssigns.Id = id;
            dataGroupAssigns.User = user;
            dataGroupAssigns.DataGroupId = dataGroupId;
            return dataGroupAssigns;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string User
        {
            get
            {
                string value = _User;
                OnGetUser(ref value);
                return value;
            }
            set
            {
                if (_User != value)
                {
                  OnUserChanging(ref value);
                  ReportPropertyChanging("User");
                  _User = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("User");
                  OnUserChanged();
              }
            }
        }
        private string _User;
        partial void OnGetUser(ref string value);
        partial void OnUserChanging(ref string value);
        partial void OnUserChanged();
    
        /// <summary>
        /// There are no comments for DataGroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DataGroupId
        {
            get
            {
                int value = _DataGroupId;
                OnGetDataGroupId(ref value);
                return value;
            }
            set
            {
                if (_DataGroupId != value)
                {
                  OnDataGroupIdChanging(ref value);
                  ReportPropertyChanging("DataGroupId");
                  _DataGroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DataGroupId");
                  OnDataGroupIdChanged();
              }
            }
        }
        private int _DataGroupId;
        partial void OnGetDataGroupId(ref int value);
        partial void OnDataGroupIdChanging(ref int value);
        partial void OnDataGroupIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.DataGroups in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="DataGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataGroups : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new DataGroups object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static DataGroups CreateDataGroups(int id, string name)
        {
            DataGroups dataGroups = new DataGroups();
            dataGroups.Id = id;
            dataGroups.Name = name;
            return dataGroups;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Destinations in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Destinations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Destinations : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Destinations object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="cityId">Initial value of CityId.</param>
        public static Destinations CreateDestinations(int id, string description, int cityId)
        {
            Destinations destinations = new Destinations();
            destinations.Id = id;
            destinations.Description = description;
            destinations.CityId = cityId;
            return destinations;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for PubRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? PubRate
        {
            get
            {
                decimal? value = _PubRate;
                OnGetPubRate(ref value);
                return value;
            }
            set
            {
                if (_PubRate != value)
                {
                  OnPubRateChanging(ref value);
                  ReportPropertyChanging("PubRate");
                  _PubRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PubRate");
                  OnPubRateChanged();
              }
            }
        }
        private decimal? _PubRate;
        partial void OnGetPubRate(ref decimal? value);
        partial void OnPubRateChanging(ref decimal? value);
        partial void OnPubRateChanged();
    
        /// <summary>
        /// There are no comments for ConRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? ConRate
        {
            get
            {
                decimal? value = _ConRate;
                OnGetConRate(ref value);
                return value;
            }
            set
            {
                if (_ConRate != value)
                {
                  OnConRateChanging(ref value);
                  ReportPropertyChanging("ConRate");
                  _ConRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConRate");
                  OnConRateChanged();
              }
            }
        }
        private decimal? _ConRate;
        partial void OnGetConRate(ref decimal? value);
        partial void OnConRateChanging(ref decimal? value);
        partial void OnConRateChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for CityId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CityId
        {
            get
            {
                int value = _CityId;
                OnGetCityId(ref value);
                return value;
            }
            set
            {
                if (_CityId != value)
                {
                  OnCityIdChanging(ref value);
                  ReportPropertyChanging("CityId");
                  _CityId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CityId");
                  OnCityIdChanged();
              }
            }
        }
        private int _CityId;
        partial void OnGetCityId(ref int value);
        partial void OnCityIdChanging(ref int value);
        partial void OnCityIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CityDestination", "Cities")]
        public virtual Cities Cities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityDestination", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityDestination", "Cities").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityDestination", "Cities");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityDestination", "Cities", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CityDestination", "Cities").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobItineraries in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_DestinationJobItinerary", "JobItineraries")]
        public virtual EntityCollection<JobItineraries> JobItineraries
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobItineraries>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "JobItineraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobItineraries>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "JobItineraries", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.DriverInstructions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="DriverInstructions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DriverInstructions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new DriverInstructions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        public static DriverInstructions CreateDriverInstructions(int id, string description, int orderNo)
        {
            DriverInstructions driverInstructions = new DriverInstructions();
            driverInstructions.Id = id;
            driverInstructions.Description = description;
            driverInstructions.OrderNo = orderNo;
            return driverInstructions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for PickupInstructions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_PickupInstructionsDriverInstructions", "PickupInstructions")]
        public virtual EntityCollection<PickupInstructions> PickupInstructions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<PickupInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "PickupInstructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<PickupInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "PickupInstructions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EmailBlasterLogs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EmailBlasterLogs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailBlasterLogs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EmailBlasterLogs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="dateTime">Initial value of DateTime.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="custId">Initial value of CustId.</param>
        public static EmailBlasterLogs CreateEmailBlasterLogs(int id, string email, global::System.DateTime dateTime, string status, int custId)
        {
            EmailBlasterLogs emailBlasterLogs = new EmailBlasterLogs();
            emailBlasterLogs.Id = id;
            emailBlasterLogs.Email = email;
            emailBlasterLogs.DateTime = dateTime;
            emailBlasterLogs.Status = status;
            emailBlasterLogs.CustId = custId;
            return emailBlasterLogs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for DateTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DateTime
        {
            get
            {
                global::System.DateTime value = _DateTime;
                OnGetDateTime(ref value);
                return value;
            }
            set
            {
                if (_DateTime != value)
                {
                  OnDateTimeChanging(ref value);
                  ReportPropertyChanging("DateTime");
                  _DateTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateTime");
                  OnDateTimeChanged();
              }
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnGetDateTime(ref global::System.DateTime value);
        partial void OnDateTimeChanging(ref global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for CustId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustId
        {
            get
            {
                int value = _CustId;
                OnGetCustId(ref value);
                return value;
            }
            set
            {
                if (_CustId != value)
                {
                  OnCustIdChanging(ref value);
                  ReportPropertyChanging("CustId");
                  _CustId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustId");
                  OnCustIdChanged();
              }
            }
        }
        private int _CustId;
        partial void OnGetCustId(ref int value);
        partial void OnCustIdChanging(ref int value);
        partial void OnCustIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for BlasterLogs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EmailBlasterLogsBlasterLog", "BlasterLogs")]
        public virtual EntityCollection<BlasterLogs> BlasterLogs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<BlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "BlasterLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<BlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterLogsBlasterLog", "BlasterLogs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EmailBlasterTemplates in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EmailBlasterTemplates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailBlasterTemplates : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EmailBlasterTemplates object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="emailCategory">Initial value of EmailCategory.</param>
        /// <param name="recipientsCategory">Initial value of RecipientsCategory.</param>
        /// <param name="emailTitle">Initial value of EmailTitle.</param>
        /// <param name="emailBody">Initial value of EmailBody.</param>
        /// <param name="company">Initial value of Company.</param>
        public static EmailBlasterTemplates CreateEmailBlasterTemplates(int id, string emailCategory, string recipientsCategory, string emailTitle, string emailBody, string company)
        {
            EmailBlasterTemplates emailBlasterTemplates = new EmailBlasterTemplates();
            emailBlasterTemplates.Id = id;
            emailBlasterTemplates.EmailCategory = emailCategory;
            emailBlasterTemplates.RecipientsCategory = recipientsCategory;
            emailBlasterTemplates.EmailTitle = emailTitle;
            emailBlasterTemplates.EmailBody = emailBody;
            emailBlasterTemplates.Company = company;
            return emailBlasterTemplates;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for EmailCategory in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EmailCategory
        {
            get
            {
                string value = _EmailCategory;
                OnGetEmailCategory(ref value);
                return value;
            }
            set
            {
                if (_EmailCategory != value)
                {
                  OnEmailCategoryChanging(ref value);
                  ReportPropertyChanging("EmailCategory");
                  _EmailCategory = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmailCategory");
                  OnEmailCategoryChanged();
              }
            }
        }
        private string _EmailCategory;
        partial void OnGetEmailCategory(ref string value);
        partial void OnEmailCategoryChanging(ref string value);
        partial void OnEmailCategoryChanged();
    
        /// <summary>
        /// There are no comments for RecipientsCategory in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RecipientsCategory
        {
            get
            {
                string value = _RecipientsCategory;
                OnGetRecipientsCategory(ref value);
                return value;
            }
            set
            {
                if (_RecipientsCategory != value)
                {
                  OnRecipientsCategoryChanging(ref value);
                  ReportPropertyChanging("RecipientsCategory");
                  _RecipientsCategory = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RecipientsCategory");
                  OnRecipientsCategoryChanged();
              }
            }
        }
        private string _RecipientsCategory;
        partial void OnGetRecipientsCategory(ref string value);
        partial void OnRecipientsCategoryChanging(ref string value);
        partial void OnRecipientsCategoryChanged();
    
        /// <summary>
        /// There are no comments for EmailTitle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EmailTitle
        {
            get
            {
                string value = _EmailTitle;
                OnGetEmailTitle(ref value);
                return value;
            }
            set
            {
                if (_EmailTitle != value)
                {
                  OnEmailTitleChanging(ref value);
                  ReportPropertyChanging("EmailTitle");
                  _EmailTitle = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmailTitle");
                  OnEmailTitleChanged();
              }
            }
        }
        private string _EmailTitle;
        partial void OnGetEmailTitle(ref string value);
        partial void OnEmailTitleChanging(ref string value);
        partial void OnEmailTitleChanged();
    
        /// <summary>
        /// There are no comments for EmailBody in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EmailBody
        {
            get
            {
                string value = _EmailBody;
                OnGetEmailBody(ref value);
                return value;
            }
            set
            {
                if (_EmailBody != value)
                {
                  OnEmailBodyChanging(ref value);
                  ReportPropertyChanging("EmailBody");
                  _EmailBody = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmailBody");
                  OnEmailBodyChanged();
              }
            }
        }
        private string _EmailBody;
        partial void OnGetEmailBody(ref string value);
        partial void OnEmailBodyChanging(ref string value);
        partial void OnEmailBodyChanged();
    
        /// <summary>
        /// There are no comments for ContentPicture in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ContentPicture
        {
            get
            {
                string value = _ContentPicture;
                OnGetContentPicture(ref value);
                return value;
            }
            set
            {
                if (_ContentPicture != value)
                {
                  OnContentPictureChanging(ref value);
                  ReportPropertyChanging("ContentPicture");
                  _ContentPicture = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ContentPicture");
                  OnContentPictureChanged();
              }
            }
        }
        private string _ContentPicture;
        partial void OnGetContentPicture(ref string value);
        partial void OnContentPictureChanging(ref string value);
        partial void OnContentPictureChanged();
    
        /// <summary>
        /// There are no comments for AttachmentLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AttachmentLink
        {
            get
            {
                string value = _AttachmentLink;
                OnGetAttachmentLink(ref value);
                return value;
            }
            set
            {
                if (_AttachmentLink != value)
                {
                  OnAttachmentLinkChanging(ref value);
                  ReportPropertyChanging("AttachmentLink");
                  _AttachmentLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AttachmentLink");
                  OnAttachmentLinkChanged();
              }
            }
        }
        private string _AttachmentLink;
        partial void OnGetAttachmentLink(ref string value);
        partial void OnAttachmentLinkChanging(ref string value);
        partial void OnAttachmentLinkChanged();
    
        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Company
        {
            get
            {
                string value = _Company;
                OnGetCompany(ref value);
                return value;
            }
            set
            {
                if (_Company != value)
                {
                  OnCompanyChanging(ref value);
                  ReportPropertyChanging("Company");
                  _Company = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Company");
                  OnCompanyChanged();
              }
            }
        }
        private string _Company;
        partial void OnGetCompany(ref string value);
        partial void OnCompanyChanging(ref string value);
        partial void OnCompanyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for BlasterLogs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EmailBlasterTemplateBlasterLog", "BlasterLogs")]
        public virtual EntityCollection<BlasterLogs> BlasterLogs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<BlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "BlasterLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<BlasterLogs>("DB_A0A0AE_ClientModel.FK_EmailBlasterTemplateBlasterLog", "BlasterLogs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EntAddresses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EntAddresses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntAddresses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EntAddresses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="entCompanyId">Initial value of EntCompanyId.</param>
        /// <param name="sysSetupTypeId">Initial value of SysSetupTypeId.</param>
        /// <param name="add1">Initial value of Add1.</param>
        /// <param name="add2">Initial value of Add2.</param>
        /// <param name="add3">Initial value of Add3.</param>
        /// <param name="add4">Initial value of Add4.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="telno1">Initial value of Telno1.</param>
        /// <param name="telno2">Initial value of Telno2.</param>
        public static EntAddresses CreateEntAddresses(int id, int entCompanyId, int sysSetupTypeId, string add1, string add2, string add3, string add4, string city, string remarks, string telno1, string telno2)
        {
            EntAddresses entAddresses = new EntAddresses();
            entAddresses.Id = id;
            entAddresses.EntCompanyId = entCompanyId;
            entAddresses.SysSetupTypeId = sysSetupTypeId;
            entAddresses.Add1 = add1;
            entAddresses.Add2 = add2;
            entAddresses.Add3 = add3;
            entAddresses.Add4 = add4;
            entAddresses.City = city;
            entAddresses.Remarks = remarks;
            entAddresses.Telno1 = telno1;
            entAddresses.Telno2 = telno2;
            return entAddresses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for EntCompanyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntCompanyId
        {
            get
            {
                int value = _EntCompanyId;
                OnGetEntCompanyId(ref value);
                return value;
            }
            set
            {
                if (_EntCompanyId != value)
                {
                  OnEntCompanyIdChanging(ref value);
                  ReportPropertyChanging("EntCompanyId");
                  _EntCompanyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntCompanyId");
                  OnEntCompanyIdChanged();
              }
            }
        }
        private int _EntCompanyId;
        partial void OnGetEntCompanyId(ref int value);
        partial void OnEntCompanyIdChanging(ref int value);
        partial void OnEntCompanyIdChanged();
    
        /// <summary>
        /// There are no comments for SysSetupTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysSetupTypeId
        {
            get
            {
                int value = _SysSetupTypeId;
                OnGetSysSetupTypeId(ref value);
                return value;
            }
            set
            {
                if (_SysSetupTypeId != value)
                {
                  OnSysSetupTypeIdChanging(ref value);
                  ReportPropertyChanging("SysSetupTypeId");
                  _SysSetupTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysSetupTypeId");
                  OnSysSetupTypeIdChanged();
              }
            }
        }
        private int _SysSetupTypeId;
        partial void OnGetSysSetupTypeId(ref int value);
        partial void OnSysSetupTypeIdChanging(ref int value);
        partial void OnSysSetupTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Add1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Add1
        {
            get
            {
                string value = _Add1;
                OnGetAdd1(ref value);
                return value;
            }
            set
            {
                if (_Add1 != value)
                {
                  OnAdd1Changing(ref value);
                  ReportPropertyChanging("Add1");
                  _Add1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Add1");
                  OnAdd1Changed();
              }
            }
        }
        private string _Add1;
        partial void OnGetAdd1(ref string value);
        partial void OnAdd1Changing(ref string value);
        partial void OnAdd1Changed();
    
        /// <summary>
        /// There are no comments for Add2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Add2
        {
            get
            {
                string value = _Add2;
                OnGetAdd2(ref value);
                return value;
            }
            set
            {
                if (_Add2 != value)
                {
                  OnAdd2Changing(ref value);
                  ReportPropertyChanging("Add2");
                  _Add2 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Add2");
                  OnAdd2Changed();
              }
            }
        }
        private string _Add2;
        partial void OnGetAdd2(ref string value);
        partial void OnAdd2Changing(ref string value);
        partial void OnAdd2Changed();
    
        /// <summary>
        /// There are no comments for Add3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Add3
        {
            get
            {
                string value = _Add3;
                OnGetAdd3(ref value);
                return value;
            }
            set
            {
                if (_Add3 != value)
                {
                  OnAdd3Changing(ref value);
                  ReportPropertyChanging("Add3");
                  _Add3 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Add3");
                  OnAdd3Changed();
              }
            }
        }
        private string _Add3;
        partial void OnGetAdd3(ref string value);
        partial void OnAdd3Changing(ref string value);
        partial void OnAdd3Changed();
    
        /// <summary>
        /// There are no comments for Add4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Add4
        {
            get
            {
                string value = _Add4;
                OnGetAdd4(ref value);
                return value;
            }
            set
            {
                if (_Add4 != value)
                {
                  OnAdd4Changing(ref value);
                  ReportPropertyChanging("Add4");
                  _Add4 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Add4");
                  OnAdd4Changed();
              }
            }
        }
        private string _Add4;
        partial void OnGetAdd4(ref string value);
        partial void OnAdd4Changing(ref string value);
        partial void OnAdd4Changed();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Telno1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Telno1
        {
            get
            {
                string value = _Telno1;
                OnGetTelno1(ref value);
                return value;
            }
            set
            {
                if (_Telno1 != value)
                {
                  OnTelno1Changing(ref value);
                  ReportPropertyChanging("Telno1");
                  _Telno1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Telno1");
                  OnTelno1Changed();
              }
            }
        }
        private string _Telno1;
        partial void OnGetTelno1(ref string value);
        partial void OnTelno1Changing(ref string value);
        partial void OnTelno1Changed();
    
        /// <summary>
        /// There are no comments for Telno2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Telno2
        {
            get
            {
                string value = _Telno2;
                OnGetTelno2(ref value);
                return value;
            }
            set
            {
                if (_Telno2 != value)
                {
                  OnTelno2Changing(ref value);
                  ReportPropertyChanging("Telno2");
                  _Telno2 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Telno2");
                  OnTelno2Changed();
              }
            }
        }
        private string _Telno2;
        partial void OnGetTelno2(ref string value);
        partial void OnTelno2Changing(ref string value);
        partial void OnTelno2Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntAddress", "EntBusinesses")]
        public virtual EntBusinesses EntBusinesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntBusinesses").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntBusinesses").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntBusinesses> EntBusinessesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntBusinesses");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntBusinesses", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntBusinesses").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntAddress", "SysSetupTypes")]
        public virtual SysSetupTypes SysSetupTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "SysSetupTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "SysSetupTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysSetupTypes> SysSetupTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "SysSetupTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "SysSetupTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "SysSetupTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EntBusinesses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EntBusinesses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntBusinesses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EntBusinesses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="shortName">Initial value of ShortName.</param>
        /// <param name="bussRegNo">Initial value of BussRegNo.</param>
        /// <param name="user">Initial value of User.</param>
        public static EntBusinesses CreateEntBusinesses(int id, string name, string shortName, string bussRegNo, string user)
        {
            EntBusinesses entBusinesses = new EntBusinesses();
            entBusinesses.Id = id;
            entBusinesses.Name = name;
            entBusinesses.ShortName = shortName;
            entBusinesses.BussRegNo = bussRegNo;
            entBusinesses.User = user;
            return entBusinesses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for ShortName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ShortName
        {
            get
            {
                string value = _ShortName;
                OnGetShortName(ref value);
                return value;
            }
            set
            {
                if (_ShortName != value)
                {
                  OnShortNameChanging(ref value);
                  ReportPropertyChanging("ShortName");
                  _ShortName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ShortName");
                  OnShortNameChanged();
              }
            }
        }
        private string _ShortName;
        partial void OnGetShortName(ref string value);
        partial void OnShortNameChanging(ref string value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// There are no comments for BussRegNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BussRegNo
        {
            get
            {
                string value = _BussRegNo;
                OnGetBussRegNo(ref value);
                return value;
            }
            set
            {
                if (_BussRegNo != value)
                {
                  OnBussRegNoChanging(ref value);
                  ReportPropertyChanging("BussRegNo");
                  _BussRegNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BussRegNo");
                  OnBussRegNoChanged();
              }
            }
        }
        private string _BussRegNo;
        partial void OnGetBussRegNo(ref string value);
        partial void OnBussRegNoChanging(ref string value);
        partial void OnBussRegNoChanged();
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string User
        {
            get
            {
                string value = _User;
                OnGetUser(ref value);
                return value;
            }
            set
            {
                if (_User != value)
                {
                  OnUserChanging(ref value);
                  ReportPropertyChanging("User");
                  _User = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("User");
                  OnUserChanged();
              }
            }
        }
        private string _User;
        partial void OnGetUser(ref string value);
        partial void OnUserChanging(ref string value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntAddresses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntAddress", "EntAddresses")]
        public virtual EntityCollection<EntAddresses> EntAddresses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntAddresses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntAddresses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntAddress", "EntAddresses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntContacts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntContact", "EntContacts")]
        public virtual EntityCollection<EntContacts> EntContacts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntContacts>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntContacts>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntContacts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntServices", "EntServices")]
        public virtual EntityCollection<EntServices> EntServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntServices>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntServices>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntServices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntSettings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntBusinessEntSetting", "EntSettings")]
        public virtual EntityCollection<EntSettings> EntSettings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntSettings>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntSettings>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntSettings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntSupportFiles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntSupportFile", "EntSupportFiles")]
        public virtual EntityCollection<EntSupportFiles> EntSupportFiles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntSupportFiles>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntSupportFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntSupportFiles>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntSupportFiles", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EntContacts in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EntContacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntContacts : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EntContacts object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="entCompanyId">Initial value of EntCompanyId.</param>
        /// <param name="sysSetupTypeId">Initial value of SysSetupTypeId.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="position">Initial value of Position.</param>
        /// <param name="telNo1">Initial value of TelNo1.</param>
        /// <param name="telNo2">Initial value of TelNo2.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static EntContacts CreateEntContacts(int id, int entCompanyId, int sysSetupTypeId, string name, string position, string telNo1, string telNo2, string email, string remarks)
        {
            EntContacts entContacts = new EntContacts();
            entContacts.Id = id;
            entContacts.EntCompanyId = entCompanyId;
            entContacts.SysSetupTypeId = sysSetupTypeId;
            entContacts.Name = name;
            entContacts.Position = position;
            entContacts.TelNo1 = telNo1;
            entContacts.TelNo2 = telNo2;
            entContacts.Email = email;
            entContacts.Remarks = remarks;
            return entContacts;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for EntCompanyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntCompanyId
        {
            get
            {
                int value = _EntCompanyId;
                OnGetEntCompanyId(ref value);
                return value;
            }
            set
            {
                if (_EntCompanyId != value)
                {
                  OnEntCompanyIdChanging(ref value);
                  ReportPropertyChanging("EntCompanyId");
                  _EntCompanyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntCompanyId");
                  OnEntCompanyIdChanged();
              }
            }
        }
        private int _EntCompanyId;
        partial void OnGetEntCompanyId(ref int value);
        partial void OnEntCompanyIdChanging(ref int value);
        partial void OnEntCompanyIdChanged();
    
        /// <summary>
        /// There are no comments for SysSetupTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysSetupTypeId
        {
            get
            {
                int value = _SysSetupTypeId;
                OnGetSysSetupTypeId(ref value);
                return value;
            }
            set
            {
                if (_SysSetupTypeId != value)
                {
                  OnSysSetupTypeIdChanging(ref value);
                  ReportPropertyChanging("SysSetupTypeId");
                  _SysSetupTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysSetupTypeId");
                  OnSysSetupTypeIdChanged();
              }
            }
        }
        private int _SysSetupTypeId;
        partial void OnGetSysSetupTypeId(ref int value);
        partial void OnSysSetupTypeIdChanging(ref int value);
        partial void OnSysSetupTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Position in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Position
        {
            get
            {
                string value = _Position;
                OnGetPosition(ref value);
                return value;
            }
            set
            {
                if (_Position != value)
                {
                  OnPositionChanging(ref value);
                  ReportPropertyChanging("Position");
                  _Position = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Position");
                  OnPositionChanged();
              }
            }
        }
        private string _Position;
        partial void OnGetPosition(ref string value);
        partial void OnPositionChanging(ref string value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// There are no comments for TelNo1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TelNo1
        {
            get
            {
                string value = _TelNo1;
                OnGetTelNo1(ref value);
                return value;
            }
            set
            {
                if (_TelNo1 != value)
                {
                  OnTelNo1Changing(ref value);
                  ReportPropertyChanging("TelNo1");
                  _TelNo1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TelNo1");
                  OnTelNo1Changed();
              }
            }
        }
        private string _TelNo1;
        partial void OnGetTelNo1(ref string value);
        partial void OnTelNo1Changing(ref string value);
        partial void OnTelNo1Changed();
    
        /// <summary>
        /// There are no comments for TelNo2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TelNo2
        {
            get
            {
                string value = _TelNo2;
                OnGetTelNo2(ref value);
                return value;
            }
            set
            {
                if (_TelNo2 != value)
                {
                  OnTelNo2Changing(ref value);
                  ReportPropertyChanging("TelNo2");
                  _TelNo2 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TelNo2");
                  OnTelNo2Changed();
              }
            }
        }
        private string _TelNo2;
        partial void OnGetTelNo2(ref string value);
        partial void OnTelNo2Changing(ref string value);
        partial void OnTelNo2Changed();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntContact", "EntBusinesses")]
        public virtual EntBusinesses EntBusinesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntBusinesses").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntBusinesses").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntBusinesses> EntBusinessesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntBusinesses");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntBusinesses", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntContact", "EntBusinesses").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntContact", "SysSetupTypes")]
        public virtual SysSetupTypes SysSetupTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "SysSetupTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "SysSetupTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysSetupTypes> SysSetupTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "SysSetupTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "SysSetupTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "SysSetupTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EntServices in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EntServices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntServices : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EntServices object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysServiceId">Initial value of SysServiceId.</param>
        /// <param name="entCompanyId">Initial value of EntCompanyId.</param>
        /// <param name="expiry">Initial value of Expiry.</param>
        public static EntServices CreateEntServices(int id, int sysServiceId, int entCompanyId, global::System.DateTime expiry)
        {
            EntServices entServices = new EntServices();
            entServices.Id = id;
            entServices.SysServiceId = sysServiceId;
            entServices.EntCompanyId = entCompanyId;
            entServices.Expiry = expiry;
            return entServices;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysServiceId
        {
            get
            {
                int value = _SysServiceId;
                OnGetSysServiceId(ref value);
                return value;
            }
            set
            {
                if (_SysServiceId != value)
                {
                  OnSysServiceIdChanging(ref value);
                  ReportPropertyChanging("SysServiceId");
                  _SysServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysServiceId");
                  OnSysServiceIdChanged();
              }
            }
        }
        private int _SysServiceId;
        partial void OnGetSysServiceId(ref int value);
        partial void OnSysServiceIdChanging(ref int value);
        partial void OnSysServiceIdChanged();
    
        /// <summary>
        /// There are no comments for EntCompanyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntCompanyId
        {
            get
            {
                int value = _EntCompanyId;
                OnGetEntCompanyId(ref value);
                return value;
            }
            set
            {
                if (_EntCompanyId != value)
                {
                  OnEntCompanyIdChanging(ref value);
                  ReportPropertyChanging("EntCompanyId");
                  _EntCompanyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntCompanyId");
                  OnEntCompanyIdChanged();
              }
            }
        }
        private int _EntCompanyId;
        partial void OnGetEntCompanyId(ref int value);
        partial void OnEntCompanyIdChanging(ref int value);
        partial void OnEntCompanyIdChanged();
    
        /// <summary>
        /// There are no comments for Expiry in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Expiry
        {
            get
            {
                global::System.DateTime value = _Expiry;
                OnGetExpiry(ref value);
                return value;
            }
            set
            {
                if (_Expiry != value)
                {
                  OnExpiryChanging(ref value);
                  ReportPropertyChanging("Expiry");
                  _Expiry = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Expiry");
                  OnExpiryChanged();
              }
            }
        }
        private global::System.DateTime _Expiry;
        partial void OnGetExpiry(ref global::System.DateTime value);
        partial void OnExpiryChanging(ref global::System.DateTime value);
        partial void OnExpiryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SysServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysServiceEntServices", "SysServices")]
        public virtual SysServices SysServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "SysServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "SysServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysServices> SysServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "SysServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "SysServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "SysServices").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntServices", "EntBusinesses")]
        public virtual EntBusinesses EntBusinesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntBusinesses").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntBusinesses").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntBusinesses> EntBusinessesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntBusinesses");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntBusinesses", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntServices", "EntBusinesses").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EntSettings in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EntSettings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntSettings : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EntSettings object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysSetupTypeId">Initial value of SysSetupTypeId.</param>
        /// <param name="entBusinessId">Initial value of EntBusinessId.</param>
        /// <param name="value1">Initial value of Value1.</param>
        /// <param name="value2">Initial value of Value2.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static EntSettings CreateEntSettings(int id, int sysSetupTypeId, int entBusinessId, string value1, string value2, string remarks)
        {
            EntSettings entSettings = new EntSettings();
            entSettings.Id = id;
            entSettings.SysSetupTypeId = sysSetupTypeId;
            entSettings.EntBusinessId = entBusinessId;
            entSettings.Value1 = value1;
            entSettings.Value2 = value2;
            entSettings.Remarks = remarks;
            return entSettings;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysSetupTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysSetupTypeId
        {
            get
            {
                int value = _SysSetupTypeId;
                OnGetSysSetupTypeId(ref value);
                return value;
            }
            set
            {
                if (_SysSetupTypeId != value)
                {
                  OnSysSetupTypeIdChanging(ref value);
                  ReportPropertyChanging("SysSetupTypeId");
                  _SysSetupTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysSetupTypeId");
                  OnSysSetupTypeIdChanged();
              }
            }
        }
        private int _SysSetupTypeId;
        partial void OnGetSysSetupTypeId(ref int value);
        partial void OnSysSetupTypeIdChanging(ref int value);
        partial void OnSysSetupTypeIdChanged();
    
        /// <summary>
        /// There are no comments for EntBusinessId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntBusinessId
        {
            get
            {
                int value = _EntBusinessId;
                OnGetEntBusinessId(ref value);
                return value;
            }
            set
            {
                if (_EntBusinessId != value)
                {
                  OnEntBusinessIdChanging(ref value);
                  ReportPropertyChanging("EntBusinessId");
                  _EntBusinessId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntBusinessId");
                  OnEntBusinessIdChanged();
              }
            }
        }
        private int _EntBusinessId;
        partial void OnGetEntBusinessId(ref int value);
        partial void OnEntBusinessIdChanging(ref int value);
        partial void OnEntBusinessIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();
    
        /// <summary>
        /// There are no comments for Value2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Value2
        {
            get
            {
                string value = _Value2;
                OnGetValue2(ref value);
                return value;
            }
            set
            {
                if (_Value2 != value)
                {
                  OnValue2Changing(ref value);
                  ReportPropertyChanging("Value2");
                  _Value2 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Value2");
                  OnValue2Changed();
              }
            }
        }
        private string _Value2;
        partial void OnGetValue2(ref string value);
        partial void OnValue2Changing(ref string value);
        partial void OnValue2Changed();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntBusinessEntSetting", "EntBusinesses")]
        public virtual EntBusinesses EntBusinesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntBusinesses").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntBusinesses").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntBusinesses> EntBusinessesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntBusinesses");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntBusinesses", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntBusinessEntSetting", "EntBusinesses").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntSetting", "SysSetupTypes")]
        public virtual SysSetupTypes SysSetupTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "SysSetupTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "SysSetupTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysSetupTypes> SysSetupTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "SysSetupTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "SysSetupTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "SysSetupTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.EntSupportFiles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="EntSupportFiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntSupportFiles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EntSupportFiles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysFileTypeId">Initial value of SysFileTypeId.</param>
        /// <param name="entCompanyId">Initial value of EntCompanyId.</param>
        /// <param name="urlPath">Initial value of UrlPath.</param>
        public static EntSupportFiles CreateEntSupportFiles(int id, int sysFileTypeId, int entCompanyId, string urlPath)
        {
            EntSupportFiles entSupportFiles = new EntSupportFiles();
            entSupportFiles.Id = id;
            entSupportFiles.SysFileTypeId = sysFileTypeId;
            entSupportFiles.EntCompanyId = entCompanyId;
            entSupportFiles.UrlPath = urlPath;
            return entSupportFiles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysFileTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysFileTypeId
        {
            get
            {
                int value = _SysFileTypeId;
                OnGetSysFileTypeId(ref value);
                return value;
            }
            set
            {
                if (_SysFileTypeId != value)
                {
                  OnSysFileTypeIdChanging(ref value);
                  ReportPropertyChanging("SysFileTypeId");
                  _SysFileTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysFileTypeId");
                  OnSysFileTypeIdChanged();
              }
            }
        }
        private int _SysFileTypeId;
        partial void OnGetSysFileTypeId(ref int value);
        partial void OnSysFileTypeIdChanging(ref int value);
        partial void OnSysFileTypeIdChanged();
    
        /// <summary>
        /// There are no comments for EntCompanyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntCompanyId
        {
            get
            {
                int value = _EntCompanyId;
                OnGetEntCompanyId(ref value);
                return value;
            }
            set
            {
                if (_EntCompanyId != value)
                {
                  OnEntCompanyIdChanging(ref value);
                  ReportPropertyChanging("EntCompanyId");
                  _EntCompanyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntCompanyId");
                  OnEntCompanyIdChanged();
              }
            }
        }
        private int _EntCompanyId;
        partial void OnGetEntCompanyId(ref int value);
        partial void OnEntCompanyIdChanging(ref int value);
        partial void OnEntCompanyIdChanged();
    
        /// <summary>
        /// There are no comments for UrlPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UrlPath
        {
            get
            {
                string value = _UrlPath;
                OnGetUrlPath(ref value);
                return value;
            }
            set
            {
                if (_UrlPath != value)
                {
                  OnUrlPathChanging(ref value);
                  ReportPropertyChanging("UrlPath");
                  _UrlPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UrlPath");
                  OnUrlPathChanged();
              }
            }
        }
        private string _UrlPath;
        partial void OnGetUrlPath(ref string value);
        partial void OnUrlPathChanging(ref string value);
        partial void OnUrlPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_EntCompanyEntSupportFile", "EntBusinesses")]
        public virtual EntBusinesses EntBusinesses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntBusinesses").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntBusinesses").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EntBusinesses in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntBusinesses> EntBusinessesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntBusinesses");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntBusinesses", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EntBusinesses>("DB_A0A0AE_ClientModel.FK_EntCompanyEntSupportFile", "EntBusinesses").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysFileTypeEntSupportFile", "SysSetupTypes")]
        public virtual SysSetupTypes SysSetupTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "SysSetupTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "SysSetupTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysSetupTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysSetupTypes> SysSetupTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "SysSetupTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "SysSetupTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysSetupTypes>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "SysSetupTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Expenses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Expenses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Expenses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Expenses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="expensesCategoryId">Initial value of ExpensesCategoryId.</param>
        public static Expenses CreateExpenses(int id, string name, string remarks, int seqNo, int expensesCategoryId)
        {
            Expenses expenses = new Expenses();
            expenses.Id = id;
            expenses.Name = name;
            expenses.Remarks = remarks;
            expenses.SeqNo = seqNo;
            expenses.ExpensesCategoryId = expensesCategoryId;
            return expenses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for ExpensesCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ExpensesCategoryId
        {
            get
            {
                int value = _ExpensesCategoryId;
                OnGetExpensesCategoryId(ref value);
                return value;
            }
            set
            {
                if (_ExpensesCategoryId != value)
                {
                  OnExpensesCategoryIdChanging(ref value);
                  ReportPropertyChanging("ExpensesCategoryId");
                  _ExpensesCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpensesCategoryId");
                  OnExpensesCategoryIdChanged();
              }
            }
        }
        private int _ExpensesCategoryId;
        partial void OnGetExpensesCategoryId(ref int value);
        partial void OnExpensesCategoryIdChanging(ref int value);
        partial void OnExpensesCategoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ExpensesCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ExpensesCategoryExpenses", "ExpensesCategories")]
        public virtual ExpensesCategories ExpensesCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ExpensesCategories>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "ExpensesCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ExpensesCategories>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "ExpensesCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ExpensesCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpensesCategories> ExpensesCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ExpensesCategories>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "ExpensesCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ExpensesCategories>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "ExpensesCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ExpensesCategories>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "ExpensesCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobExpenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ExpensesJobExpenses", "JobExpenses")]
        public virtual EntityCollection<JobExpenses> JobExpenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobExpenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "JobExpenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobExpenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "JobExpenses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.ExpensesCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="ExpensesCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpensesCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ExpensesCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static ExpensesCategories CreateExpensesCategories(int id, string description, string remarks)
        {
            ExpensesCategories expensesCategories = new ExpensesCategories();
            expensesCategories.Id = id;
            expensesCategories.Description = description;
            expensesCategories.Remarks = remarks;
            return expensesCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Expenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ExpensesCategoryExpenses", "Expenses")]
        public virtual EntityCollection<Expenses> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "Expenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesCategoryExpenses", "Expenses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrDtrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrDtrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrDtrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrDtrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrSalaryId">Initial value of HrSalaryId.</param>
        /// <param name="dtrDate">Initial value of DtrDate.</param>
        /// <param name="hrDtrStatusId">Initial value of HrDtrStatusId.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        /// <param name="timeIn">Initial value of TimeIn.</param>
        /// <param name="timeOut">Initial value of TimeOut.</param>
        /// <param name="actualHrs">Initial value of ActualHrs.</param>
        /// <param name="roundHrs">Initial value of RoundHrs.</param>
        /// <param name="hrPayrollId">Initial value of HrPayrollId.</param>
        public static HrDtrs CreateHrDtrs(int id, int hrSalaryId, global::System.DateTime dtrDate, int hrDtrStatusId, int hrPersonelId, global::System.TimeSpan timeIn, global::System.TimeSpan timeOut, decimal actualHrs, int roundHrs, int hrPayrollId)
        {
            HrDtrs hrDtrs = new HrDtrs();
            hrDtrs.Id = id;
            hrDtrs.HrSalaryId = hrSalaryId;
            hrDtrs.DtrDate = dtrDate;
            hrDtrs.HrDtrStatusId = hrDtrStatusId;
            hrDtrs.HrPersonelId = hrPersonelId;
            hrDtrs.TimeIn = timeIn;
            hrDtrs.TimeOut = timeOut;
            hrDtrs.ActualHrs = actualHrs;
            hrDtrs.RoundHrs = roundHrs;
            hrDtrs.HrPayrollId = hrPayrollId;
            return hrDtrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrSalaryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrSalaryId
        {
            get
            {
                int value = _HrSalaryId;
                OnGetHrSalaryId(ref value);
                return value;
            }
            set
            {
                if (_HrSalaryId != value)
                {
                  OnHrSalaryIdChanging(ref value);
                  ReportPropertyChanging("HrSalaryId");
                  _HrSalaryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrSalaryId");
                  OnHrSalaryIdChanged();
              }
            }
        }
        private int _HrSalaryId;
        partial void OnGetHrSalaryId(ref int value);
        partial void OnHrSalaryIdChanging(ref int value);
        partial void OnHrSalaryIdChanged();
    
        /// <summary>
        /// There are no comments for DtrDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtrDate
        {
            get
            {
                global::System.DateTime value = _DtrDate;
                OnGetDtrDate(ref value);
                return value;
            }
            set
            {
                if (_DtrDate != value)
                {
                  OnDtrDateChanging(ref value);
                  ReportPropertyChanging("DtrDate");
                  _DtrDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtrDate");
                  OnDtrDateChanged();
              }
            }
        }
        private global::System.DateTime _DtrDate;
        partial void OnGetDtrDate(ref global::System.DateTime value);
        partial void OnDtrDateChanging(ref global::System.DateTime value);
        partial void OnDtrDateChanged();
    
        /// <summary>
        /// There are no comments for HrDtrStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrDtrStatusId
        {
            get
            {
                int value = _HrDtrStatusId;
                OnGetHrDtrStatusId(ref value);
                return value;
            }
            set
            {
                if (_HrDtrStatusId != value)
                {
                  OnHrDtrStatusIdChanging(ref value);
                  ReportPropertyChanging("HrDtrStatusId");
                  _HrDtrStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrDtrStatusId");
                  OnHrDtrStatusIdChanged();
              }
            }
        }
        private int _HrDtrStatusId;
        partial void OnGetHrDtrStatusId(ref int value);
        partial void OnHrDtrStatusIdChanging(ref int value);
        partial void OnHrDtrStatusIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();
    
        /// <summary>
        /// There are no comments for TimeIn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.TimeSpan TimeIn
        {
            get
            {
                global::System.TimeSpan value = _TimeIn;
                OnGetTimeIn(ref value);
                return value;
            }
            set
            {
                if (_TimeIn != value)
                {
                  OnTimeInChanging(ref value);
                  ReportPropertyChanging("TimeIn");
                  _TimeIn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TimeIn");
                  OnTimeInChanged();
              }
            }
        }
        private global::System.TimeSpan _TimeIn;
        partial void OnGetTimeIn(ref global::System.TimeSpan value);
        partial void OnTimeInChanging(ref global::System.TimeSpan value);
        partial void OnTimeInChanged();
    
        /// <summary>
        /// There are no comments for TimeOut in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.TimeSpan TimeOut
        {
            get
            {
                global::System.TimeSpan value = _TimeOut;
                OnGetTimeOut(ref value);
                return value;
            }
            set
            {
                if (_TimeOut != value)
                {
                  OnTimeOutChanging(ref value);
                  ReportPropertyChanging("TimeOut");
                  _TimeOut = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TimeOut");
                  OnTimeOutChanged();
              }
            }
        }
        private global::System.TimeSpan _TimeOut;
        partial void OnGetTimeOut(ref global::System.TimeSpan value);
        partial void OnTimeOutChanging(ref global::System.TimeSpan value);
        partial void OnTimeOutChanged();
    
        /// <summary>
        /// There are no comments for ActualHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ActualHrs
        {
            get
            {
                decimal value = _ActualHrs;
                OnGetActualHrs(ref value);
                return value;
            }
            set
            {
                if (_ActualHrs != value)
                {
                  OnActualHrsChanging(ref value);
                  ReportPropertyChanging("ActualHrs");
                  _ActualHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ActualHrs");
                  OnActualHrsChanged();
              }
            }
        }
        private decimal _ActualHrs;
        partial void OnGetActualHrs(ref decimal value);
        partial void OnActualHrsChanging(ref decimal value);
        partial void OnActualHrsChanged();
    
        /// <summary>
        /// There are no comments for RoundHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RoundHrs
        {
            get
            {
                int value = _RoundHrs;
                OnGetRoundHrs(ref value);
                return value;
            }
            set
            {
                if (_RoundHrs != value)
                {
                  OnRoundHrsChanging(ref value);
                  ReportPropertyChanging("RoundHrs");
                  _RoundHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoundHrs");
                  OnRoundHrsChanged();
              }
            }
        }
        private int _RoundHrs;
        partial void OnGetRoundHrs(ref int value);
        partial void OnRoundHrsChanging(ref int value);
        partial void OnRoundHrsChanged();
    
        /// <summary>
        /// There are no comments for HrPayrollId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPayrollId
        {
            get
            {
                int value = _HrPayrollId;
                OnGetHrPayrollId(ref value);
                return value;
            }
            set
            {
                if (_HrPayrollId != value)
                {
                  OnHrPayrollIdChanging(ref value);
                  ReportPropertyChanging("HrPayrollId");
                  _HrPayrollId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPayrollId");
                  OnHrPayrollIdChanged();
              }
            }
        }
        private int _HrPayrollId;
        partial void OnGetHrPayrollId(ref int value);
        partial void OnHrPayrollIdChanging(ref int value);
        partial void OnHrPayrollIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrDtrStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrDtrStatusHrDtr", "HrDtrStatus")]
        public virtual HrDtrStatus HrDtrStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrDtrStatus>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrDtrStatus>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrDtrStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrDtrStatus> HrDtrStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrDtrStatus>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrDtrStatus>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrDtrStatus>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrDtr", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrPersonels").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrSalaries in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrSalaryHrDtr", "HrSalaries")]
        public virtual HrSalaries HrSalaries
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrSalaries").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrSalaries").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrSalaries in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrSalaries> HrSalariesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrSalaries");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrSalaries", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrSalaries").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPayrolls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPayrollHrDtr", "HrPayrolls")]
        public virtual HrPayrolls HrPayrolls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrPayrolls").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrPayrolls").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPayrolls in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPayrolls> HrPayrollsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrPayrolls");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrPayrolls", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrPayrolls").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrDtrStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrDtrStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrDtrStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrDtrStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="factor">Initial value of Factor.</param>
        public static HrDtrStatus CreateHrDtrStatus(int id, string desc, decimal factor)
        {
            HrDtrStatus hrDtrStatus = new HrDtrStatus();
            hrDtrStatus.Id = id;
            hrDtrStatus.Desc = desc;
            hrDtrStatus.Factor = factor;
            return hrDtrStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Factor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Factor
        {
            get
            {
                decimal value = _Factor;
                OnGetFactor(ref value);
                return value;
            }
            set
            {
                if (_Factor != value)
                {
                  OnFactorChanging(ref value);
                  ReportPropertyChanging("Factor");
                  _Factor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Factor");
                  OnFactorChanged();
              }
            }
        }
        private decimal _Factor;
        partial void OnGetFactor(ref decimal value);
        partial void OnFactorChanging(ref decimal value);
        partial void OnFactorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrDtrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrDtrStatusHrDtr", "HrDtrs")]
        public virtual EntityCollection<HrDtrs> HrDtrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrDtrStatusHrDtr", "HrDtrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPayrolls in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPayrolls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPayrolls : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPayrolls object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        /// <param name="dtStart">Initial value of DtStart.</param>
        /// <param name="dtEnd">Initial value of DtEnd.</param>
        /// <param name="salary">Initial value of Salary.</param>
        /// <param name="allowance">Initial value of Allowance.</param>
        /// <param name="deduction">Initial value of Deduction.</param>
        /// <param name="yearno">Initial value of Yearno.</param>
        /// <param name="monthno">Initial value of Monthno.</param>
        /// <param name="status">Initial value of Status.</param>
        public static HrPayrolls CreateHrPayrolls(int id, int hrPersonelId, global::System.DateTime dtStart, global::System.DateTime dtEnd, decimal salary, decimal allowance, decimal deduction, string yearno, string monthno, string status)
        {
            HrPayrolls hrPayrolls = new HrPayrolls();
            hrPayrolls.Id = id;
            hrPayrolls.HrPersonelId = hrPersonelId;
            hrPayrolls.DtStart = dtStart;
            hrPayrolls.DtEnd = dtEnd;
            hrPayrolls.Salary = salary;
            hrPayrolls.Allowance = allowance;
            hrPayrolls.Deduction = deduction;
            hrPayrolls.Yearno = yearno;
            hrPayrolls.Monthno = monthno;
            hrPayrolls.Status = status;
            return hrPayrolls;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();
    
        /// <summary>
        /// There are no comments for DtStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtStart
        {
            get
            {
                global::System.DateTime value = _DtStart;
                OnGetDtStart(ref value);
                return value;
            }
            set
            {
                if (_DtStart != value)
                {
                  OnDtStartChanging(ref value);
                  ReportPropertyChanging("DtStart");
                  _DtStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStart");
                  OnDtStartChanged();
              }
            }
        }
        private global::System.DateTime _DtStart;
        partial void OnGetDtStart(ref global::System.DateTime value);
        partial void OnDtStartChanging(ref global::System.DateTime value);
        partial void OnDtStartChanged();
    
        /// <summary>
        /// There are no comments for DtEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtEnd
        {
            get
            {
                global::System.DateTime value = _DtEnd;
                OnGetDtEnd(ref value);
                return value;
            }
            set
            {
                if (_DtEnd != value)
                {
                  OnDtEndChanging(ref value);
                  ReportPropertyChanging("DtEnd");
                  _DtEnd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEnd");
                  OnDtEndChanged();
              }
            }
        }
        private global::System.DateTime _DtEnd;
        partial void OnGetDtEnd(ref global::System.DateTime value);
        partial void OnDtEndChanging(ref global::System.DateTime value);
        partial void OnDtEndChanged();
    
        /// <summary>
        /// There are no comments for Salary in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Salary
        {
            get
            {
                decimal value = _Salary;
                OnGetSalary(ref value);
                return value;
            }
            set
            {
                if (_Salary != value)
                {
                  OnSalaryChanging(ref value);
                  ReportPropertyChanging("Salary");
                  _Salary = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Salary");
                  OnSalaryChanged();
              }
            }
        }
        private decimal _Salary;
        partial void OnGetSalary(ref decimal value);
        partial void OnSalaryChanging(ref decimal value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// There are no comments for Allowance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Allowance
        {
            get
            {
                decimal value = _Allowance;
                OnGetAllowance(ref value);
                return value;
            }
            set
            {
                if (_Allowance != value)
                {
                  OnAllowanceChanging(ref value);
                  ReportPropertyChanging("Allowance");
                  _Allowance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Allowance");
                  OnAllowanceChanged();
              }
            }
        }
        private decimal _Allowance;
        partial void OnGetAllowance(ref decimal value);
        partial void OnAllowanceChanging(ref decimal value);
        partial void OnAllowanceChanged();
    
        /// <summary>
        /// There are no comments for Deduction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Deduction
        {
            get
            {
                decimal value = _Deduction;
                OnGetDeduction(ref value);
                return value;
            }
            set
            {
                if (_Deduction != value)
                {
                  OnDeductionChanging(ref value);
                  ReportPropertyChanging("Deduction");
                  _Deduction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Deduction");
                  OnDeductionChanged();
              }
            }
        }
        private decimal _Deduction;
        partial void OnGetDeduction(ref decimal value);
        partial void OnDeductionChanging(ref decimal value);
        partial void OnDeductionChanged();
    
        /// <summary>
        /// There are no comments for Yearno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Yearno
        {
            get
            {
                string value = _Yearno;
                OnGetYearno(ref value);
                return value;
            }
            set
            {
                if (_Yearno != value)
                {
                  OnYearnoChanging(ref value);
                  ReportPropertyChanging("Yearno");
                  _Yearno = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Yearno");
                  OnYearnoChanged();
              }
            }
        }
        private string _Yearno;
        partial void OnGetYearno(ref string value);
        partial void OnYearnoChanging(ref string value);
        partial void OnYearnoChanged();
    
        /// <summary>
        /// There are no comments for Monthno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Monthno
        {
            get
            {
                string value = _Monthno;
                OnGetMonthno(ref value);
                return value;
            }
            set
            {
                if (_Monthno != value)
                {
                  OnMonthnoChanging(ref value);
                  ReportPropertyChanging("Monthno");
                  _Monthno = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Monthno");
                  OnMonthnoChanged();
              }
            }
        }
        private string _Monthno;
        partial void OnGetMonthno(ref string value);
        partial void OnMonthnoChanging(ref string value);
        partial void OnMonthnoChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrDtrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPayrollHrDtr", "HrDtrs")]
        public virtual EntityCollection<HrDtrs> HrDtrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrDtrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrPayrollHrDtr", "HrDtrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPayroll", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPersonels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPerDocs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPerDocs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPerDocs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPerDocs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="filePath">Initial value of FilePath.</param>
        public static HrPerDocs CreateHrPerDocs(int id, int hrPersonelId, string description, string filePath)
        {
            HrPerDocs hrPerDocs = new HrPerDocs();
            hrPerDocs.Id = id;
            hrPerDocs.HrPersonelId = hrPersonelId;
            hrPerDocs.Description = description;
            hrPerDocs.FilePath = filePath;
            return hrPerDocs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for FilePath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FilePath
        {
            get
            {
                string value = _FilePath;
                OnGetFilePath(ref value);
                return value;
            }
            set
            {
                if (_FilePath != value)
                {
                  OnFilePathChanging(ref value);
                  ReportPropertyChanging("FilePath");
                  _FilePath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FilePath");
                  OnFilePathChanged();
              }
            }
        }
        private string _FilePath;
        partial void OnGetFilePath(ref string value);
        partial void OnFilePathChanging(ref string value);
        partial void OnFilePathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerDoc", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPersonels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPerPositions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPerPositions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPerPositions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPerPositions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        /// <param name="hrPositionId">Initial value of HrPositionId.</param>
        /// <param name="dtStart">Initial value of DtStart.</param>
        public static HrPerPositions CreateHrPerPositions(int id, int hrPersonelId, int hrPositionId, global::System.DateTime dtStart)
        {
            HrPerPositions hrPerPositions = new HrPerPositions();
            hrPerPositions.Id = id;
            hrPerPositions.HrPersonelId = hrPersonelId;
            hrPerPositions.HrPositionId = hrPositionId;
            hrPerPositions.DtStart = dtStart;
            return hrPerPositions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();
    
        /// <summary>
        /// There are no comments for HrPositionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPositionId
        {
            get
            {
                int value = _HrPositionId;
                OnGetHrPositionId(ref value);
                return value;
            }
            set
            {
                if (_HrPositionId != value)
                {
                  OnHrPositionIdChanging(ref value);
                  ReportPropertyChanging("HrPositionId");
                  _HrPositionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPositionId");
                  OnHrPositionIdChanged();
              }
            }
        }
        private int _HrPositionId;
        partial void OnGetHrPositionId(ref int value);
        partial void OnHrPositionIdChanging(ref int value);
        partial void OnHrPositionIdChanged();
    
        /// <summary>
        /// There are no comments for DtStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtStart
        {
            get
            {
                global::System.DateTime value = _DtStart;
                OnGetDtStart(ref value);
                return value;
            }
            set
            {
                if (_DtStart != value)
                {
                  OnDtStartChanging(ref value);
                  ReportPropertyChanging("DtStart");
                  _DtStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStart");
                  OnDtStartChanged();
              }
            }
        }
        private global::System.DateTime _DtStart;
        partial void OnGetDtStart(ref global::System.DateTime value);
        partial void OnDtStartChanging(ref global::System.DateTime value);
        partial void OnDtStartChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerPosition", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPersonels").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPositionHrPerPosition", "HrPositions")]
        public virtual HrPositions HrPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPositions").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPositions").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPositions in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPositions> HrPositionsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPositions");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPositions", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPositions").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPerSkills in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPerSkills")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPerSkills : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPerSkills object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrSkillId">Initial value of HrSkillId.</param>
        /// <param name="dtAcquired">Initial value of DtAcquired.</param>
        /// <param name="hrProficiencyId">Initial value of HrProficiencyId.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        public static HrPerSkills CreateHrPerSkills(int id, int hrSkillId, global::System.DateTime dtAcquired, int hrProficiencyId, int hrPersonelId)
        {
            HrPerSkills hrPerSkills = new HrPerSkills();
            hrPerSkills.Id = id;
            hrPerSkills.HrSkillId = hrSkillId;
            hrPerSkills.DtAcquired = dtAcquired;
            hrPerSkills.HrProficiencyId = hrProficiencyId;
            hrPerSkills.HrPersonelId = hrPersonelId;
            return hrPerSkills;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrSkillId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrSkillId
        {
            get
            {
                int value = _HrSkillId;
                OnGetHrSkillId(ref value);
                return value;
            }
            set
            {
                if (_HrSkillId != value)
                {
                  OnHrSkillIdChanging(ref value);
                  ReportPropertyChanging("HrSkillId");
                  _HrSkillId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrSkillId");
                  OnHrSkillIdChanged();
              }
            }
        }
        private int _HrSkillId;
        partial void OnGetHrSkillId(ref int value);
        partial void OnHrSkillIdChanging(ref int value);
        partial void OnHrSkillIdChanged();
    
        /// <summary>
        /// There are no comments for DtAcquired in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtAcquired
        {
            get
            {
                global::System.DateTime value = _DtAcquired;
                OnGetDtAcquired(ref value);
                return value;
            }
            set
            {
                if (_DtAcquired != value)
                {
                  OnDtAcquiredChanging(ref value);
                  ReportPropertyChanging("DtAcquired");
                  _DtAcquired = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtAcquired");
                  OnDtAcquiredChanged();
              }
            }
        }
        private global::System.DateTime _DtAcquired;
        partial void OnGetDtAcquired(ref global::System.DateTime value);
        partial void OnDtAcquiredChanging(ref global::System.DateTime value);
        partial void OnDtAcquiredChanged();
    
        /// <summary>
        /// There are no comments for HrProficiencyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrProficiencyId
        {
            get
            {
                int value = _HrProficiencyId;
                OnGetHrProficiencyId(ref value);
                return value;
            }
            set
            {
                if (_HrProficiencyId != value)
                {
                  OnHrProficiencyIdChanging(ref value);
                  ReportPropertyChanging("HrProficiencyId");
                  _HrProficiencyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrProficiencyId");
                  OnHrProficiencyIdChanged();
              }
            }
        }
        private int _HrProficiencyId;
        partial void OnGetHrProficiencyId(ref int value);
        partial void OnHrProficiencyIdChanging(ref int value);
        partial void OnHrProficiencyIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrSkillHrPerSkill", "HrSkills")]
        public virtual HrSkills HrSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrSkills").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrSkills").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrSkills in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrSkills> HrSkillsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrSkills");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrSkills", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrSkills").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrProficiencies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrProficiencyHrPerSkill", "HrProficiencies")]
        public virtual HrProficiencies HrProficiencies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrProficiencies").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrProficiencies").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrProficiencies in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrProficiencies> HrProficienciesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrProficiencies");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrProficiencies", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrProficiencies").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerSkill", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPersonels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPersonels in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPersonels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPersonels : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPersonels object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="hrPersonelStatusId">Initial value of HrPersonelStatusId.</param>
        public static HrPersonels CreateHrPersonels(int id, string name, int hrPersonelStatusId)
        {
            HrPersonels hrPersonels = new HrPersonels();
            hrPersonels.Id = id;
            hrPersonels.Name = name;
            hrPersonels.HrPersonelStatusId = hrPersonelStatusId;
            return hrPersonels;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for PassportNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PassportNo
        {
            get
            {
                string value = _PassportNo;
                OnGetPassportNo(ref value);
                return value;
            }
            set
            {
                if (_PassportNo != value)
                {
                  OnPassportNoChanging(ref value);
                  ReportPropertyChanging("PassportNo");
                  _PassportNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PassportNo");
                  OnPassportNoChanged();
              }
            }
        }
        private string _PassportNo;
        partial void OnGetPassportNo(ref string value);
        partial void OnPassportNoChanging(ref string value);
        partial void OnPassportNoChanged();
    
        /// <summary>
        /// There are no comments for SSSid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SSSid
        {
            get
            {
                string value = _SSSid;
                OnGetSSSid(ref value);
                return value;
            }
            set
            {
                if (_SSSid != value)
                {
                  OnSSSidChanging(ref value);
                  ReportPropertyChanging("SSSid");
                  _SSSid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SSSid");
                  OnSSSidChanged();
              }
            }
        }
        private string _SSSid;
        partial void OnGetSSSid(ref string value);
        partial void OnSSSidChanging(ref string value);
        partial void OnSSSidChanged();
    
        /// <summary>
        /// There are no comments for Tin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tin
        {
            get
            {
                string value = _Tin;
                OnGetTin(ref value);
                return value;
            }
            set
            {
                if (_Tin != value)
                {
                  OnTinChanging(ref value);
                  ReportPropertyChanging("Tin");
                  _Tin = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tin");
                  OnTinChanged();
              }
            }
        }
        private string _Tin;
        partial void OnGetTin(ref string value);
        partial void OnTinChanging(ref string value);
        partial void OnTinChanged();
    
        /// <summary>
        /// There are no comments for DriverId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DriverId
        {
            get
            {
                string value = _DriverId;
                OnGetDriverId(ref value);
                return value;
            }
            set
            {
                if (_DriverId != value)
                {
                  OnDriverIdChanging(ref value);
                  ReportPropertyChanging("DriverId");
                  _DriverId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DriverId");
                  OnDriverIdChanged();
              }
            }
        }
        private string _DriverId;
        partial void OnGetDriverId(ref string value);
        partial void OnDriverIdChanging(ref string value);
        partial void OnDriverIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelStatusId
        {
            get
            {
                int value = _HrPersonelStatusId;
                OnGetHrPersonelStatusId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelStatusId != value)
                {
                  OnHrPersonelStatusIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelStatusId");
                  _HrPersonelStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelStatusId");
                  OnHrPersonelStatusIdChanged();
              }
            }
        }
        private int _HrPersonelStatusId;
        partial void OnGetHrPersonelStatusId(ref int value);
        partial void OnHrPersonelStatusIdChanging(ref int value);
        partial void OnHrPersonelStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrDtrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrDtr", "HrDtrs")]
        public virtual EntityCollection<HrDtrs> HrDtrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrDtrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrPersonelHrDtr", "HrDtrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPayrolls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPayroll", "HrPayrolls")]
        public virtual EntityCollection<HrPayrolls> HrPayrolls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPayrolls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPayrolls>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPayroll", "HrPayrolls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPerDocs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerDoc", "HrPerDocs")]
        public virtual EntityCollection<HrPerDocs> HrPerDocs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerDocs>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPerDocs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerDocs>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerDoc", "HrPerDocs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPerPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerPosition", "HrPerPositions")]
        public virtual EntityCollection<HrPerPositions> HrPerPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerPositions>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPerPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerPositions>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerPosition", "HrPerPositions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPerSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerSkill", "HrPerSkills")]
        public virtual EntityCollection<HrPerSkills> HrPerSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerSkills>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPerSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerSkills>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerSkill", "HrPerSkills", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonelStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelStatusHrPersonel", "HrPersonelStatus")]
        public virtual HrPersonelStatus HrPersonelStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonelStatus>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonelStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonelStatus>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonelStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonelStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonelStatus> HrPersonelStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonelStatus>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonelStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonelStatus>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonelStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonelStatus>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonelStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPerTrainings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerTraining", "HrPerTrainings")]
        public virtual EntityCollection<HrPerTrainings> HrPerTrainings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerTrainings>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPerTrainings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerTrainings>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPerTrainings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrProfiles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrProfile", "HrProfiles")]
        public virtual EntityCollection<HrProfiles> HrProfiles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrProfiles>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrProfiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrProfiles>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrProfiles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrSalaries in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrSalary", "HrSalaries")]
        public virtual EntityCollection<HrSalaries> HrSalaries
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrSalaries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrSalaries>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrSalaries", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPersonelStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPersonelStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPersonelStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPersonelStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static HrPersonelStatus CreateHrPersonelStatus(int id, string desc)
        {
            HrPersonelStatus hrPersonelStatus = new HrPersonelStatus();
            hrPersonelStatus.Id = id;
            hrPersonelStatus.Desc = desc;
            return hrPersonelStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelStatusHrPersonel", "HrPersonels")]
        public virtual EntityCollection<HrPersonels> HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelStatusHrPersonel", "HrPersonels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPerTrainings in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPerTrainings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPerTrainings : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPerTrainings object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrTrainingId">Initial value of HrTrainingId.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        /// <param name="dtCompleted">Initial value of DtCompleted.</param>
        public static HrPerTrainings CreateHrPerTrainings(int id, int hrTrainingId, int hrPersonelId, global::System.DateTime dtCompleted)
        {
            HrPerTrainings hrPerTrainings = new HrPerTrainings();
            hrPerTrainings.Id = id;
            hrPerTrainings.HrTrainingId = hrTrainingId;
            hrPerTrainings.HrPersonelId = hrPersonelId;
            hrPerTrainings.DtCompleted = dtCompleted;
            return hrPerTrainings;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrTrainingId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrTrainingId
        {
            get
            {
                int value = _HrTrainingId;
                OnGetHrTrainingId(ref value);
                return value;
            }
            set
            {
                if (_HrTrainingId != value)
                {
                  OnHrTrainingIdChanging(ref value);
                  ReportPropertyChanging("HrTrainingId");
                  _HrTrainingId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrTrainingId");
                  OnHrTrainingIdChanged();
              }
            }
        }
        private int _HrTrainingId;
        partial void OnGetHrTrainingId(ref int value);
        partial void OnHrTrainingIdChanging(ref int value);
        partial void OnHrTrainingIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();
    
        /// <summary>
        /// There are no comments for DtCompleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtCompleted
        {
            get
            {
                global::System.DateTime value = _DtCompleted;
                OnGetDtCompleted(ref value);
                return value;
            }
            set
            {
                if (_DtCompleted != value)
                {
                  OnDtCompletedChanging(ref value);
                  ReportPropertyChanging("DtCompleted");
                  _DtCompleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtCompleted");
                  OnDtCompletedChanged();
              }
            }
        }
        private global::System.DateTime _DtCompleted;
        partial void OnGetDtCompleted(ref global::System.DateTime value);
        partial void OnDtCompletedChanging(ref global::System.DateTime value);
        partial void OnDtCompletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrTrainings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrTrainingHrPerTraining", "HrTrainings")]
        public virtual HrTrainings HrTrainings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrTrainings").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrTrainings").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrTrainings in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrTrainings> HrTrainingsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrTrainings");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrTrainings", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrTrainings").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrPerTraining", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrPerTraining", "HrPersonels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrPositions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrPositions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrPositions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrPositions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static HrPositions CreateHrPositions(int id, string desc)
        {
            HrPositions hrPositions = new HrPositions();
            hrPositions.Id = id;
            hrPositions.Desc = desc;
            return hrPositions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPerPositions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPositionHrPerPosition", "HrPerPositions")]
        public virtual EntityCollection<HrPerPositions> HrPerPositions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPerPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerPositions>("DB_A0A0AE_ClientModel.FK_HrPositionHrPerPosition", "HrPerPositions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrProficiencies in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrProficiencies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrProficiencies : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrProficiencies object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="level">Initial value of Level.</param>
        public static HrProficiencies CreateHrProficiencies(int id, string level)
        {
            HrProficiencies hrProficiencies = new HrProficiencies();
            hrProficiencies.Id = id;
            hrProficiencies.Level = level;
            return hrProficiencies;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Level in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Level
        {
            get
            {
                string value = _Level;
                OnGetLevel(ref value);
                return value;
            }
            set
            {
                if (_Level != value)
                {
                  OnLevelChanging(ref value);
                  ReportPropertyChanging("Level");
                  _Level = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Level");
                  OnLevelChanged();
              }
            }
        }
        private string _Level;
        partial void OnGetLevel(ref string value);
        partial void OnLevelChanging(ref string value);
        partial void OnLevelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPerSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrProficiencyHrPerSkill", "HrPerSkills")]
        public virtual EntityCollection<HrPerSkills> HrPerSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerSkills>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrPerSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerSkills>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrPerSkill", "HrPerSkills", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrTrainingSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrProficiencyHrTrainingSkill", "HrTrainingSkills")]
        public virtual EntityCollection<HrTrainingSkills> HrTrainingSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrTrainingSkills>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrTrainingSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrTrainingSkills>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrTrainingSkills", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrProfiles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrProfiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrProfiles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrProfiles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="middleName">Initial value of MiddleName.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        public static HrProfiles CreateHrProfiles(int id, string firstName, string lastName, string middleName, int hrPersonelId)
        {
            HrProfiles hrProfiles = new HrProfiles();
            hrProfiles.Id = id;
            hrProfiles.FirstName = firstName;
            hrProfiles.LastName = lastName;
            hrProfiles.MiddleName = middleName;
            hrProfiles.HrPersonelId = hrPersonelId;
            return hrProfiles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LastName
        {
            get
            {
                string value = _LastName;
                OnGetLastName(ref value);
                return value;
            }
            set
            {
                if (_LastName != value)
                {
                  OnLastNameChanging(ref value);
                  ReportPropertyChanging("LastName");
                  _LastName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LastName");
                  OnLastNameChanged();
              }
            }
        }
        private string _LastName;
        partial void OnGetLastName(ref string value);
        partial void OnLastNameChanging(ref string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// There are no comments for MiddleName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string MiddleName
        {
            get
            {
                string value = _MiddleName;
                OnGetMiddleName(ref value);
                return value;
            }
            set
            {
                if (_MiddleName != value)
                {
                  OnMiddleNameChanging(ref value);
                  ReportPropertyChanging("MiddleName");
                  _MiddleName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MiddleName");
                  OnMiddleNameChanged();
              }
            }
        }
        private string _MiddleName;
        partial void OnGetMiddleName(ref string value);
        partial void OnMiddleNameChanging(ref string value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// There are no comments for Mobile1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mobile1
        {
            get
            {
                string value = _Mobile1;
                OnGetMobile1(ref value);
                return value;
            }
            set
            {
                if (_Mobile1 != value)
                {
                  OnMobile1Changing(ref value);
                  ReportPropertyChanging("Mobile1");
                  _Mobile1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mobile1");
                  OnMobile1Changed();
              }
            }
        }
        private string _Mobile1;
        partial void OnGetMobile1(ref string value);
        partial void OnMobile1Changing(ref string value);
        partial void OnMobile1Changed();
    
        /// <summary>
        /// There are no comments for Mobile2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mobile2
        {
            get
            {
                string value = _Mobile2;
                OnGetMobile2(ref value);
                return value;
            }
            set
            {
                if (_Mobile2 != value)
                {
                  OnMobile2Changing(ref value);
                  ReportPropertyChanging("Mobile2");
                  _Mobile2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mobile2");
                  OnMobile2Changed();
              }
            }
        }
        private string _Mobile2;
        partial void OnGetMobile2(ref string value);
        partial void OnMobile2Changing(ref string value);
        partial void OnMobile2Changed();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for FbAccount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FbAccount
        {
            get
            {
                string value = _FbAccount;
                OnGetFbAccount(ref value);
                return value;
            }
            set
            {
                if (_FbAccount != value)
                {
                  OnFbAccountChanging(ref value);
                  ReportPropertyChanging("FbAccount");
                  _FbAccount = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FbAccount");
                  OnFbAccountChanged();
              }
            }
        }
        private string _FbAccount;
        partial void OnGetFbAccount(ref string value);
        partial void OnFbAccountChanging(ref string value);
        partial void OnFbAccountChanged();
    
        /// <summary>
        /// There are no comments for PresentAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PresentAddress
        {
            get
            {
                string value = _PresentAddress;
                OnGetPresentAddress(ref value);
                return value;
            }
            set
            {
                if (_PresentAddress != value)
                {
                  OnPresentAddressChanging(ref value);
                  ReportPropertyChanging("PresentAddress");
                  _PresentAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PresentAddress");
                  OnPresentAddressChanged();
              }
            }
        }
        private string _PresentAddress;
        partial void OnGetPresentAddress(ref string value);
        partial void OnPresentAddressChanging(ref string value);
        partial void OnPresentAddressChanged();
    
        /// <summary>
        /// There are no comments for ProvincialAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProvincialAddress
        {
            get
            {
                string value = _ProvincialAddress;
                OnGetProvincialAddress(ref value);
                return value;
            }
            set
            {
                if (_ProvincialAddress != value)
                {
                  OnProvincialAddressChanging(ref value);
                  ReportPropertyChanging("ProvincialAddress");
                  _ProvincialAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProvincialAddress");
                  OnProvincialAddressChanged();
              }
            }
        }
        private string _ProvincialAddress;
        partial void OnGetProvincialAddress(ref string value);
        partial void OnProvincialAddressChanging(ref string value);
        partial void OnProvincialAddressChanged();
    
        /// <summary>
        /// There are no comments for Spouse in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Spouse
        {
            get
            {
                string value = _Spouse;
                OnGetSpouse(ref value);
                return value;
            }
            set
            {
                if (_Spouse != value)
                {
                  OnSpouseChanging(ref value);
                  ReportPropertyChanging("Spouse");
                  _Spouse = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Spouse");
                  OnSpouseChanged();
              }
            }
        }
        private string _Spouse;
        partial void OnGetSpouse(ref string value);
        partial void OnSpouseChanging(ref string value);
        partial void OnSpouseChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrProfile", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrProfile", "HrPersonels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrSalaries in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrSalaries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrSalaries : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrSalaries object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrPersonelId">Initial value of HrPersonelId.</param>
        /// <param name="dtStart">Initial value of DtStart.</param>
        /// <param name="ratePerHr">Initial value of RatePerHr.</param>
        public static HrSalaries CreateHrSalaries(int id, int hrPersonelId, global::System.DateTime dtStart, decimal ratePerHr)
        {
            HrSalaries hrSalaries = new HrSalaries();
            hrSalaries.Id = id;
            hrSalaries.HrPersonelId = hrPersonelId;
            hrSalaries.DtStart = dtStart;
            hrSalaries.RatePerHr = ratePerHr;
            return hrSalaries;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrPersonelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrPersonelId
        {
            get
            {
                int value = _HrPersonelId;
                OnGetHrPersonelId(ref value);
                return value;
            }
            set
            {
                if (_HrPersonelId != value)
                {
                  OnHrPersonelIdChanging(ref value);
                  ReportPropertyChanging("HrPersonelId");
                  _HrPersonelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrPersonelId");
                  OnHrPersonelIdChanged();
              }
            }
        }
        private int _HrPersonelId;
        partial void OnGetHrPersonelId(ref int value);
        partial void OnHrPersonelIdChanging(ref int value);
        partial void OnHrPersonelIdChanged();
    
        /// <summary>
        /// There are no comments for DtStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtStart
        {
            get
            {
                global::System.DateTime value = _DtStart;
                OnGetDtStart(ref value);
                return value;
            }
            set
            {
                if (_DtStart != value)
                {
                  OnDtStartChanging(ref value);
                  ReportPropertyChanging("DtStart");
                  _DtStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStart");
                  OnDtStartChanged();
              }
            }
        }
        private global::System.DateTime _DtStart;
        partial void OnGetDtStart(ref global::System.DateTime value);
        partial void OnDtStartChanging(ref global::System.DateTime value);
        partial void OnDtStartChanged();
    
        /// <summary>
        /// There are no comments for RatePerHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RatePerHr
        {
            get
            {
                decimal value = _RatePerHr;
                OnGetRatePerHr(ref value);
                return value;
            }
            set
            {
                if (_RatePerHr != value)
                {
                  OnRatePerHrChanging(ref value);
                  ReportPropertyChanging("RatePerHr");
                  _RatePerHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RatePerHr");
                  OnRatePerHrChanged();
              }
            }
        }
        private decimal _RatePerHr;
        partial void OnGetRatePerHr(ref decimal value);
        partial void OnRatePerHrChanging(ref decimal value);
        partial void OnRatePerHrChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrDtrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrSalaryHrDtr", "HrDtrs")]
        public virtual EntityCollection<HrDtrs> HrDtrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrDtrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrDtrs>("DB_A0A0AE_ClientModel.FK_HrSalaryHrDtr", "HrDtrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrPersonelHrSalary", "HrPersonels")]
        public virtual HrPersonels HrPersonels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrPersonels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrPersonels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrPersonels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrPersonels> HrPersonelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrPersonels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrPersonels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrPersonels>("DB_A0A0AE_ClientModel.FK_HrPersonelHrSalary", "HrPersonels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrSkills in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrSkills")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrSkills : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrSkills object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static HrSkills CreateHrSkills(int id, string desc)
        {
            HrSkills hrSkills = new HrSkills();
            hrSkills.Id = id;
            hrSkills.Desc = desc;
            return hrSkills;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPerSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrSkillHrPerSkill", "HrPerSkills")]
        public virtual EntityCollection<HrPerSkills> HrPerSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrPerSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrPerSkill", "HrPerSkills", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrTrainingSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrSkillHrTrainingSkill", "HrTrainingSkills")]
        public virtual EntityCollection<HrTrainingSkills> HrTrainingSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrTrainingSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrTrainingSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrTrainingSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrTrainingSkills", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrTrainings in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrTrainings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrTrainings : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrTrainings object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static HrTrainings CreateHrTrainings(int id, string desc)
        {
            HrTrainings hrTrainings = new HrTrainings();
            hrTrainings.Id = id;
            hrTrainings.Desc = desc;
            return hrTrainings;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrPerTrainings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrTrainingHrPerTraining", "HrPerTrainings")]
        public virtual EntityCollection<HrPerTrainings> HrPerTrainings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrPerTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrPerTrainings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrPerTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrPerTraining", "HrPerTrainings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrTrainingSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrTrainingHrTrainingSkill", "HrTrainingSkills")]
        public virtual EntityCollection<HrTrainingSkills> HrTrainingSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<HrTrainingSkills>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainingSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<HrTrainingSkills>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainingSkills", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.HrTrainingSkills in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="HrTrainingSkills")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HrTrainingSkills : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new HrTrainingSkills object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="hrTrainingId">Initial value of HrTrainingId.</param>
        /// <param name="hrSkillId">Initial value of HrSkillId.</param>
        /// <param name="hrProficiencyId">Initial value of HrProficiencyId.</param>
        public static HrTrainingSkills CreateHrTrainingSkills(int id, int hrTrainingId, int hrSkillId, int hrProficiencyId)
        {
            HrTrainingSkills hrTrainingSkills = new HrTrainingSkills();
            hrTrainingSkills.Id = id;
            hrTrainingSkills.HrTrainingId = hrTrainingId;
            hrTrainingSkills.HrSkillId = hrSkillId;
            hrTrainingSkills.HrProficiencyId = hrProficiencyId;
            return hrTrainingSkills;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for HrTrainingId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrTrainingId
        {
            get
            {
                int value = _HrTrainingId;
                OnGetHrTrainingId(ref value);
                return value;
            }
            set
            {
                if (_HrTrainingId != value)
                {
                  OnHrTrainingIdChanging(ref value);
                  ReportPropertyChanging("HrTrainingId");
                  _HrTrainingId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrTrainingId");
                  OnHrTrainingIdChanged();
              }
            }
        }
        private int _HrTrainingId;
        partial void OnGetHrTrainingId(ref int value);
        partial void OnHrTrainingIdChanging(ref int value);
        partial void OnHrTrainingIdChanged();
    
        /// <summary>
        /// There are no comments for HrSkillId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrSkillId
        {
            get
            {
                int value = _HrSkillId;
                OnGetHrSkillId(ref value);
                return value;
            }
            set
            {
                if (_HrSkillId != value)
                {
                  OnHrSkillIdChanging(ref value);
                  ReportPropertyChanging("HrSkillId");
                  _HrSkillId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrSkillId");
                  OnHrSkillIdChanged();
              }
            }
        }
        private int _HrSkillId;
        partial void OnGetHrSkillId(ref int value);
        partial void OnHrSkillIdChanging(ref int value);
        partial void OnHrSkillIdChanged();
    
        /// <summary>
        /// There are no comments for HrProficiencyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int HrProficiencyId
        {
            get
            {
                int value = _HrProficiencyId;
                OnGetHrProficiencyId(ref value);
                return value;
            }
            set
            {
                if (_HrProficiencyId != value)
                {
                  OnHrProficiencyIdChanging(ref value);
                  ReportPropertyChanging("HrProficiencyId");
                  _HrProficiencyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HrProficiencyId");
                  OnHrProficiencyIdChanged();
              }
            }
        }
        private int _HrProficiencyId;
        partial void OnGetHrProficiencyId(ref int value);
        partial void OnHrProficiencyIdChanging(ref int value);
        partial void OnHrProficiencyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HrTrainings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrTrainingHrTrainingSkill", "HrTrainings")]
        public virtual HrTrainings HrTrainings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainings").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainings").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrTrainings in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrTrainings> HrTrainingsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainings");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainings", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrTrainings>("DB_A0A0AE_ClientModel.FK_HrTrainingHrTrainingSkill", "HrTrainings").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrSkills in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrSkillHrTrainingSkill", "HrSkills")]
        public virtual HrSkills HrSkills
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrSkills").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrSkills").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrSkills in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrSkills> HrSkillsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrSkills");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrSkills", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrSkills>("DB_A0A0AE_ClientModel.FK_HrSkillHrTrainingSkill", "HrSkills").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for HrProficiencies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_HrProficiencyHrTrainingSkill", "HrProficiencies")]
        public virtual HrProficiencies HrProficiencies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrProficiencies").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrProficiencies").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HrProficiencies in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HrProficiencies> HrProficienciesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrProficiencies");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrProficiencies", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<HrProficiencies>("DB_A0A0AE_ClientModel.FK_HrProficiencyHrTrainingSkill", "HrProficiencies").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvAdjHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvAdjHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvAdjHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvAdjHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        /// <param name="dtAdj">Initial value of DtAdj.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static InvAdjHdrs CreateInvAdjHdrs(int id, int invStoreId, string dtAdj, string status, string remarks)
        {
            InvAdjHdrs invAdjHdrs = new InvAdjHdrs();
            invAdjHdrs.Id = id;
            invAdjHdrs.InvStoreId = invStoreId;
            invAdjHdrs.DtAdj = dtAdj;
            invAdjHdrs.Status = status;
            invAdjHdrs.Remarks = remarks;
            return invAdjHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();
    
        /// <summary>
        /// There are no comments for DtAdj in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtAdj
        {
            get
            {
                string value = _DtAdj;
                OnGetDtAdj(ref value);
                return value;
            }
            set
            {
                if (_DtAdj != value)
                {
                  OnDtAdjChanging(ref value);
                  ReportPropertyChanging("DtAdj");
                  _DtAdj = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtAdj");
                  OnDtAdjChanged();
              }
            }
        }
        private string _DtAdj;
        partial void OnGetDtAdj(ref string value);
        partial void OnDtAdjChanging(ref string value);
        partial void OnDtAdjChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvAdjHdr", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvStores").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvAdjItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvAdjHdrInvAdjItem", "InvAdjItems")]
        public virtual EntityCollection<InvAdjItems> InvAdjItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvAdjItems>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvAdjItems>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvAdjItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvAdjItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvAdjItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvAdjItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invAdjHdrId">Initial value of InvAdjHdrId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        /// <param name="qtyAdded">Initial value of QtyAdded.</param>
        /// <param name="qtyDeduct">Initial value of QtyDeduct.</param>
        public static InvAdjItems CreateInvAdjItems(int id, int invAdjHdrId, int invItemId, int invUomId, string qtyAdded, string qtyDeduct)
        {
            InvAdjItems invAdjItems = new InvAdjItems();
            invAdjItems.Id = id;
            invAdjItems.InvAdjHdrId = invAdjHdrId;
            invAdjItems.InvItemId = invItemId;
            invAdjItems.InvUomId = invUomId;
            invAdjItems.QtyAdded = qtyAdded;
            invAdjItems.QtyDeduct = qtyDeduct;
            return invAdjItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvAdjHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvAdjHdrId
        {
            get
            {
                int value = _InvAdjHdrId;
                OnGetInvAdjHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvAdjHdrId != value)
                {
                  OnInvAdjHdrIdChanging(ref value);
                  ReportPropertyChanging("InvAdjHdrId");
                  _InvAdjHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvAdjHdrId");
                  OnInvAdjHdrIdChanged();
              }
            }
        }
        private int _InvAdjHdrId;
        partial void OnGetInvAdjHdrId(ref int value);
        partial void OnInvAdjHdrIdChanging(ref int value);
        partial void OnInvAdjHdrIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();
    
        /// <summary>
        /// There are no comments for QtyAdded in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string QtyAdded
        {
            get
            {
                string value = _QtyAdded;
                OnGetQtyAdded(ref value);
                return value;
            }
            set
            {
                if (_QtyAdded != value)
                {
                  OnQtyAddedChanging(ref value);
                  ReportPropertyChanging("QtyAdded");
                  _QtyAdded = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("QtyAdded");
                  OnQtyAddedChanged();
              }
            }
        }
        private string _QtyAdded;
        partial void OnGetQtyAdded(ref string value);
        partial void OnQtyAddedChanging(ref string value);
        partial void OnQtyAddedChanged();
    
        /// <summary>
        /// There are no comments for QtyDeduct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string QtyDeduct
        {
            get
            {
                string value = _QtyDeduct;
                OnGetQtyDeduct(ref value);
                return value;
            }
            set
            {
                if (_QtyDeduct != value)
                {
                  OnQtyDeductChanging(ref value);
                  ReportPropertyChanging("QtyDeduct");
                  _QtyDeduct = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("QtyDeduct");
                  OnQtyDeductChanged();
              }
            }
        }
        private string _QtyDeduct;
        partial void OnGetQtyDeduct(ref string value);
        partial void OnQtyDeductChanging(ref string value);
        partial void OnQtyDeductChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvAdjHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvAdjHdrInvAdjItem", "InvAdjHdrs")]
        public virtual InvAdjHdrs InvAdjHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvAdjHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvAdjHdrs> InvAdjHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvAdjHdrInvAdjItem", "InvAdjHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvAdjItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvAdjItem", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvUoms").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCarGateControls in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCarGateControls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCarGateControls : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCarGateControls object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="in_Out_Flag">Initial value of In_Out_Flag.</param>
        /// <param name="odometer">Initial value of Odometer.</param>
        /// <param name="dtControl">Initial value of DtControl.</param>
        public static InvCarGateControls CreateInvCarGateControls(int id, int invItemId, int in_Out_Flag, string odometer, global::System.DateTime dtControl)
        {
            InvCarGateControls invCarGateControls = new InvCarGateControls();
            invCarGateControls.Id = id;
            invCarGateControls.InvItemId = invItemId;
            invCarGateControls.In_Out_Flag = in_Out_Flag;
            invCarGateControls.Odometer = odometer;
            invCarGateControls.DtControl = dtControl;
            return invCarGateControls;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for In_Out_Flag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int In_Out_Flag
        {
            get
            {
                int value = _In_Out_Flag;
                OnGetIn_Out_Flag(ref value);
                return value;
            }
            set
            {
                if (_In_Out_Flag != value)
                {
                  OnIn_Out_FlagChanging(ref value);
                  ReportPropertyChanging("In_Out_Flag");
                  _In_Out_Flag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("In_Out_Flag");
                  OnIn_Out_FlagChanged();
              }
            }
        }
        private int _In_Out_Flag;
        partial void OnGetIn_Out_Flag(ref int value);
        partial void OnIn_Out_FlagChanging(ref int value);
        partial void OnIn_Out_FlagChanged();
    
        /// <summary>
        /// There are no comments for Odometer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Odometer
        {
            get
            {
                string value = _Odometer;
                OnGetOdometer(ref value);
                return value;
            }
            set
            {
                if (_Odometer != value)
                {
                  OnOdometerChanging(ref value);
                  ReportPropertyChanging("Odometer");
                  _Odometer = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Odometer");
                  OnOdometerChanged();
              }
            }
        }
        private string _Odometer;
        partial void OnGetOdometer(ref string value);
        partial void OnOdometerChanging(ref string value);
        partial void OnOdometerChanged();
    
        /// <summary>
        /// There are no comments for DtControl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtControl
        {
            get
            {
                global::System.DateTime value = _DtControl;
                OnGetDtControl(ref value);
                return value;
            }
            set
            {
                if (_DtControl != value)
                {
                  OnDtControlChanging(ref value);
                  ReportPropertyChanging("DtControl");
                  _DtControl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtControl");
                  OnDtControlChanged();
              }
            }
        }
        private global::System.DateTime _DtControl;
        partial void OnGetDtControl(ref global::System.DateTime value);
        partial void OnDtControlChanging(ref global::System.DateTime value);
        partial void OnDtControlChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Driver in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Driver
        {
            get
            {
                string value = _Driver;
                OnGetDriver(ref value);
                return value;
            }
            set
            {
                if (_Driver != value)
                {
                  OnDriverChanging(ref value);
                  ReportPropertyChanging("Driver");
                  _Driver = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Driver");
                  OnDriverChanged();
              }
            }
        }
        private string _Driver;
        partial void OnGetDriver(ref string value);
        partial void OnDriverChanging(ref string value);
        partial void OnDriverChanged();
    
        /// <summary>
        /// There are no comments for Inspector in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Inspector
        {
            get
            {
                string value = _Inspector;
                OnGetInspector(ref value);
                return value;
            }
            set
            {
                if (_Inspector != value)
                {
                  OnInspectorChanging(ref value);
                  ReportPropertyChanging("Inspector");
                  _Inspector = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Inspector");
                  OnInspectorChanged();
              }
            }
        }
        private string _Inspector;
        partial void OnGetInspector(ref string value);
        partial void OnInspectorChanging(ref string value);
        partial void OnInspectorChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? JobMainId
        {
            get
            {
                int? value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int? _JobMainId;
        partial void OnGetJobMainId(ref int? value);
        partial void OnJobMainIdChanging(ref int? value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustomerId
        {
            get
            {
                int? value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int? _CustomerId;
        partial void OnGetCustomerId(ref int? value);
        partial void OnCustomerIdChanging(ref int? value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for DriverId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DriverId
        {
            get
            {
                int? value = _DriverId;
                OnGetDriverId(ref value);
                return value;
            }
            set
            {
                if (_DriverId != value)
                {
                  OnDriverIdChanging(ref value);
                  ReportPropertyChanging("DriverId");
                  _DriverId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DriverId");
                  OnDriverIdChanged();
              }
            }
        }
        private int? _DriverId;
        partial void OnGetDriverId(ref int? value);
        partial void OnDriverIdChanging(ref int? value);
        partial void OnDriverIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvCarGateControl", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCarRecords in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCarRecords")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCarRecords : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCarRecords object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invCarRecordTypeId">Initial value of InvCarRecordTypeId.</param>
        /// <param name="odometer">Initial value of Odometer.</param>
        /// <param name="dtDone">Initial value of DtDone.</param>
        /// <param name="nextOdometer">Initial value of NextOdometer.</param>
        /// <param name="nextSched">Initial value of NextSched.</param>
        public static InvCarRecords CreateInvCarRecords(int id, int invItemId, int invCarRecordTypeId, int odometer, global::System.DateTime dtDone, int nextOdometer, global::System.DateTime nextSched)
        {
            InvCarRecords invCarRecords = new InvCarRecords();
            invCarRecords.Id = id;
            invCarRecords.InvItemId = invItemId;
            invCarRecords.InvCarRecordTypeId = invCarRecordTypeId;
            invCarRecords.Odometer = odometer;
            invCarRecords.DtDone = dtDone;
            invCarRecords.NextOdometer = nextOdometer;
            invCarRecords.NextSched = nextSched;
            return invCarRecords;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvCarRecordTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvCarRecordTypeId
        {
            get
            {
                int value = _InvCarRecordTypeId;
                OnGetInvCarRecordTypeId(ref value);
                return value;
            }
            set
            {
                if (_InvCarRecordTypeId != value)
                {
                  OnInvCarRecordTypeIdChanging(ref value);
                  ReportPropertyChanging("InvCarRecordTypeId");
                  _InvCarRecordTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCarRecordTypeId");
                  OnInvCarRecordTypeIdChanged();
              }
            }
        }
        private int _InvCarRecordTypeId;
        partial void OnGetInvCarRecordTypeId(ref int value);
        partial void OnInvCarRecordTypeIdChanging(ref int value);
        partial void OnInvCarRecordTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Odometer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Odometer
        {
            get
            {
                int value = _Odometer;
                OnGetOdometer(ref value);
                return value;
            }
            set
            {
                if (_Odometer != value)
                {
                  OnOdometerChanging(ref value);
                  ReportPropertyChanging("Odometer");
                  _Odometer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Odometer");
                  OnOdometerChanged();
              }
            }
        }
        private int _Odometer;
        partial void OnGetOdometer(ref int value);
        partial void OnOdometerChanging(ref int value);
        partial void OnOdometerChanged();
    
        /// <summary>
        /// There are no comments for DtDone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtDone
        {
            get
            {
                global::System.DateTime value = _DtDone;
                OnGetDtDone(ref value);
                return value;
            }
            set
            {
                if (_DtDone != value)
                {
                  OnDtDoneChanging(ref value);
                  ReportPropertyChanging("DtDone");
                  _DtDone = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtDone");
                  OnDtDoneChanged();
              }
            }
        }
        private global::System.DateTime _DtDone;
        partial void OnGetDtDone(ref global::System.DateTime value);
        partial void OnDtDoneChanging(ref global::System.DateTime value);
        partial void OnDtDoneChanged();
    
        /// <summary>
        /// There are no comments for NextOdometer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextOdometer
        {
            get
            {
                int value = _NextOdometer;
                OnGetNextOdometer(ref value);
                return value;
            }
            set
            {
                if (_NextOdometer != value)
                {
                  OnNextOdometerChanging(ref value);
                  ReportPropertyChanging("NextOdometer");
                  _NextOdometer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextOdometer");
                  OnNextOdometerChanged();
              }
            }
        }
        private int _NextOdometer;
        partial void OnGetNextOdometer(ref int value);
        partial void OnNextOdometerChanging(ref int value);
        partial void OnNextOdometerChanged();
    
        /// <summary>
        /// There are no comments for NextSched in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime NextSched
        {
            get
            {
                global::System.DateTime value = _NextSched;
                OnGetNextSched(ref value);
                return value;
            }
            set
            {
                if (_NextSched != value)
                {
                  OnNextSchedChanging(ref value);
                  ReportPropertyChanging("NextSched");
                  _NextSched = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextSched");
                  OnNextSchedChanged();
              }
            }
        }
        private global::System.DateTime _NextSched;
        partial void OnGetNextSched(ref global::System.DateTime value);
        partial void OnNextSchedChanging(ref global::System.DateTime value);
        partial void OnNextSchedChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCarRecordTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes")]
        public virtual InvCarRecordTypes InvCarRecordTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCarRecordTypes>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCarRecordTypes>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCarRecordTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCarRecordTypes> InvCarRecordTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCarRecordTypes>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCarRecordTypes>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCarRecordTypes>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecordTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvCarRecord", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCarRecordTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCarRecordTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCarRecordTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCarRecordTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="odoInterval">Initial value of OdoInterval.</param>
        /// <param name="daysInterval">Initial value of DaysInterval.</param>
        public static InvCarRecordTypes CreateInvCarRecordTypes(int id, string description, int odoInterval, int daysInterval)
        {
            InvCarRecordTypes invCarRecordTypes = new InvCarRecordTypes();
            invCarRecordTypes.Id = id;
            invCarRecordTypes.Description = description;
            invCarRecordTypes.OdoInterval = odoInterval;
            invCarRecordTypes.DaysInterval = daysInterval;
            return invCarRecordTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for OdoInterval in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OdoInterval
        {
            get
            {
                int value = _OdoInterval;
                OnGetOdoInterval(ref value);
                return value;
            }
            set
            {
                if (_OdoInterval != value)
                {
                  OnOdoIntervalChanging(ref value);
                  ReportPropertyChanging("OdoInterval");
                  _OdoInterval = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OdoInterval");
                  OnOdoIntervalChanged();
              }
            }
        }
        private int _OdoInterval;
        partial void OnGetOdoInterval(ref int value);
        partial void OnOdoIntervalChanging(ref int value);
        partial void OnOdoIntervalChanged();
    
        /// <summary>
        /// There are no comments for DaysInterval in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DaysInterval
        {
            get
            {
                int value = _DaysInterval;
                OnGetDaysInterval(ref value);
                return value;
            }
            set
            {
                if (_DaysInterval != value)
                {
                  OnDaysIntervalChanging(ref value);
                  ReportPropertyChanging("DaysInterval");
                  _DaysInterval = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DaysInterval");
                  OnDaysIntervalChanged();
              }
            }
        }
        private int _DaysInterval;
        partial void OnGetDaysInterval(ref int value);
        partial void OnDaysIntervalChanging(ref int value);
        partial void OnDaysIntervalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCarRecords in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCarRecordTypeInvCarRecord", "InvCarRecords")]
        public virtual EntityCollection<InvCarRecords> InvCarRecords
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCarRecords>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCarRecords>("DB_A0A0AE_ClientModel.FK_InvCarRecordTypeInvCarRecord", "InvCarRecords", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCatCustomSpecs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCatCustomSpecs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCatCustomSpecs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCatCustomSpecs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invCategoryId">Initial value of InvCategoryId.</param>
        /// <param name="order">Initial value of Order.</param>
        /// <param name="invCustomSpecId">Initial value of InvCustomSpecId.</param>
        public static InvCatCustomSpecs CreateInvCatCustomSpecs(int id, int invCategoryId, int order, int invCustomSpecId)
        {
            InvCatCustomSpecs invCatCustomSpecs = new InvCatCustomSpecs();
            invCatCustomSpecs.Id = id;
            invCatCustomSpecs.InvCategoryId = invCategoryId;
            invCatCustomSpecs.Order = order;
            invCatCustomSpecs.InvCustomSpecId = invCustomSpecId;
            return invCatCustomSpecs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvCategoryId
        {
            get
            {
                int value = _InvCategoryId;
                OnGetInvCategoryId(ref value);
                return value;
            }
            set
            {
                if (_InvCategoryId != value)
                {
                  OnInvCategoryIdChanging(ref value);
                  ReportPropertyChanging("InvCategoryId");
                  _InvCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCategoryId");
                  OnInvCategoryIdChanged();
              }
            }
        }
        private int _InvCategoryId;
        partial void OnGetInvCategoryId(ref int value);
        partial void OnInvCategoryIdChanging(ref int value);
        partial void OnInvCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for Order in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Order
        {
            get
            {
                int value = _Order;
                OnGetOrder(ref value);
                return value;
            }
            set
            {
                if (_Order != value)
                {
                  OnOrderChanging(ref value);
                  ReportPropertyChanging("Order");
                  _Order = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Order");
                  OnOrderChanged();
              }
            }
        }
        private int _Order;
        partial void OnGetOrder(ref int value);
        partial void OnOrderChanging(ref int value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for InvCustomSpecId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvCustomSpecId
        {
            get
            {
                int value = _InvCustomSpecId;
                OnGetInvCustomSpecId(ref value);
                return value;
            }
            set
            {
                if (_InvCustomSpecId != value)
                {
                  OnInvCustomSpecIdChanging(ref value);
                  ReportPropertyChanging("InvCustomSpecId");
                  _InvCustomSpecId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCustomSpecId");
                  OnInvCustomSpecIdChanged();
              }
            }
        }
        private int _InvCustomSpecId;
        partial void OnGetInvCustomSpecId(ref int value);
        partial void OnInvCustomSpecIdChanging(ref int value);
        partial void OnInvCustomSpecIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvCatCustomSpec", "InvCategories")]
        public virtual InvCategories InvCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCategories> InvCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs")]
        public virtual InvCustomSpecs InvCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCustomSpecs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCustomSpecs> InvCustomSpecsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCustomSpecs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="description">Initial value of Description.</param>
        public static InvCategories CreateInvCategories(int id, string code, string description)
        {
            InvCategories invCategories = new InvCategories();
            invCategories.Id = id;
            invCategories.Code = code;
            invCategories.Description = description;
            return invCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCatCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvCatCustomSpec", "InvCatCustomSpecs")]
        public virtual EntityCollection<InvCatCustomSpecs> InvCatCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCatCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCatCustomSpecs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCatCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCatCustomSpec", "InvCatCustomSpecs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCategorySpecDefs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvCategorySpecDef", "InvCategorySpecDefs")]
        public virtual EntityCollection<InvCategorySpecDefs> InvCategorySpecDefs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCategorySpecDefs>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategorySpecDefs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCategorySpecDefs>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategorySpecDefs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvItem", "InvItems")]
        public virtual EntityCollection<InvItems> InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItems>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItems>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCategorySpecDefs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCategorySpecDefs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCategorySpecDefs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCategorySpecDefs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invCategoryId">Initial value of InvCategoryId.</param>
        /// <param name="invItemSysDefinedSpecsId">Initial value of InvItemSysDefinedSpecsId.</param>
        public static InvCategorySpecDefs CreateInvCategorySpecDefs(int id, int invCategoryId, int invItemSysDefinedSpecsId)
        {
            InvCategorySpecDefs invCategorySpecDefs = new InvCategorySpecDefs();
            invCategorySpecDefs.Id = id;
            invCategorySpecDefs.InvCategoryId = invCategoryId;
            invCategorySpecDefs.InvItemSysDefinedSpecsId = invItemSysDefinedSpecsId;
            return invCategorySpecDefs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvCategoryId
        {
            get
            {
                int value = _InvCategoryId;
                OnGetInvCategoryId(ref value);
                return value;
            }
            set
            {
                if (_InvCategoryId != value)
                {
                  OnInvCategoryIdChanging(ref value);
                  ReportPropertyChanging("InvCategoryId");
                  _InvCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCategoryId");
                  OnInvCategoryIdChanged();
              }
            }
        }
        private int _InvCategoryId;
        partial void OnGetInvCategoryId(ref int value);
        partial void OnInvCategoryIdChanging(ref int value);
        partial void OnInvCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemSysDefinedSpecsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemSysDefinedSpecsId
        {
            get
            {
                int value = _InvItemSysDefinedSpecsId;
                OnGetInvItemSysDefinedSpecsId(ref value);
                return value;
            }
            set
            {
                if (_InvItemSysDefinedSpecsId != value)
                {
                  OnInvItemSysDefinedSpecsIdChanging(ref value);
                  ReportPropertyChanging("InvItemSysDefinedSpecsId");
                  _InvItemSysDefinedSpecsId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemSysDefinedSpecsId");
                  OnInvItemSysDefinedSpecsIdChanged();
              }
            }
        }
        private int _InvItemSysDefinedSpecsId;
        partial void OnGetInvItemSysDefinedSpecsId(ref int value);
        partial void OnInvItemSysDefinedSpecsIdChanging(ref int value);
        partial void OnInvItemSysDefinedSpecsIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvCategorySpecDef", "InvCategories")]
        public virtual InvCategories InvCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCategories> InvCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvCategorySpecDef", "InvCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemSysDefinedSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs")]
        public virtual InvItemSysDefinedSpecs InvItemSysDefinedSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemSysDefinedSpecs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemSysDefinedSpecs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemSysDefinedSpecs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItemSysDefinedSpecs> InvItemSysDefinedSpecsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemSysDefinedSpecs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItemSysDefinedSpecs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemSysDefinedSpecs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvItemSysDefinedSpecs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvClassifications in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvClassifications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvClassifications : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvClassifications object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="classification">Initial value of Classification.</param>
        public static InvClassifications CreateInvClassifications(int id, string classification)
        {
            InvClassifications invClassifications = new InvClassifications();
            invClassifications.Id = id;
            invClassifications.Classification = classification;
            return invClassifications;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Classification in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Classification
        {
            get
            {
                string value = _Classification;
                OnGetClassification(ref value);
                return value;
            }
            set
            {
                if (_Classification != value)
                {
                  OnClassificationChanging(ref value);
                  ReportPropertyChanging("Classification");
                  _Classification = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Classification");
                  OnClassificationChanged();
              }
            }
        }
        private string _Classification;
        partial void OnGetClassification(ref string value);
        partial void OnClassificationChanging(ref string value);
        partial void OnClassificationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemClasses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvClassificationInvItemClass", "InvItemClasses")]
        public virtual EntityCollection<InvItemClasses> InvItemClasses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemClasses>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvItemClasses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemClasses>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvItemClasses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUomConvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvClassificationInvUomConvItem", "InvUomConvItems")]
        public virtual EntityCollection<InvUomConvItems> InvUomConvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvUomConvItems>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvUomConvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvUomConvItems>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvUomConvItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCustomSpecs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCustomSpecs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCustomSpecs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCustomSpecs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="specName">Initial value of SpecName.</param>
        /// <param name="invCustomSpecTypeId">Initial value of InvCustomSpecTypeId.</param>
        /// <param name="order">Initial value of Order.</param>
        public static InvCustomSpecs CreateInvCustomSpecs(int id, string specName, int invCustomSpecTypeId, int order)
        {
            InvCustomSpecs invCustomSpecs = new InvCustomSpecs();
            invCustomSpecs.Id = id;
            invCustomSpecs.SpecName = specName;
            invCustomSpecs.InvCustomSpecTypeId = invCustomSpecTypeId;
            invCustomSpecs.Order = order;
            return invCustomSpecs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SpecName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SpecName
        {
            get
            {
                string value = _SpecName;
                OnGetSpecName(ref value);
                return value;
            }
            set
            {
                if (_SpecName != value)
                {
                  OnSpecNameChanging(ref value);
                  ReportPropertyChanging("SpecName");
                  _SpecName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SpecName");
                  OnSpecNameChanged();
              }
            }
        }
        private string _SpecName;
        partial void OnGetSpecName(ref string value);
        partial void OnSpecNameChanging(ref string value);
        partial void OnSpecNameChanged();
    
        /// <summary>
        /// There are no comments for InvCustomSpecTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvCustomSpecTypeId
        {
            get
            {
                int value = _InvCustomSpecTypeId;
                OnGetInvCustomSpecTypeId(ref value);
                return value;
            }
            set
            {
                if (_InvCustomSpecTypeId != value)
                {
                  OnInvCustomSpecTypeIdChanging(ref value);
                  ReportPropertyChanging("InvCustomSpecTypeId");
                  _InvCustomSpecTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCustomSpecTypeId");
                  OnInvCustomSpecTypeIdChanged();
              }
            }
        }
        private int _InvCustomSpecTypeId;
        partial void OnGetInvCustomSpecTypeId(ref int value);
        partial void OnInvCustomSpecTypeIdChanging(ref int value);
        partial void OnInvCustomSpecTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Order in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Order
        {
            get
            {
                int value = _Order;
                OnGetOrder(ref value);
                return value;
            }
            set
            {
                if (_Order != value)
                {
                  OnOrderChanging(ref value);
                  ReportPropertyChanging("Order");
                  _Order = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Order");
                  OnOrderChanged();
              }
            }
        }
        private int _Order;
        partial void OnGetOrder(ref int value);
        partial void OnOrderChanging(ref int value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// There are no comments for Measurement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Measurement
        {
            get
            {
                string value = _Measurement;
                OnGetMeasurement(ref value);
                return value;
            }
            set
            {
                if (_Measurement != value)
                {
                  OnMeasurementChanging(ref value);
                  ReportPropertyChanging("Measurement");
                  _Measurement = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Measurement");
                  OnMeasurementChanged();
              }
            }
        }
        private string _Measurement;
        partial void OnGetMeasurement(ref string value);
        partial void OnMeasurementChanging(ref string value);
        partial void OnMeasurementChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCatCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecInvCatCustomSpec", "InvCatCustomSpecs")]
        public virtual EntityCollection<InvCatCustomSpecs> InvCatCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCatCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCatCustomSpecs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCatCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvCatCustomSpec", "InvCatCustomSpecs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCustomSpecTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes")]
        public virtual InvCustomSpecTypes InvCustomSpecTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecTypes>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecTypes>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCustomSpecTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCustomSpecTypes> InvCustomSpecTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecTypes>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCustomSpecTypes>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecTypes>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecInvItemCustomSpec", "InvItemCustomSpecs")]
        public virtual EntityCollection<InvItemCustomSpecs> InvItemCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvItemCustomSpecs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvItemCustomSpecs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvCustomSpecTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvCustomSpecTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvCustomSpecTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvCustomSpecTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static InvCustomSpecTypes CreateInvCustomSpecTypes(int id, string type)
        {
            InvCustomSpecTypes invCustomSpecTypes = new InvCustomSpecTypes();
            invCustomSpecTypes.Id = id;
            invCustomSpecTypes.Type = type;
            return invCustomSpecTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecs")]
        public virtual EntityCollection<InvCustomSpecs> InvCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecTypeInvCustomSpec", "InvCustomSpecs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemBrands in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemBrands")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemBrands : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemBrands object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static InvItemBrands CreateInvItemBrands(int id, string name)
        {
            InvItemBrands invItemBrands = new InvItemBrands();
            invItemBrands.Id = id;
            invItemBrands.Name = name;
            return invItemBrands;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemBrandInvItemMaster", "InvItemMasters")]
        public virtual EntityCollection<InvItemMasters> InvItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemMasters", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemCatId">Initial value of InvItemCatId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        public static InvItemCategories CreateInvItemCategories(int id, int invItemCatId, int invItemId)
        {
            InvItemCategories invItemCategories = new InvItemCategories();
            invItemCategories.Id = id;
            invItemCategories.InvItemCatId = invItemCatId;
            invItemCategories.InvItemId = invItemId;
            return invItemCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemCatId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemCatId
        {
            get
            {
                int value = _InvItemCatId;
                OnGetInvItemCatId(ref value);
                return value;
            }
            set
            {
                if (_InvItemCatId != value)
                {
                  OnInvItemCatIdChanging(ref value);
                  ReportPropertyChanging("InvItemCatId");
                  _InvItemCatId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemCatId");
                  OnInvItemCatIdChanged();
              }
            }
        }
        private int _InvItemCatId;
        partial void OnGetInvItemCatId(ref int value);
        partial void OnInvItemCatIdChanging(ref int value);
        partial void OnInvItemCatIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemCatInvItemCategory", "InvItemCats")]
        public virtual InvItemCats InvItemCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemCats>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCats").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemCats>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCats").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemCats in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItemCats> InvItemCatsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemCats>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCats");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItemCats>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCats", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemCats>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCats").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemCategory", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static InvItemCats CreateInvItemCats(int id, string name)
        {
            InvItemCats invItemCats = new InvItemCats();
            invItemCats.Id = id;
            invItemCats.Name = name;
            return invItemCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for ImgPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImgPath
        {
            get
            {
                string value = _ImgPath;
                OnGetImgPath(ref value);
                return value;
            }
            set
            {
                if (_ImgPath != value)
                {
                  OnImgPathChanging(ref value);
                  ReportPropertyChanging("ImgPath");
                  _ImgPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImgPath");
                  OnImgPathChanged();
              }
            }
        }
        private string _ImgPath;
        partial void OnGetImgPath(ref string value);
        partial void OnImgPathChanging(ref string value);
        partial void OnImgPathChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemCatInvItemCategory", "InvItemCategories")]
        public virtual EntityCollection<InvItemCategories> InvItemCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemCategories>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemCategories>("DB_A0A0AE_ClientModel.FK_InvItemCatInvItemCategory", "InvItemCategories", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemClasses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemClasses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemClasses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemClasses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invClassificationId">Initial value of InvClassificationId.</param>
        public static InvItemClasses CreateInvItemClasses(int id, int invItemId, int invClassificationId)
        {
            InvItemClasses invItemClasses = new InvItemClasses();
            invItemClasses.Id = id;
            invItemClasses.InvItemId = invItemId;
            invItemClasses.InvClassificationId = invClassificationId;
            return invItemClasses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvClassificationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvClassificationId
        {
            get
            {
                int value = _InvClassificationId;
                OnGetInvClassificationId(ref value);
                return value;
            }
            set
            {
                if (_InvClassificationId != value)
                {
                  OnInvClassificationIdChanging(ref value);
                  ReportPropertyChanging("InvClassificationId");
                  _InvClassificationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvClassificationId");
                  OnInvClassificationIdChanged();
              }
            }
        }
        private int _InvClassificationId;
        partial void OnGetInvClassificationId(ref int value);
        partial void OnInvClassificationIdChanging(ref int value);
        partial void OnInvClassificationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemClass", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvClassifications in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvClassificationInvItemClass", "InvClassifications")]
        public virtual InvClassifications InvClassifications
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvClassifications").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvClassifications").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvClassifications in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvClassifications> InvClassificationsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvClassifications");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvClassifications", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvItemClass", "InvClassifications").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemCustomSpecs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemCustomSpecs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemCustomSpecs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemCustomSpecs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invCustomSpecId">Initial value of InvCustomSpecId.</param>
        /// <param name="order">Initial value of Order.</param>
        public static InvItemCustomSpecs CreateInvItemCustomSpecs(int id, int invItemId, int invCustomSpecId, string order)
        {
            InvItemCustomSpecs invItemCustomSpecs = new InvItemCustomSpecs();
            invItemCustomSpecs.Id = id;
            invItemCustomSpecs.InvItemId = invItemId;
            invItemCustomSpecs.InvCustomSpecId = invCustomSpecId;
            invItemCustomSpecs.Order = order;
            return invItemCustomSpecs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvCustomSpecId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvCustomSpecId
        {
            get
            {
                int value = _InvCustomSpecId;
                OnGetInvCustomSpecId(ref value);
                return value;
            }
            set
            {
                if (_InvCustomSpecId != value)
                {
                  OnInvCustomSpecIdChanging(ref value);
                  ReportPropertyChanging("InvCustomSpecId");
                  _InvCustomSpecId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCustomSpecId");
                  OnInvCustomSpecIdChanged();
              }
            }
        }
        private int _InvCustomSpecId;
        partial void OnGetInvCustomSpecId(ref int value);
        partial void OnInvCustomSpecIdChanging(ref int value);
        partial void OnInvCustomSpecIdChanged();
    
        /// <summary>
        /// There are no comments for SpecValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SpecValue
        {
            get
            {
                string value = _SpecValue;
                OnGetSpecValue(ref value);
                return value;
            }
            set
            {
                if (_SpecValue != value)
                {
                  OnSpecValueChanging(ref value);
                  ReportPropertyChanging("SpecValue");
                  _SpecValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SpecValue");
                  OnSpecValueChanged();
              }
            }
        }
        private string _SpecValue;
        partial void OnGetSpecValue(ref string value);
        partial void OnSpecValueChanging(ref string value);
        partial void OnSpecValueChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Order in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Order
        {
            get
            {
                string value = _Order;
                OnGetOrder(ref value);
                return value;
            }
            set
            {
                if (_Order != value)
                {
                  OnOrderChanging(ref value);
                  ReportPropertyChanging("Order");
                  _Order = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Order");
                  OnOrderChanged();
              }
            }
        }
        private string _Order;
        partial void OnGetOrder(ref string value);
        partial void OnOrderChanging(ref string value);
        partial void OnOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemCustomSpec", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs")]
        public virtual InvCustomSpecs InvCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCustomSpecs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCustomSpecs> InvCustomSpecsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvCustomSpecInvItemCustomSpec", "InvCustomSpecs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemMasters in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemMasters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemMasters : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemMasters object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="batchNo">Initial value of BatchNo.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        /// <param name="invItemBrandId">Initial value of InvItemBrandId.</param>
        /// <param name="invItemOriginId">Initial value of InvItemOriginId.</param>
        /// <param name="invStoreAreaId">Initial value of InvStoreAreaId.</param>
        public static InvItemMasters CreateInvItemMasters(int id, int invItemId, string batchNo, int invUomId, int invItemBrandId, int invItemOriginId, int invStoreAreaId)
        {
            InvItemMasters invItemMasters = new InvItemMasters();
            invItemMasters.Id = id;
            invItemMasters.InvItemId = invItemId;
            invItemMasters.BatchNo = batchNo;
            invItemMasters.InvUomId = invUomId;
            invItemMasters.InvItemBrandId = invItemBrandId;
            invItemMasters.InvItemOriginId = invItemOriginId;
            invItemMasters.InvStoreAreaId = invStoreAreaId;
            return invItemMasters;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for LotNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LotNo
        {
            get
            {
                string value = _LotNo;
                OnGetLotNo(ref value);
                return value;
            }
            set
            {
                if (_LotNo != value)
                {
                  OnLotNoChanging(ref value);
                  ReportPropertyChanging("LotNo");
                  _LotNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LotNo");
                  OnLotNoChanged();
              }
            }
        }
        private string _LotNo;
        partial void OnGetLotNo(ref string value);
        partial void OnLotNoChanging(ref string value);
        partial void OnLotNoChanged();
    
        /// <summary>
        /// There are no comments for BatchNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BatchNo
        {
            get
            {
                string value = _BatchNo;
                OnGetBatchNo(ref value);
                return value;
            }
            set
            {
                if (_BatchNo != value)
                {
                  OnBatchNoChanging(ref value);
                  ReportPropertyChanging("BatchNo");
                  _BatchNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BatchNo");
                  OnBatchNoChanged();
              }
            }
        }
        private string _BatchNo;
        partial void OnGetBatchNo(ref string value);
        partial void OnBatchNoChanging(ref string value);
        partial void OnBatchNoChanged();
    
        /// <summary>
        /// There are no comments for ItemQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemQty
        {
            get
            {
                int? value = _ItemQty;
                OnGetItemQty(ref value);
                return value;
            }
            set
            {
                if (_ItemQty != value)
                {
                  OnItemQtyChanging(ref value);
                  ReportPropertyChanging("ItemQty");
                  _ItemQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemQty");
                  OnItemQtyChanged();
              }
            }
        }
        private int? _ItemQty;
        partial void OnGetItemQty(ref int? value);
        partial void OnItemQtyChanging(ref int? value);
        partial void OnItemQtyChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for InvItemBrandId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemBrandId
        {
            get
            {
                int value = _InvItemBrandId;
                OnGetInvItemBrandId(ref value);
                return value;
            }
            set
            {
                if (_InvItemBrandId != value)
                {
                  OnInvItemBrandIdChanging(ref value);
                  ReportPropertyChanging("InvItemBrandId");
                  _InvItemBrandId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemBrandId");
                  OnInvItemBrandIdChanged();
              }
            }
        }
        private int _InvItemBrandId;
        partial void OnGetInvItemBrandId(ref int value);
        partial void OnInvItemBrandIdChanging(ref int value);
        partial void OnInvItemBrandIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemOriginId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemOriginId
        {
            get
            {
                int value = _InvItemOriginId;
                OnGetInvItemOriginId(ref value);
                return value;
            }
            set
            {
                if (_InvItemOriginId != value)
                {
                  OnInvItemOriginIdChanging(ref value);
                  ReportPropertyChanging("InvItemOriginId");
                  _InvItemOriginId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemOriginId");
                  OnInvItemOriginIdChanged();
              }
            }
        }
        private int _InvItemOriginId;
        partial void OnGetInvItemOriginId(ref int value);
        partial void OnInvItemOriginIdChanging(ref int value);
        partial void OnInvItemOriginIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreAreaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreAreaId
        {
            get
            {
                int value = _InvStoreAreaId;
                OnGetInvStoreAreaId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreAreaId != value)
                {
                  OnInvStoreAreaIdChanging(ref value);
                  ReportPropertyChanging("InvStoreAreaId");
                  _InvStoreAreaId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreAreaId");
                  OnInvStoreAreaIdChanged();
              }
            }
        }
        private int _InvStoreAreaId = 1;
        partial void OnGetInvStoreAreaId(ref int value);
        partial void OnInvStoreAreaIdChanging(ref int value);
        partial void OnInvStoreAreaIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemMaster", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvItemMaster", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvUoms").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemBrands in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemBrandInvItemMaster", "InvItemBrands")]
        public virtual InvItemBrands InvItemBrands
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemBrands>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemBrands").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemBrands>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemBrands").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemBrands in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItemBrands> InvItemBrandsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemBrands>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemBrands");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItemBrands>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemBrands", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemBrands>("DB_A0A0AE_ClientModel.FK_InvItemBrandInvItemMaster", "InvItemBrands").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemOrigins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemOriginInvItemMaster", "InvItemOrigins")]
        public virtual InvItemOrigins InvItemOrigins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemOrigins>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemOrigins").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemOrigins>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemOrigins").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemOrigins in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItemOrigins> InvItemOriginsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemOrigins>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemOrigins");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItemOrigins>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemOrigins", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemOrigins>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemOrigins").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvStoreAreas in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreAreaInvItemMaster", "InvStoreAreas")]
        public virtual InvStoreAreas InvStoreAreas
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvStoreAreas").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvStoreAreas").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStoreAreas in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStoreAreas> InvStoreAreasReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvStoreAreas");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvStoreAreas", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvStoreAreas").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtlxItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemMasterInvTrxDtlxItemMaster", "InvTrxDtlxItemMasters")]
        public virtual EntityCollection<InvTrxDtlxItemMasters> InvTrxDtlxItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxDtlxItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvTrxDtlxItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxDtlxItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvTrxDtlxItemMasters", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemOrigins in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemOrigins")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemOrigins : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemOrigins object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static InvItemOrigins CreateInvItemOrigins(int id, string name)
        {
            InvItemOrigins invItemOrigins = new InvItemOrigins();
            invItemOrigins.Id = id;
            invItemOrigins.Name = name;
            return invItemOrigins;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemOriginInvItemMaster", "InvItemMasters")]
        public virtual EntityCollection<InvItemMasters> InvItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemOriginInvItemMaster", "InvItemMasters", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        public static InvItems CreateInvItems(int id, string description)
        {
            InvItems invItems = new InvItems();
            invItems.Id = id;
            invItems.Description = description;
            return invItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ItemCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ItemCode
        {
            get
            {
                string value = _ItemCode;
                OnGetItemCode(ref value);
                return value;
            }
            set
            {
                if (_ItemCode != value)
                {
                  OnItemCodeChanging(ref value);
                  ReportPropertyChanging("ItemCode");
                  _ItemCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ItemCode");
                  OnItemCodeChanged();
              }
            }
        }
        private string _ItemCode;
        partial void OnGetItemCode(ref string value);
        partial void OnItemCodeChanging(ref string value);
        partial void OnItemCodeChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for ImgPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImgPath
        {
            get
            {
                string value = _ImgPath;
                OnGetImgPath(ref value);
                return value;
            }
            set
            {
                if (_ImgPath != value)
                {
                  OnImgPathChanging(ref value);
                  ReportPropertyChanging("ImgPath");
                  _ImgPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImgPath");
                  OnImgPathChanged();
              }
            }
        }
        private string _ImgPath;
        partial void OnGetImgPath(ref string value);
        partial void OnImgPathChanging(ref string value);
        partial void OnImgPathChanged();
    
        /// <summary>
        /// There are no comments for ContactInfo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ContactInfo
        {
            get
            {
                string value = _ContactInfo;
                OnGetContactInfo(ref value);
                return value;
            }
            set
            {
                if (_ContactInfo != value)
                {
                  OnContactInfoChanging(ref value);
                  ReportPropertyChanging("ContactInfo");
                  _ContactInfo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ContactInfo");
                  OnContactInfoChanged();
              }
            }
        }
        private string _ContactInfo;
        partial void OnGetContactInfo(ref string value);
        partial void OnContactInfoChanging(ref string value);
        partial void OnContactInfoChanged();
    
        /// <summary>
        /// There are no comments for ViewLabel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ViewLabel
        {
            get
            {
                string value = _ViewLabel;
                OnGetViewLabel(ref value);
                return value;
            }
            set
            {
                if (_ViewLabel != value)
                {
                  OnViewLabelChanging(ref value);
                  ReportPropertyChanging("ViewLabel");
                  _ViewLabel = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ViewLabel");
                  OnViewLabelChanged();
              }
            }
        }
        private string _ViewLabel;
        partial void OnGetViewLabel(ref string value);
        partial void OnViewLabelChanging(ref string value);
        partial void OnViewLabelChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? OrderNo
        {
            get
            {
                int? value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int? _OrderNo;
        partial void OnGetOrderNo(ref int? value);
        partial void OnOrderNoChanging(ref int? value);
        partial void OnOrderNoChanged();
    
        /// <summary>
        /// There are no comments for InvTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvTypeId
        {
            get
            {
                int? value = _InvTypeId;
                OnGetInvTypeId(ref value);
                return value;
            }
            set
            {
                if (_InvTypeId != value)
                {
                  OnInvTypeIdChanging(ref value);
                  ReportPropertyChanging("InvTypeId");
                  _InvTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTypeId");
                  OnInvTypeIdChanged();
              }
            }
        }
        private int? _InvTypeId;
        partial void OnGetInvTypeId(ref int? value);
        partial void OnInvTypeIdChanging(ref int? value);
        partial void OnInvTypeIdChanged();
    
        /// <summary>
        /// There are no comments for InvCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvCategoryId
        {
            get
            {
                int? value = _InvCategoryId;
                OnGetInvCategoryId(ref value);
                return value;
            }
            set
            {
                if (_InvCategoryId != value)
                {
                  OnInvCategoryIdChanging(ref value);
                  ReportPropertyChanging("InvCategoryId");
                  _InvCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvCategoryId");
                  OnInvCategoryIdChanged();
              }
            }
        }
        private int? _InvCategoryId;
        partial void OnGetInvCategoryId(ref int? value);
        partial void OnInvCategoryIdChanging(ref int? value);
        partial void OnInvCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvUomId
        {
            get
            {
                int? value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int? _InvUomId;
        partial void OnGetInvUomId(ref int? value);
        partial void OnInvUomIdChanging(ref int? value);
        partial void OnInvUomIdChanged();
    
        /// <summary>
        /// There are no comments for Material in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Material
        {
            get
            {
                string value = _Material;
                OnGetMaterial(ref value);
                return value;
            }
            set
            {
                if (_Material != value)
                {
                  OnMaterialChanging(ref value);
                  ReportPropertyChanging("Material");
                  _Material = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Material");
                  OnMaterialChanged();
              }
            }
        }
        private string _Material;
        partial void OnGetMaterial(ref string value);
        partial void OnMaterialChanging(ref string value);
        partial void OnMaterialChanged();
    
        /// <summary>
        /// There are no comments for Weight in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Weight
        {
            get
            {
                decimal? value = _Weight;
                OnGetWeight(ref value);
                return value;
            }
            set
            {
                if (_Weight != value)
                {
                  OnWeightChanging(ref value);
                  ReportPropertyChanging("Weight");
                  _Weight = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Weight");
                  OnWeightChanged();
              }
            }
        }
        private decimal? _Weight;
        partial void OnGetWeight(ref decimal? value);
        partial void OnWeightChanging(ref decimal? value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CoopMemberItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemCoopMemberItem", "CoopMemberItems")]
        public virtual EntityCollection<CoopMemberItems> CoopMemberItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CoopMemberItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "CoopMemberItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CoopMemberItems>("DB_A0A0AE_ClientModel.FK_InvItemCoopMemberItem", "CoopMemberItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvAdjItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvAdjItem", "InvAdjItems")]
        public virtual EntityCollection<InvAdjItems> InvAdjItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvAdjItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvAdjItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvAdjItems>("DB_A0A0AE_ClientModel.FK_InvItemInvAdjItem", "InvAdjItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCarGateControls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvCarGateControl", "InvCarGateControls")]
        public virtual EntityCollection<InvCarGateControls> InvCarGateControls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCarGateControls>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvCarGateControls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCarGateControls>("DB_A0A0AE_ClientModel.FK_InvItemInvCarGateControl", "InvCarGateControls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCarRecords in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvCarRecord", "InvCarRecords")]
        public virtual EntityCollection<InvCarRecords> InvCarRecords
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCarRecords>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvCarRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCarRecords>("DB_A0A0AE_ClientModel.FK_InvItemInvCarRecord", "InvCarRecords", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemCategory", "InvItemCategories")]
        public virtual EntityCollection<InvItemCategories> InvItemCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemCategories>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItemCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemCategories>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCategory", "InvItemCategories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemClasses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemClass", "InvItemClasses")]
        public virtual EntityCollection<InvItemClasses> InvItemClasses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemClasses>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItemClasses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemClasses>("DB_A0A0AE_ClientModel.FK_InvItemInvItemClass", "InvItemClasses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemCustomSpecs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemCustomSpec", "InvItemCustomSpecs")]
        public virtual EntityCollection<InvItemCustomSpecs> InvItemCustomSpecs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItemCustomSpecs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemCustomSpecs>("DB_A0A0AE_ClientModel.FK_InvItemInvItemCustomSpec", "InvItemCustomSpecs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemMaster", "InvItemMasters")]
        public virtual EntityCollection<InvItemMasters> InvItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemInvItemMaster", "InvItemMasters", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvItem", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvUoms").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTypeInvItem", "InvTypes")]
        public virtual InvTypes InvTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTypes>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTypes>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTypes> InvTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTypes>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTypes>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTypes>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvCategoryInvItem", "InvCategories")]
        public virtual InvCategories InvCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvCategories> InvCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvCategories>("DB_A0A0AE_ClientModel.FK_InvCategoryInvItem", "InvCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvPoItem", "InvPoItems")]
        public virtual EntityCollection<InvPoItems> InvPoItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvPoItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvPoItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvRecItem", "InvRecItems")]
        public virtual EntityCollection<InvRecItems> InvRecItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvRecItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvRecItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvRequestItem", "InvRequestItems")]
        public virtual EntityCollection<InvRequestItems> InvRequestItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvRequestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvRequestItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvSupplierItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvSupplierItem", "InvSupplierItems")]
        public virtual EntityCollection<InvSupplierItems> InvSupplierItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvSupplierItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvSupplierItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvSupplierItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvSupplierItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvTrxDtl", "InvTrxDtls")]
        public virtual EntityCollection<InvTrxDtls> InvTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvTrxDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvTrxDtls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUomConvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvUomConvItem", "InvUomConvItems")]
        public virtual EntityCollection<InvUomConvItems> InvUomConvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvUomConvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvUomConvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvUomConvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvUomConvItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvWarningLevels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvWarningLevel", "InvWarningLevels")]
        public virtual EntityCollection<InvWarningLevels> InvWarningLevels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvWarningLevels>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvWarningLevels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvWarningLevels>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvWarningLevels", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServiceItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemJobServiceItem", "JobServiceItems")]
        public virtual EntityCollection<JobServiceItems> JobServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServiceItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "JobServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServiceItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "JobServiceItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSalesLeadItems", "SalesLeadItems")]
        public virtual EntityCollection<SalesLeadItems> SalesLeadItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "SalesLeadItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "SalesLeadItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierInvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSupplierInvItem", "SupplierInvItems")]
        public virtual EntityCollection<SupplierInvItems> SupplierInvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "SupplierInvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "SupplierInvItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSupplierPoItem", "SupplierPoItems")]
        public virtual EntityCollection<SupplierPoItems> SupplierPoItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierPoItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "SupplierPoItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierPoItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "SupplierPoItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemSpec_Steel in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemSpec_Steel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemSpec_Steel : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemSpec_Steel object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="steelMainCatId">Initial value of SteelMainCatId.</param>
        /// <param name="steelSubCatId">Initial value of SteelSubCatId.</param>
        /// <param name="steelBrandId">Initial value of SteelBrandId.</param>
        /// <param name="steelMaterialId">Initial value of SteelMaterialId.</param>
        /// <param name="steelOriginId">Initial value of SteelOriginId.</param>
        /// <param name="steelMaterialGradeId">Initial value of SteelMaterialGradeId.</param>
        /// <param name="steelSizeId">Initial value of SteelSizeId.</param>
        public static InvItemSpec_Steel CreateInvItemSpec_Steel(int id, int invItemId, int steelMainCatId, int steelSubCatId, int steelBrandId, int steelMaterialId, int steelOriginId, int steelMaterialGradeId, int steelSizeId)
        {
            InvItemSpec_Steel invItemSpec_Steel = new InvItemSpec_Steel();
            invItemSpec_Steel.Id = id;
            invItemSpec_Steel.InvItemId = invItemId;
            invItemSpec_Steel.SteelMainCatId = steelMainCatId;
            invItemSpec_Steel.SteelSubCatId = steelSubCatId;
            invItemSpec_Steel.SteelBrandId = steelBrandId;
            invItemSpec_Steel.SteelMaterialId = steelMaterialId;
            invItemSpec_Steel.SteelOriginId = steelOriginId;
            invItemSpec_Steel.SteelMaterialGradeId = steelMaterialGradeId;
            invItemSpec_Steel.SteelSizeId = steelSizeId;
            return invItemSpec_Steel;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for SteelMainCatId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelMainCatId
        {
            get
            {
                int value = _SteelMainCatId;
                OnGetSteelMainCatId(ref value);
                return value;
            }
            set
            {
                if (_SteelMainCatId != value)
                {
                  OnSteelMainCatIdChanging(ref value);
                  ReportPropertyChanging("SteelMainCatId");
                  _SteelMainCatId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelMainCatId");
                  OnSteelMainCatIdChanged();
              }
            }
        }
        private int _SteelMainCatId;
        partial void OnGetSteelMainCatId(ref int value);
        partial void OnSteelMainCatIdChanging(ref int value);
        partial void OnSteelMainCatIdChanged();
    
        /// <summary>
        /// There are no comments for SteelSubCatId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelSubCatId
        {
            get
            {
                int value = _SteelSubCatId;
                OnGetSteelSubCatId(ref value);
                return value;
            }
            set
            {
                if (_SteelSubCatId != value)
                {
                  OnSteelSubCatIdChanging(ref value);
                  ReportPropertyChanging("SteelSubCatId");
                  _SteelSubCatId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelSubCatId");
                  OnSteelSubCatIdChanged();
              }
            }
        }
        private int _SteelSubCatId;
        partial void OnGetSteelSubCatId(ref int value);
        partial void OnSteelSubCatIdChanging(ref int value);
        partial void OnSteelSubCatIdChanged();
    
        /// <summary>
        /// There are no comments for SteelBrandId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelBrandId
        {
            get
            {
                int value = _SteelBrandId;
                OnGetSteelBrandId(ref value);
                return value;
            }
            set
            {
                if (_SteelBrandId != value)
                {
                  OnSteelBrandIdChanging(ref value);
                  ReportPropertyChanging("SteelBrandId");
                  _SteelBrandId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelBrandId");
                  OnSteelBrandIdChanged();
              }
            }
        }
        private int _SteelBrandId;
        partial void OnGetSteelBrandId(ref int value);
        partial void OnSteelBrandIdChanging(ref int value);
        partial void OnSteelBrandIdChanged();
    
        /// <summary>
        /// There are no comments for SteelMaterialId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelMaterialId
        {
            get
            {
                int value = _SteelMaterialId;
                OnGetSteelMaterialId(ref value);
                return value;
            }
            set
            {
                if (_SteelMaterialId != value)
                {
                  OnSteelMaterialIdChanging(ref value);
                  ReportPropertyChanging("SteelMaterialId");
                  _SteelMaterialId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelMaterialId");
                  OnSteelMaterialIdChanged();
              }
            }
        }
        private int _SteelMaterialId;
        partial void OnGetSteelMaterialId(ref int value);
        partial void OnSteelMaterialIdChanging(ref int value);
        partial void OnSteelMaterialIdChanged();
    
        /// <summary>
        /// There are no comments for SteelOriginId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelOriginId
        {
            get
            {
                int value = _SteelOriginId;
                OnGetSteelOriginId(ref value);
                return value;
            }
            set
            {
                if (_SteelOriginId != value)
                {
                  OnSteelOriginIdChanging(ref value);
                  ReportPropertyChanging("SteelOriginId");
                  _SteelOriginId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelOriginId");
                  OnSteelOriginIdChanged();
              }
            }
        }
        private int _SteelOriginId;
        partial void OnGetSteelOriginId(ref int value);
        partial void OnSteelOriginIdChanging(ref int value);
        partial void OnSteelOriginIdChanged();
    
        /// <summary>
        /// There are no comments for SteelMaterialGradeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelMaterialGradeId
        {
            get
            {
                int value = _SteelMaterialGradeId;
                OnGetSteelMaterialGradeId(ref value);
                return value;
            }
            set
            {
                if (_SteelMaterialGradeId != value)
                {
                  OnSteelMaterialGradeIdChanging(ref value);
                  ReportPropertyChanging("SteelMaterialGradeId");
                  _SteelMaterialGradeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelMaterialGradeId");
                  OnSteelMaterialGradeIdChanged();
              }
            }
        }
        private int _SteelMaterialGradeId;
        partial void OnGetSteelMaterialGradeId(ref int value);
        partial void OnSteelMaterialGradeIdChanging(ref int value);
        partial void OnSteelMaterialGradeIdChanged();
    
        /// <summary>
        /// There are no comments for WtKgm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? WtKgm
        {
            get
            {
                decimal? value = _WtKgm;
                OnGetWtKgm(ref value);
                return value;
            }
            set
            {
                if (_WtKgm != value)
                {
                  OnWtKgmChanging(ref value);
                  ReportPropertyChanging("WtKgm");
                  _WtKgm = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WtKgm");
                  OnWtKgmChanged();
              }
            }
        }
        private decimal? _WtKgm;
        partial void OnGetWtKgm(ref decimal? value);
        partial void OnWtKgmChanging(ref decimal? value);
        partial void OnWtKgmChanged();
    
        /// <summary>
        /// There are no comments for WtKgpc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? WtKgpc
        {
            get
            {
                decimal? value = _WtKgpc;
                OnGetWtKgpc(ref value);
                return value;
            }
            set
            {
                if (_WtKgpc != value)
                {
                  OnWtKgpcChanging(ref value);
                  ReportPropertyChanging("WtKgpc");
                  _WtKgpc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WtKgpc");
                  OnWtKgpcChanged();
              }
            }
        }
        private decimal? _WtKgpc;
        partial void OnGetWtKgpc(ref decimal? value);
        partial void OnWtKgpcChanging(ref decimal? value);
        partial void OnWtKgpcChanged();
    
        /// <summary>
        /// There are no comments for SteelSizeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SteelSizeId
        {
            get
            {
                int value = _SteelSizeId;
                OnGetSteelSizeId(ref value);
                return value;
            }
            set
            {
                if (_SteelSizeId != value)
                {
                  OnSteelSizeIdChanging(ref value);
                  ReportPropertyChanging("SteelSizeId");
                  _SteelSizeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SteelSizeId");
                  OnSteelSizeIdChanged();
              }
            }
        }
        private int _SteelSizeId = 1;
        partial void OnGetSteelSizeId(ref int value);
        partial void OnSteelSizeIdChanging(ref int value);
        partial void OnSteelSizeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SteelSizes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelSizeInvItemSpec_Steel", "SteelSizes")]
        public virtual SteelSizes SteelSizes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSizes>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "SteelSizes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSizes>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "SteelSizes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelSizes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelSizes> SteelSizesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSizes>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "SteelSizes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelSizes>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "SteelSizes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSizes>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "SteelSizes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvItemSpec_Steel", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvItemSpec_Steel", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SteelMainCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats")]
        public virtual SteelMainCats SteelMainCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMainCats>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMainCats>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelMainCats in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelMainCats> SteelMainCatsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMainCats>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelMainCats>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMainCats>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "SteelMainCats").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SteelSubCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats")]
        public virtual SteelSubCats SteelSubCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSubCats>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSubCats>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelSubCats in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelSubCats> SteelSubCatsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSubCats>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelSubCats>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelSubCats>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "SteelSubCats").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SteelBrands in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelBrandInvItemSpec_Steel", "SteelBrands")]
        public virtual SteelBrands SteelBrands
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelBrands>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "SteelBrands").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelBrands>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "SteelBrands").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelBrands in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelBrands> SteelBrandsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelBrands>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "SteelBrands");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelBrands>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "SteelBrands", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelBrands>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "SteelBrands").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SteelMaterials in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials")]
        public virtual SteelMaterials SteelMaterials
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterials>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterials>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelMaterials in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelMaterials> SteelMaterialsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterials>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelMaterials>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterials>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "SteelMaterials").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SteelOrigins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelOriginInvItemSpec_Steel", "SteelOrigins")]
        public virtual SteelOrigins SteelOrigins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelOrigins>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "SteelOrigins").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelOrigins>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "SteelOrigins").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelOrigins in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelOrigins> SteelOriginsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelOrigins>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "SteelOrigins");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelOrigins>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "SteelOrigins", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelOrigins>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "SteelOrigins").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SteelMaterialGrades in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades")]
        public virtual SteelMaterialGrades SteelMaterialGrades
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterialGrades>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterialGrades>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SteelMaterialGrades in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SteelMaterialGrades> SteelMaterialGradesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterialGrades>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SteelMaterialGrades>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SteelMaterialGrades>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "SteelMaterialGrades").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvItemSysDefinedSpecs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvItemSysDefinedSpecs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvItemSysDefinedSpecs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvItemSysDefinedSpecs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="specCode">Initial value of SpecCode.</param>
        public static InvItemSysDefinedSpecs CreateInvItemSysDefinedSpecs(int id, string specCode)
        {
            InvItemSysDefinedSpecs invItemSysDefinedSpecs = new InvItemSysDefinedSpecs();
            invItemSysDefinedSpecs.Id = id;
            invItemSysDefinedSpecs.SpecCode = specCode;
            return invItemSysDefinedSpecs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SpecName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SpecName
        {
            get
            {
                string value = _SpecName;
                OnGetSpecName(ref value);
                return value;
            }
            set
            {
                if (_SpecName != value)
                {
                  OnSpecNameChanging(ref value);
                  ReportPropertyChanging("SpecName");
                  _SpecName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SpecName");
                  OnSpecNameChanged();
              }
            }
        }
        private string _SpecName;
        partial void OnGetSpecName(ref string value);
        partial void OnSpecNameChanging(ref string value);
        partial void OnSpecNameChanged();
    
        /// <summary>
        /// There are no comments for SpecCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SpecCode
        {
            get
            {
                string value = _SpecCode;
                OnGetSpecCode(ref value);
                return value;
            }
            set
            {
                if (_SpecCode != value)
                {
                  OnSpecCodeChanging(ref value);
                  ReportPropertyChanging("SpecCode");
                  _SpecCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SpecCode");
                  OnSpecCodeChanged();
              }
            }
        }
        private string _SpecCode;
        partial void OnGetSpecCode(ref string value);
        partial void OnSpecCodeChanging(ref string value);
        partial void OnSpecCodeChanged();
    
        /// <summary>
        /// There are no comments for SpecGroup in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SpecGroup
        {
            get
            {
                string value = _SpecGroup;
                OnGetSpecGroup(ref value);
                return value;
            }
            set
            {
                if (_SpecGroup != value)
                {
                  OnSpecGroupChanging(ref value);
                  ReportPropertyChanging("SpecGroup");
                  _SpecGroup = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SpecGroup");
                  OnSpecGroupChanged();
              }
            }
        }
        private string _SpecGroup;
        partial void OnGetSpecGroup(ref string value);
        partial void OnSpecGroupChanging(ref string value);
        partial void OnSpecGroupChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvCategorySpecDefs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvCategorySpecDefs")]
        public virtual EntityCollection<InvCategorySpecDefs> InvCategorySpecDefs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvCategorySpecDefs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvCategorySpecDefs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvCategorySpecDefs>("DB_A0A0AE_ClientModel.FK_InvItemSysDefinedSpecsInvCategorySpecDef", "InvCategorySpecDefs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvPoApprovals in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvPoApprovals")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvPoApprovals : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvPoApprovals object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="encodedBy">Initial value of EncodedBy.</param>
        /// <param name="encodedDate">Initial value of EncodedDate.</param>
        /// <param name="invPoHdrId">Initial value of InvPoHdrId.</param>
        public static InvPoApprovals CreateInvPoApprovals(int id, string encodedBy, global::System.DateTime encodedDate, int invPoHdrId)
        {
            InvPoApprovals invPoApprovals = new InvPoApprovals();
            invPoApprovals.Id = id;
            invPoApprovals.EncodedBy = encodedBy;
            invPoApprovals.EncodedDate = encodedDate;
            invPoApprovals.InvPoHdrId = invPoHdrId;
            return invPoApprovals;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ApprovedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ApprovedBy
        {
            get
            {
                string value = _ApprovedBy;
                OnGetApprovedBy(ref value);
                return value;
            }
            set
            {
                if (_ApprovedBy != value)
                {
                  OnApprovedByChanging(ref value);
                  ReportPropertyChanging("ApprovedBy");
                  _ApprovedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApprovedBy");
                  OnApprovedByChanged();
              }
            }
        }
        private string _ApprovedBy;
        partial void OnGetApprovedBy(ref string value);
        partial void OnApprovedByChanging(ref string value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// There are no comments for ApprovedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ApprovedDate
        {
            get
            {
                global::System.DateTime? value = _ApprovedDate;
                OnGetApprovedDate(ref value);
                return value;
            }
            set
            {
                if (_ApprovedDate != value)
                {
                  OnApprovedDateChanging(ref value);
                  ReportPropertyChanging("ApprovedDate");
                  _ApprovedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovedDate");
                  OnApprovedDateChanged();
              }
            }
        }
        private global::System.DateTime? _ApprovedDate;
        partial void OnGetApprovedDate(ref global::System.DateTime? value);
        partial void OnApprovedDateChanging(ref global::System.DateTime? value);
        partial void OnApprovedDateChanged();
    
        /// <summary>
        /// There are no comments for VerifiedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VerifiedBy
        {
            get
            {
                string value = _VerifiedBy;
                OnGetVerifiedBy(ref value);
                return value;
            }
            set
            {
                if (_VerifiedBy != value)
                {
                  OnVerifiedByChanging(ref value);
                  ReportPropertyChanging("VerifiedBy");
                  _VerifiedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VerifiedBy");
                  OnVerifiedByChanged();
              }
            }
        }
        private string _VerifiedBy;
        partial void OnGetVerifiedBy(ref string value);
        partial void OnVerifiedByChanging(ref string value);
        partial void OnVerifiedByChanged();
    
        /// <summary>
        /// There are no comments for VerifiedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? VerifiedDate
        {
            get
            {
                global::System.DateTime? value = _VerifiedDate;
                OnGetVerifiedDate(ref value);
                return value;
            }
            set
            {
                if (_VerifiedDate != value)
                {
                  OnVerifiedDateChanging(ref value);
                  ReportPropertyChanging("VerifiedDate");
                  _VerifiedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VerifiedDate");
                  OnVerifiedDateChanged();
              }
            }
        }
        private global::System.DateTime? _VerifiedDate;
        partial void OnGetVerifiedDate(ref global::System.DateTime? value);
        partial void OnVerifiedDateChanging(ref global::System.DateTime? value);
        partial void OnVerifiedDateChanged();
    
        /// <summary>
        /// There are no comments for EncodedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EncodedBy
        {
            get
            {
                string value = _EncodedBy;
                OnGetEncodedBy(ref value);
                return value;
            }
            set
            {
                if (_EncodedBy != value)
                {
                  OnEncodedByChanging(ref value);
                  ReportPropertyChanging("EncodedBy");
                  _EncodedBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EncodedBy");
                  OnEncodedByChanged();
              }
            }
        }
        private string _EncodedBy;
        partial void OnGetEncodedBy(ref string value);
        partial void OnEncodedByChanging(ref string value);
        partial void OnEncodedByChanged();
    
        /// <summary>
        /// There are no comments for EncodedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime EncodedDate
        {
            get
            {
                global::System.DateTime value = _EncodedDate;
                OnGetEncodedDate(ref value);
                return value;
            }
            set
            {
                if (_EncodedDate != value)
                {
                  OnEncodedDateChanging(ref value);
                  ReportPropertyChanging("EncodedDate");
                  _EncodedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncodedDate");
                  OnEncodedDateChanged();
              }
            }
        }
        private global::System.DateTime _EncodedDate;
        partial void OnGetEncodedDate(ref global::System.DateTime value);
        partial void OnEncodedDateChanging(ref global::System.DateTime value);
        partial void OnEncodedDateChanged();
    
        /// <summary>
        /// There are no comments for InvPoHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvPoHdrId
        {
            get
            {
                int value = _InvPoHdrId;
                OnGetInvPoHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvPoHdrId != value)
                {
                  OnInvPoHdrIdChanging(ref value);
                  ReportPropertyChanging("InvPoHdrId");
                  _InvPoHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvPoHdrId");
                  OnInvPoHdrIdChanged();
              }
            }
        }
        private int _InvPoHdrId;
        partial void OnGetInvPoHdrId(ref int value);
        partial void OnInvPoHdrIdChanging(ref int value);
        partial void OnInvPoHdrIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrInvPoApproval", "InvPoHdrs")]
        public virtual InvPoHdrs InvPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvPoHdrs> InvPoHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoHdrs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvPoHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvPoHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvPoHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvPoHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invSupplierId">Initial value of InvSupplierId.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        /// <param name="dtPo">Initial value of DtPo.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="invPoHdrStatusId">Initial value of InvPoHdrStatusId.</param>
        public static InvPoHdrs CreateInvPoHdrs(int id, int invSupplierId, int invStoreId, global::System.DateTime dtPo, string userId, int invPoHdrStatusId)
        {
            InvPoHdrs invPoHdrs = new InvPoHdrs();
            invPoHdrs.Id = id;
            invPoHdrs.InvSupplierId = invSupplierId;
            invPoHdrs.InvStoreId = invStoreId;
            invPoHdrs.DtPo = dtPo;
            invPoHdrs.UserId = userId;
            invPoHdrs.InvPoHdrStatusId = invPoHdrStatusId;
            return invPoHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvSupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvSupplierId
        {
            get
            {
                int value = _InvSupplierId;
                OnGetInvSupplierId(ref value);
                return value;
            }
            set
            {
                if (_InvSupplierId != value)
                {
                  OnInvSupplierIdChanging(ref value);
                  ReportPropertyChanging("InvSupplierId");
                  _InvSupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvSupplierId");
                  OnInvSupplierIdChanged();
              }
            }
        }
        private int _InvSupplierId;
        partial void OnGetInvSupplierId(ref int value);
        partial void OnInvSupplierIdChanging(ref int value);
        partial void OnInvSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();
    
        /// <summary>
        /// There are no comments for DtPo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtPo
        {
            get
            {
                global::System.DateTime value = _DtPo;
                OnGetDtPo(ref value);
                return value;
            }
            set
            {
                if (_DtPo != value)
                {
                  OnDtPoChanging(ref value);
                  ReportPropertyChanging("DtPo");
                  _DtPo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtPo");
                  OnDtPoChanged();
              }
            }
        }
        private global::System.DateTime _DtPo;
        partial void OnGetDtPo(ref global::System.DateTime value);
        partial void OnDtPoChanging(ref global::System.DateTime value);
        partial void OnDtPoChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for InvPoHdrStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvPoHdrStatusId
        {
            get
            {
                int value = _InvPoHdrStatusId;
                OnGetInvPoHdrStatusId(ref value);
                return value;
            }
            set
            {
                if (_InvPoHdrStatusId != value)
                {
                  OnInvPoHdrStatusIdChanging(ref value);
                  ReportPropertyChanging("InvPoHdrStatusId");
                  _InvPoHdrStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvPoHdrStatusId");
                  OnInvPoHdrStatusIdChanged();
              }
            }
        }
        private int _InvPoHdrStatusId;
        partial void OnGetInvPoHdrStatusId(ref int value);
        partial void OnInvPoHdrStatusIdChanging(ref int value);
        partial void OnInvPoHdrStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvPoApprovals in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrInvPoApproval", "InvPoApprovals")]
        public virtual EntityCollection<InvPoApprovals> InvPoApprovals
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoApprovals>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoApprovals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoApprovals>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoApproval", "InvPoApprovals", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvPoHdr", "InvSuppliers")]
        public virtual InvSuppliers InvSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvSuppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvSuppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvSuppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvSuppliers> InvSuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvSuppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvSuppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvSuppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvPoHdr", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvStores").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoHdrStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus")]
        public virtual InvPoHdrStatus InvPoHdrStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrStatus>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrStatus>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoHdrStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvPoHdrStatus> InvPoHdrStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrStatus>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvPoHdrStatus>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrStatus>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrInvPoItem", "InvPoItems")]
        public virtual EntityCollection<InvPoItems> InvPoItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoItems>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoItems>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvPoHdrStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvPoHdrStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvPoHdrStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvPoHdrStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        public static InvPoHdrStatus CreateInvPoHdrStatus(int id, string status, int orderNo)
        {
            InvPoHdrStatus invPoHdrStatus = new InvPoHdrStatus();
            invPoHdrStatus.Id = id;
            invPoHdrStatus.Status = status;
            invPoHdrStatus.OrderNo = orderNo;
            return invPoHdrStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrStatusInvPoHdr", "InvPoHdrs")]
        public virtual EntityCollection<InvPoHdrs> InvPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrStatusInvPoHdr", "InvPoHdrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvPoItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvPoItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvPoItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvPoItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invPoHdrId">Initial value of InvPoHdrId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="itemQty">Initial value of ItemQty.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        public static InvPoItems CreateInvPoItems(int id, int invPoHdrId, int invItemId, string itemQty, int invUomId)
        {
            InvPoItems invPoItems = new InvPoItems();
            invPoItems.Id = id;
            invPoItems.InvPoHdrId = invPoHdrId;
            invPoItems.InvItemId = invItemId;
            invPoItems.ItemQty = itemQty;
            invPoItems.InvUomId = invUomId;
            return invPoItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvPoHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvPoHdrId
        {
            get
            {
                int value = _InvPoHdrId;
                OnGetInvPoHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvPoHdrId != value)
                {
                  OnInvPoHdrIdChanging(ref value);
                  ReportPropertyChanging("InvPoHdrId");
                  _InvPoHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvPoHdrId");
                  OnInvPoHdrIdChanged();
              }
            }
        }
        private int _InvPoHdrId;
        partial void OnGetInvPoHdrId(ref int value);
        partial void OnInvPoHdrIdChanging(ref int value);
        partial void OnInvPoHdrIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for ItemQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ItemQty
        {
            get
            {
                string value = _ItemQty;
                OnGetItemQty(ref value);
                return value;
            }
            set
            {
                if (_ItemQty != value)
                {
                  OnItemQtyChanging(ref value);
                  ReportPropertyChanging("ItemQty");
                  _ItemQty = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ItemQty");
                  OnItemQtyChanged();
              }
            }
        }
        private string _ItemQty;
        partial void OnGetItemQty(ref string value);
        partial void OnItemQtyChanging(ref string value);
        partial void OnItemQtyChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvPoHdrInvPoItem", "InvPoHdrs")]
        public virtual InvPoHdrs InvPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvPoHdrs> InvPoHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvPoHdrInvPoItem", "InvPoHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvPoItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvPoItem", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvPoItem", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvUoms").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvRecHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvRecHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvRecHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvRecHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        /// <param name="invSupplierId">Initial value of InvSupplierId.</param>
        /// <param name="dtRec">Initial value of DtRec.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static InvRecHdrs CreateInvRecHdrs(int id, int invStoreId, int invSupplierId, string dtRec, string status, string userId)
        {
            InvRecHdrs invRecHdrs = new InvRecHdrs();
            invRecHdrs.Id = id;
            invRecHdrs.InvStoreId = invStoreId;
            invRecHdrs.InvSupplierId = invSupplierId;
            invRecHdrs.DtRec = dtRec;
            invRecHdrs.Status = status;
            invRecHdrs.UserId = userId;
            return invRecHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();
    
        /// <summary>
        /// There are no comments for InvSupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvSupplierId
        {
            get
            {
                int value = _InvSupplierId;
                OnGetInvSupplierId(ref value);
                return value;
            }
            set
            {
                if (_InvSupplierId != value)
                {
                  OnInvSupplierIdChanging(ref value);
                  ReportPropertyChanging("InvSupplierId");
                  _InvSupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvSupplierId");
                  OnInvSupplierIdChanged();
              }
            }
        }
        private int _InvSupplierId;
        partial void OnGetInvSupplierId(ref int value);
        partial void OnInvSupplierIdChanging(ref int value);
        partial void OnInvSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for DtRec in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtRec
        {
            get
            {
                string value = _DtRec;
                OnGetDtRec(ref value);
                return value;
            }
            set
            {
                if (_DtRec != value)
                {
                  OnDtRecChanging(ref value);
                  ReportPropertyChanging("DtRec");
                  _DtRec = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtRec");
                  OnDtRecChanged();
              }
            }
        }
        private string _DtRec;
        partial void OnGetDtRec(ref string value);
        partial void OnDtRecChanging(ref string value);
        partial void OnDtRecChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvRecHdr", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvStores").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvRecHdr", "InvSuppliers")]
        public virtual InvSuppliers InvSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvSuppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvSuppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvSuppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvSuppliers> InvSuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvSuppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvSuppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvSuppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvRecHdrInvRecItem", "InvRecItems")]
        public virtual EntityCollection<InvRecItems> InvRecItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvRecItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvRecItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvRecItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvRecItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invRecHdrId">Initial value of InvRecHdrId.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        /// <param name="itemQty">Initial value of ItemQty.</param>
        public static InvRecItems CreateInvRecItems(int id, int invItemId, int invRecHdrId, int invUomId, string itemQty)
        {
            InvRecItems invRecItems = new InvRecItems();
            invRecItems.Id = id;
            invRecItems.InvItemId = invItemId;
            invRecItems.InvRecHdrId = invRecHdrId;
            invRecItems.InvUomId = invUomId;
            invRecItems.ItemQty = itemQty;
            return invRecItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvRecHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvRecHdrId
        {
            get
            {
                int value = _InvRecHdrId;
                OnGetInvRecHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvRecHdrId != value)
                {
                  OnInvRecHdrIdChanging(ref value);
                  ReportPropertyChanging("InvRecHdrId");
                  _InvRecHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvRecHdrId");
                  OnInvRecHdrIdChanged();
              }
            }
        }
        private int _InvRecHdrId;
        partial void OnGetInvRecHdrId(ref int value);
        partial void OnInvRecHdrIdChanging(ref int value);
        partial void OnInvRecHdrIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();
    
        /// <summary>
        /// There are no comments for ItemQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ItemQty
        {
            get
            {
                string value = _ItemQty;
                OnGetItemQty(ref value);
                return value;
            }
            set
            {
                if (_ItemQty != value)
                {
                  OnItemQtyChanging(ref value);
                  ReportPropertyChanging("ItemQty");
                  _ItemQty = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ItemQty");
                  OnItemQtyChanged();
              }
            }
        }
        private string _ItemQty;
        partial void OnGetItemQty(ref string value);
        partial void OnItemQtyChanging(ref string value);
        partial void OnItemQtyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvRecItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRecItem", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvRecHdrInvRecItem", "InvRecHdrs")]
        public virtual InvRecHdrs InvRecHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvRecHdrs> InvRecHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvRecHdrInvRecItem", "InvRecHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvRecItem", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvUoms").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvRecItemInvRequestItem", "InvRequestItems")]
        public virtual EntityCollection<InvRequestItems> InvRequestItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRequestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRequestItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvRequestHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvRequestHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvRequestHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvRequestHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        /// <param name="dtRec">Initial value of DtRec.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static InvRequestHdrs CreateInvRequestHdrs(int id, int invStoreId, string dtRec, string status, string userId, string remarks)
        {
            InvRequestHdrs invRequestHdrs = new InvRequestHdrs();
            invRequestHdrs.Id = id;
            invRequestHdrs.InvStoreId = invStoreId;
            invRequestHdrs.DtRec = dtRec;
            invRequestHdrs.Status = status;
            invRequestHdrs.UserId = userId;
            invRequestHdrs.Remarks = remarks;
            return invRequestHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();
    
        /// <summary>
        /// There are no comments for DtRec in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtRec
        {
            get
            {
                string value = _DtRec;
                OnGetDtRec(ref value);
                return value;
            }
            set
            {
                if (_DtRec != value)
                {
                  OnDtRecChanging(ref value);
                  ReportPropertyChanging("DtRec");
                  _DtRec = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtRec");
                  OnDtRecChanged();
              }
            }
        }
        private string _DtRec;
        partial void OnGetDtRec(ref string value);
        partial void OnDtRecChanging(ref string value);
        partial void OnDtRecChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvRequestHdr", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvStores").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvRequestHdrInvRequestItem", "InvRequestItems")]
        public virtual EntityCollection<InvRequestItems> InvRequestItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvRequestItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvRequestItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvRequestItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvRequestItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invRequestHdrId">Initial value of InvRequestHdrId.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        /// <param name="itemQty">Initial value of ItemQty.</param>
        /// <param name="invRecItemId">Initial value of InvRecItemId.</param>
        public static InvRequestItems CreateInvRequestItems(int id, int invItemId, int invRequestHdrId, int invUomId, string itemQty, int invRecItemId)
        {
            InvRequestItems invRequestItems = new InvRequestItems();
            invRequestItems.Id = id;
            invRequestItems.InvItemId = invItemId;
            invRequestItems.InvRequestHdrId = invRequestHdrId;
            invRequestItems.InvUomId = invUomId;
            invRequestItems.ItemQty = itemQty;
            invRequestItems.InvRecItemId = invRecItemId;
            return invRequestItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvRequestHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvRequestHdrId
        {
            get
            {
                int value = _InvRequestHdrId;
                OnGetInvRequestHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvRequestHdrId != value)
                {
                  OnInvRequestHdrIdChanging(ref value);
                  ReportPropertyChanging("InvRequestHdrId");
                  _InvRequestHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvRequestHdrId");
                  OnInvRequestHdrIdChanged();
              }
            }
        }
        private int _InvRequestHdrId;
        partial void OnGetInvRequestHdrId(ref int value);
        partial void OnInvRequestHdrIdChanging(ref int value);
        partial void OnInvRequestHdrIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();
    
        /// <summary>
        /// There are no comments for ItemQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ItemQty
        {
            get
            {
                string value = _ItemQty;
                OnGetItemQty(ref value);
                return value;
            }
            set
            {
                if (_ItemQty != value)
                {
                  OnItemQtyChanging(ref value);
                  ReportPropertyChanging("ItemQty");
                  _ItemQty = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ItemQty");
                  OnItemQtyChanged();
              }
            }
        }
        private string _ItemQty;
        partial void OnGetItemQty(ref string value);
        partial void OnItemQtyChanging(ref string value);
        partial void OnItemQtyChanged();
    
        /// <summary>
        /// There are no comments for InvRecItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvRecItemId
        {
            get
            {
                int value = _InvRecItemId;
                OnGetInvRecItemId(ref value);
                return value;
            }
            set
            {
                if (_InvRecItemId != value)
                {
                  OnInvRecItemIdChanging(ref value);
                  ReportPropertyChanging("InvRecItemId");
                  _InvRecItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvRecItemId");
                  OnInvRecItemIdChanged();
              }
            }
        }
        private int _InvRecItemId;
        partial void OnGetInvRecItemId(ref int value);
        partial void OnInvRecItemIdChanging(ref int value);
        partial void OnInvRecItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvRequestItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvRequestItem", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvRequestHdrInvRequestItem", "InvRequestHdrs")]
        public virtual InvRequestHdrs InvRequestHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvRequestHdrs> InvRequestHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvRequestHdrInvRequestItem", "InvRequestHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvRequestItem", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvUoms").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvRecItemInvRequestItem", "InvRecItems")]
        public virtual InvRecItems InvRecItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRecItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRecItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvRecItems> InvRecItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRecItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRecItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvRecItemInvRequestItem", "InvRecItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvStoreAreas in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvStoreAreas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvStoreAreas : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvStoreAreas object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        public static InvStoreAreas CreateInvStoreAreas(int id, string name, int invStoreId)
        {
            InvStoreAreas invStoreAreas = new InvStoreAreas();
            invStoreAreas.Id = id;
            invStoreAreas.Name = name;
            invStoreAreas.InvStoreId = invStoreId;
            return invStoreAreas;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();
    
        /// <summary>
        /// There are no comments for Syscode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Syscode
        {
            get
            {
                string value = _Syscode;
                OnGetSyscode(ref value);
                return value;
            }
            set
            {
                if (_Syscode != value)
                {
                  OnSyscodeChanging(ref value);
                  ReportPropertyChanging("Syscode");
                  _Syscode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Syscode");
                  OnSyscodeChanged();
              }
            }
        }
        private string _Syscode;
        partial void OnGetSyscode(ref string value);
        partial void OnSyscodeChanging(ref string value);
        partial void OnSyscodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreAreaInvItemMaster", "InvItemMasters")]
        public virtual EntityCollection<InvItemMasters> InvItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvStoreAreaInvItemMaster", "InvItemMasters", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvStoreArea", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStores").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvStores in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvStores")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvStores : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvStores object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="storeName">Initial value of StoreName.</param>
        public static InvStores CreateInvStores(int id, string storeName)
        {
            InvStores invStores = new InvStores();
            invStores.Id = id;
            invStores.StoreName = storeName;
            return invStores;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for StoreName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string StoreName
        {
            get
            {
                string value = _StoreName;
                OnGetStoreName(ref value);
                return value;
            }
            set
            {
                if (_StoreName != value)
                {
                  OnStoreNameChanging(ref value);
                  ReportPropertyChanging("StoreName");
                  _StoreName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StoreName");
                  OnStoreNameChanged();
              }
            }
        }
        private string _StoreName;
        partial void OnGetStoreName(ref string value);
        partial void OnStoreNameChanging(ref string value);
        partial void OnStoreNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvAdjHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvAdjHdr", "InvAdjHdrs")]
        public virtual EntityCollection<InvAdjHdrs> InvAdjHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvAdjHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvAdjHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvAdjHdr", "InvAdjHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvPoHdr", "InvPoHdrs")]
        public virtual EntityCollection<InvPoHdrs> InvPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvPoHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvPoHdr", "InvPoHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvRecHdr", "InvRecHdrs")]
        public virtual EntityCollection<InvRecHdrs> InvRecHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvRecHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvRecHdr", "InvRecHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvRequestHdr", "InvRequestHdrs")]
        public virtual EntityCollection<InvRequestHdrs> InvRequestHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvRequestHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRequestHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvRequestHdr", "InvRequestHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvStoreAreas in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvStoreArea", "InvStoreAreas")]
        public virtual EntityCollection<InvStoreAreas> InvStoreAreas
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStoreAreas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvStoreAreas>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreArea", "InvStoreAreas", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvStoreUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvStoreUser", "InvStoreUsers")]
        public virtual EntityCollection<InvStoreUsers> InvStoreUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvStoreUsers>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStoreUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvStoreUsers>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStoreUsers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvTrxHdr", "InvTrxHdrs")]
        public virtual EntityCollection<InvTrxHdrs> InvTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvTrxHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvTrxHdrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvStoreUsers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvStoreUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvStoreUsers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvStoreUsers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invStoreUserId">Initial value of InvStoreUserId.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        public static InvStoreUsers CreateInvStoreUsers(int id, string invStoreUserId, int invStoreId)
        {
            InvStoreUsers invStoreUsers = new InvStoreUsers();
            invStoreUsers.Id = id;
            invStoreUsers.InvStoreUserId = invStoreUserId;
            invStoreUsers.InvStoreId = invStoreId;
            return invStoreUsers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string InvStoreUserId
        {
            get
            {
                string value = _InvStoreUserId;
                OnGetInvStoreUserId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreUserId != value)
                {
                  OnInvStoreUserIdChanging(ref value);
                  ReportPropertyChanging("InvStoreUserId");
                  _InvStoreUserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("InvStoreUserId");
                  OnInvStoreUserIdChanged();
              }
            }
        }
        private string _InvStoreUserId;
        partial void OnGetInvStoreUserId(ref string value);
        partial void OnInvStoreUserIdChanging(ref string value);
        partial void OnInvStoreUserIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvStoreUser", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvStoreUser", "InvStores").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvSupplierItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvSupplierItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvSupplierItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvSupplierItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invSupplierId">Initial value of InvSupplierId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="price">Initial value of Price.</param>
        /// <param name="lastUpdate">Initial value of LastUpdate.</param>
        /// <param name="leadTime">Initial value of LeadTime.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static InvSupplierItems CreateInvSupplierItems(int id, int invSupplierId, int invItemId, decimal price, global::System.DateTime lastUpdate, string leadTime, string userId)
        {
            InvSupplierItems invSupplierItems = new InvSupplierItems();
            invSupplierItems.Id = id;
            invSupplierItems.InvSupplierId = invSupplierId;
            invSupplierItems.InvItemId = invItemId;
            invSupplierItems.Price = price;
            invSupplierItems.LastUpdate = lastUpdate;
            invSupplierItems.LeadTime = leadTime;
            invSupplierItems.UserId = userId;
            return invSupplierItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvSupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvSupplierId
        {
            get
            {
                int value = _InvSupplierId;
                OnGetInvSupplierId(ref value);
                return value;
            }
            set
            {
                if (_InvSupplierId != value)
                {
                  OnInvSupplierIdChanging(ref value);
                  ReportPropertyChanging("InvSupplierId");
                  _InvSupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvSupplierId");
                  OnInvSupplierIdChanged();
              }
            }
        }
        private int _InvSupplierId;
        partial void OnGetInvSupplierId(ref int value);
        partial void OnInvSupplierIdChanging(ref int value);
        partial void OnInvSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Price
        {
            get
            {
                decimal value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal _Price;
        partial void OnGetPrice(ref decimal value);
        partial void OnPriceChanging(ref decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for LastUpdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime LastUpdate
        {
            get
            {
                global::System.DateTime value = _LastUpdate;
                OnGetLastUpdate(ref value);
                return value;
            }
            set
            {
                if (_LastUpdate != value)
                {
                  OnLastUpdateChanging(ref value);
                  ReportPropertyChanging("LastUpdate");
                  _LastUpdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUpdate");
                  OnLastUpdateChanged();
              }
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnGetLastUpdate(ref global::System.DateTime value);
        partial void OnLastUpdateChanging(ref global::System.DateTime value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// There are no comments for LeadTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LeadTime
        {
            get
            {
                string value = _LeadTime;
                OnGetLeadTime(ref value);
                return value;
            }
            set
            {
                if (_LeadTime != value)
                {
                  OnLeadTimeChanging(ref value);
                  ReportPropertyChanging("LeadTime");
                  _LeadTime = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LeadTime");
                  OnLeadTimeChanged();
              }
            }
        }
        private string _LeadTime;
        partial void OnGetLeadTime(ref string value);
        partial void OnLeadTimeChanging(ref string value);
        partial void OnLeadTimeChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvSupplierItem", "InvSuppliers")]
        public virtual InvSuppliers InvSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSuppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSuppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvSuppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvSuppliers> InvSuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSuppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSuppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvSuppliers>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSuppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvSupplierItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvSupplierItem", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvSuppliers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvSuppliers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvSuppliers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvSuppliers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static InvSuppliers CreateInvSuppliers(int id, string name)
        {
            InvSuppliers invSuppliers = new InvSuppliers();
            invSuppliers.Id = id;
            invSuppliers.Name = name;
            return invSuppliers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvPoHdr", "InvPoHdrs")]
        public virtual EntityCollection<InvPoHdrs> InvPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvPoHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoHdrs>("DB_A0A0AE_ClientModel.FK_InvSupplierInvPoHdr", "InvPoHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvRecHdr", "InvRecHdrs")]
        public virtual EntityCollection<InvRecHdrs> InvRecHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvRecHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRecHdrs>("DB_A0A0AE_ClientModel.FK_InvSupplierInvRecHdr", "InvRecHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvSupplierItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvSupplierInvSupplierItem", "InvSupplierItems")]
        public virtual EntityCollection<InvSupplierItems> InvSupplierItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvSupplierItems>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSupplierItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvSupplierItems>("DB_A0A0AE_ClientModel.FK_InvSupplierInvSupplierItem", "InvSupplierItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxApprovals in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxApprovals")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxApprovals : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxApprovals object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="encodedBy">Initial value of EncodedBy.</param>
        /// <param name="encodedDate">Initial value of EncodedDate.</param>
        /// <param name="invTrxHdrId">Initial value of InvTrxHdrId.</param>
        public static InvTrxApprovals CreateInvTrxApprovals(int id, string encodedBy, global::System.DateTime encodedDate, int invTrxHdrId)
        {
            InvTrxApprovals invTrxApprovals = new InvTrxApprovals();
            invTrxApprovals.Id = id;
            invTrxApprovals.EncodedBy = encodedBy;
            invTrxApprovals.EncodedDate = encodedDate;
            invTrxApprovals.InvTrxHdrId = invTrxHdrId;
            return invTrxApprovals;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ApprovedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ApprovedBy
        {
            get
            {
                string value = _ApprovedBy;
                OnGetApprovedBy(ref value);
                return value;
            }
            set
            {
                if (_ApprovedBy != value)
                {
                  OnApprovedByChanging(ref value);
                  ReportPropertyChanging("ApprovedBy");
                  _ApprovedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApprovedBy");
                  OnApprovedByChanged();
              }
            }
        }
        private string _ApprovedBy;
        partial void OnGetApprovedBy(ref string value);
        partial void OnApprovedByChanging(ref string value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// There are no comments for ApprovedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ApprovedDate
        {
            get
            {
                global::System.DateTime? value = _ApprovedDate;
                OnGetApprovedDate(ref value);
                return value;
            }
            set
            {
                if (_ApprovedDate != value)
                {
                  OnApprovedDateChanging(ref value);
                  ReportPropertyChanging("ApprovedDate");
                  _ApprovedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovedDate");
                  OnApprovedDateChanged();
              }
            }
        }
        private global::System.DateTime? _ApprovedDate;
        partial void OnGetApprovedDate(ref global::System.DateTime? value);
        partial void OnApprovedDateChanging(ref global::System.DateTime? value);
        partial void OnApprovedDateChanged();
    
        /// <summary>
        /// There are no comments for VerifiedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VerifiedBy
        {
            get
            {
                string value = _VerifiedBy;
                OnGetVerifiedBy(ref value);
                return value;
            }
            set
            {
                if (_VerifiedBy != value)
                {
                  OnVerifiedByChanging(ref value);
                  ReportPropertyChanging("VerifiedBy");
                  _VerifiedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VerifiedBy");
                  OnVerifiedByChanged();
              }
            }
        }
        private string _VerifiedBy;
        partial void OnGetVerifiedBy(ref string value);
        partial void OnVerifiedByChanging(ref string value);
        partial void OnVerifiedByChanged();
    
        /// <summary>
        /// There are no comments for VerifiedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? VerifiedDate
        {
            get
            {
                global::System.DateTime? value = _VerifiedDate;
                OnGetVerifiedDate(ref value);
                return value;
            }
            set
            {
                if (_VerifiedDate != value)
                {
                  OnVerifiedDateChanging(ref value);
                  ReportPropertyChanging("VerifiedDate");
                  _VerifiedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VerifiedDate");
                  OnVerifiedDateChanged();
              }
            }
        }
        private global::System.DateTime? _VerifiedDate;
        partial void OnGetVerifiedDate(ref global::System.DateTime? value);
        partial void OnVerifiedDateChanging(ref global::System.DateTime? value);
        partial void OnVerifiedDateChanged();
    
        /// <summary>
        /// There are no comments for EncodedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EncodedBy
        {
            get
            {
                string value = _EncodedBy;
                OnGetEncodedBy(ref value);
                return value;
            }
            set
            {
                if (_EncodedBy != value)
                {
                  OnEncodedByChanging(ref value);
                  ReportPropertyChanging("EncodedBy");
                  _EncodedBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EncodedBy");
                  OnEncodedByChanged();
              }
            }
        }
        private string _EncodedBy;
        partial void OnGetEncodedBy(ref string value);
        partial void OnEncodedByChanging(ref string value);
        partial void OnEncodedByChanged();
    
        /// <summary>
        /// There are no comments for EncodedDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime EncodedDate
        {
            get
            {
                global::System.DateTime value = _EncodedDate;
                OnGetEncodedDate(ref value);
                return value;
            }
            set
            {
                if (_EncodedDate != value)
                {
                  OnEncodedDateChanging(ref value);
                  ReportPropertyChanging("EncodedDate");
                  _EncodedDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncodedDate");
                  OnEncodedDateChanged();
              }
            }
        }
        private global::System.DateTime _EncodedDate;
        partial void OnGetEncodedDate(ref global::System.DateTime value);
        partial void OnEncodedDateChanging(ref global::System.DateTime value);
        partial void OnEncodedDateChanged();
    
        /// <summary>
        /// There are no comments for InvTrxHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvTrxHdrId
        {
            get
            {
                int value = _InvTrxHdrId;
                OnGetInvTrxHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvTrxHdrId != value)
                {
                  OnInvTrxHdrIdChanging(ref value);
                  ReportPropertyChanging("InvTrxHdrId");
                  _InvTrxHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTrxHdrId");
                  OnInvTrxHdrIdChanged();
              }
            }
        }
        private int _InvTrxHdrId;
        partial void OnGetInvTrxHdrId(ref int value);
        partial void OnInvTrxHdrIdChanging(ref int value);
        partial void OnInvTrxHdrIdChanged();
    
        /// <summary>
        /// There are no comments for ApprovedAccBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ApprovedAccBy
        {
            get
            {
                string value = _ApprovedAccBy;
                OnGetApprovedAccBy(ref value);
                return value;
            }
            set
            {
                if (_ApprovedAccBy != value)
                {
                  OnApprovedAccByChanging(ref value);
                  ReportPropertyChanging("ApprovedAccBy");
                  _ApprovedAccBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApprovedAccBy");
                  OnApprovedAccByChanged();
              }
            }
        }
        private string _ApprovedAccBy;
        partial void OnGetApprovedAccBy(ref string value);
        partial void OnApprovedAccByChanging(ref string value);
        partial void OnApprovedAccByChanged();
    
        /// <summary>
        /// There are no comments for ApprovedAccDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ApprovedAccDate
        {
            get
            {
                global::System.DateTime? value = _ApprovedAccDate;
                OnGetApprovedAccDate(ref value);
                return value;
            }
            set
            {
                if (_ApprovedAccDate != value)
                {
                  OnApprovedAccDateChanging(ref value);
                  ReportPropertyChanging("ApprovedAccDate");
                  _ApprovedAccDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovedAccDate");
                  OnApprovedAccDateChanged();
              }
            }
        }
        private global::System.DateTime? _ApprovedAccDate;
        partial void OnGetApprovedAccDate(ref global::System.DateTime? value);
        partial void OnApprovedAccDateChanging(ref global::System.DateTime? value);
        partial void OnApprovedAccDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs")]
        public virtual InvTrxHdrs InvTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTrxHdrs> InvTrxHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxHdrs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxDtlOperators in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxDtlOperators")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxDtlOperators : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxDtlOperators object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="@operator">Initial value of Operator.</param>
        public static InvTrxDtlOperators CreateInvTrxDtlOperators(int id, string description, string @operator)
        {
            InvTrxDtlOperators invTrxDtlOperators = new InvTrxDtlOperators();
            invTrxDtlOperators.Id = id;
            invTrxDtlOperators.Description = description;
            invTrxDtlOperators.Operator = @operator;
            return invTrxDtlOperators;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Operator in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Operator
        {
            get
            {
                string value = _Operator;
                OnGetOperator(ref value);
                return value;
            }
            set
            {
                if (_Operator != value)
                {
                  OnOperatorChanging(ref value);
                  ReportPropertyChanging("Operator");
                  _Operator = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Operator");
                  OnOperatorChanged();
              }
            }
        }
        private string _Operator;
        partial void OnGetOperator(ref string value);
        partial void OnOperatorChanging(ref string value);
        partial void OnOperatorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtls")]
        public virtual EntityCollection<InvTrxDtls> InvTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtls", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxDtls in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxDtls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxDtls : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxDtls object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invTrxHdrId">Initial value of InvTrxHdrId.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        /// <param name="itemQty">Initial value of ItemQty.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="invTrxDtlOperatorId">Initial value of InvTrxDtlOperatorId.</param>
        public static InvTrxDtls CreateInvTrxDtls(int id, int invTrxHdrId, int invUomId, int itemQty, int invItemId, int invTrxDtlOperatorId)
        {
            InvTrxDtls invTrxDtls = new InvTrxDtls();
            invTrxDtls.Id = id;
            invTrxDtls.InvTrxHdrId = invTrxHdrId;
            invTrxDtls.InvUomId = invUomId;
            invTrxDtls.ItemQty = itemQty;
            invTrxDtls.InvItemId = invItemId;
            invTrxDtls.InvTrxDtlOperatorId = invTrxDtlOperatorId;
            return invTrxDtls;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvTrxHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvTrxHdrId
        {
            get
            {
                int value = _InvTrxHdrId;
                OnGetInvTrxHdrId(ref value);
                return value;
            }
            set
            {
                if (_InvTrxHdrId != value)
                {
                  OnInvTrxHdrIdChanging(ref value);
                  ReportPropertyChanging("InvTrxHdrId");
                  _InvTrxHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTrxHdrId");
                  OnInvTrxHdrIdChanged();
              }
            }
        }
        private int _InvTrxHdrId;
        partial void OnGetInvTrxHdrId(ref int value);
        partial void OnInvTrxHdrIdChanging(ref int value);
        partial void OnInvTrxHdrIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();
    
        /// <summary>
        /// There are no comments for ItemQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemQty
        {
            get
            {
                int value = _ItemQty;
                OnGetItemQty(ref value);
                return value;
            }
            set
            {
                if (_ItemQty != value)
                {
                  OnItemQtyChanging(ref value);
                  ReportPropertyChanging("ItemQty");
                  _ItemQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemQty");
                  OnItemQtyChanged();
              }
            }
        }
        private int _ItemQty;
        partial void OnGetItemQty(ref int value);
        partial void OnItemQtyChanging(ref int value);
        partial void OnItemQtyChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for InvTrxDtlOperatorId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvTrxDtlOperatorId
        {
            get
            {
                int value = _InvTrxDtlOperatorId;
                OnGetInvTrxDtlOperatorId(ref value);
                return value;
            }
            set
            {
                if (_InvTrxDtlOperatorId != value)
                {
                  OnInvTrxDtlOperatorIdChanging(ref value);
                  ReportPropertyChanging("InvTrxDtlOperatorId");
                  _InvTrxDtlOperatorId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTrxDtlOperatorId");
                  OnInvTrxDtlOperatorIdChanged();
              }
            }
        }
        private int _InvTrxDtlOperatorId;
        partial void OnGetInvTrxDtlOperatorId(ref int value);
        partial void OnInvTrxDtlOperatorIdChanging(ref int value);
        partial void OnInvTrxDtlOperatorIdChanged();
    
        /// <summary>
        /// There are no comments for LotNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LotNo
        {
            get
            {
                string value = _LotNo;
                OnGetLotNo(ref value);
                return value;
            }
            set
            {
                if (_LotNo != value)
                {
                  OnLotNoChanging(ref value);
                  ReportPropertyChanging("LotNo");
                  _LotNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LotNo");
                  OnLotNoChanged();
              }
            }
        }
        private string _LotNo;
        partial void OnGetLotNo(ref string value);
        partial void OnLotNoChanging(ref string value);
        partial void OnLotNoChanged();
    
        /// <summary>
        /// There are no comments for BatchNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchNo
        {
            get
            {
                string value = _BatchNo;
                OnGetBatchNo(ref value);
                return value;
            }
            set
            {
                if (_BatchNo != value)
                {
                  OnBatchNoChanging(ref value);
                  ReportPropertyChanging("BatchNo");
                  _BatchNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchNo");
                  OnBatchNoChanged();
              }
            }
        }
        private string _BatchNo;
        partial void OnGetBatchNo(ref string value);
        partial void OnBatchNoChanging(ref string value);
        partial void OnBatchNoChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs")]
        public virtual InvTrxHdrs InvTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTrxHdrs> InvTrxHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvTrxDtl", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvUoms").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvTrxDtl", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvTrxDtl", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtlOperators in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators")]
        public virtual InvTrxDtlOperators InvTrxDtlOperators
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtlOperators>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtlOperators>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtlOperators in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTrxDtlOperators> InvTrxDtlOperatorsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtlOperators>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTrxDtlOperators>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtlOperators>("DB_A0A0AE_ClientModel.FK_InvTrxDtlOperatorInvTrxDtl", "InvTrxDtlOperators").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtlxItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtlxItemMasters")]
        public virtual EntityCollection<InvTrxDtlxItemMasters> InvTrxDtlxItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxDtlxItemMasters>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtlxItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxDtlxItemMasters>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtlxItemMasters", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxDtlxItemMasters in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxDtlxItemMasters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxDtlxItemMasters : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxDtlxItemMasters object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invTrxDtlId">Initial value of InvTrxDtlId.</param>
        /// <param name="invItemMasterId">Initial value of InvItemMasterId.</param>
        public static InvTrxDtlxItemMasters CreateInvTrxDtlxItemMasters(int id, int invTrxDtlId, int invItemMasterId)
        {
            InvTrxDtlxItemMasters invTrxDtlxItemMasters = new InvTrxDtlxItemMasters();
            invTrxDtlxItemMasters.Id = id;
            invTrxDtlxItemMasters.InvTrxDtlId = invTrxDtlId;
            invTrxDtlxItemMasters.InvItemMasterId = invItemMasterId;
            return invTrxDtlxItemMasters;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvTrxDtlId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvTrxDtlId
        {
            get
            {
                int value = _InvTrxDtlId;
                OnGetInvTrxDtlId(ref value);
                return value;
            }
            set
            {
                if (_InvTrxDtlId != value)
                {
                  OnInvTrxDtlIdChanging(ref value);
                  ReportPropertyChanging("InvTrxDtlId");
                  _InvTrxDtlId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTrxDtlId");
                  OnInvTrxDtlIdChanged();
              }
            }
        }
        private int _InvTrxDtlId;
        partial void OnGetInvTrxDtlId(ref int value);
        partial void OnInvTrxDtlIdChanging(ref int value);
        partial void OnInvTrxDtlIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemMasterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemMasterId
        {
            get
            {
                int value = _InvItemMasterId;
                OnGetInvItemMasterId(ref value);
                return value;
            }
            set
            {
                if (_InvItemMasterId != value)
                {
                  OnInvItemMasterIdChanging(ref value);
                  ReportPropertyChanging("InvItemMasterId");
                  _InvItemMasterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemMasterId");
                  OnInvItemMasterIdChanged();
              }
            }
        }
        private int _InvItemMasterId;
        partial void OnGetInvItemMasterId(ref int value);
        partial void OnInvItemMasterIdChanging(ref int value);
        partial void OnInvItemMasterIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls")]
        public virtual InvTrxDtls InvTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtls in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTrxDtls> InvTrxDtlsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxDtlInvTrxDtlxItemMaster", "InvTrxDtls").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters")]
        public virtual InvItemMasters InvItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItemMasters> InvItemMastersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvItemMasterInvTrxDtlxItemMaster", "InvItemMasters").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invStoreId">Initial value of InvStoreId.</param>
        /// <param name="dtTrx">Initial value of DtTrx.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="invTrxTypeId">Initial value of InvTrxTypeId.</param>
        /// <param name="invTrxHdrStatusId">Initial value of InvTrxHdrStatusId.</param>
        public static InvTrxHdrs CreateInvTrxHdrs(int id, int invStoreId, global::System.DateTime dtTrx, string userId, int invTrxTypeId, int invTrxHdrStatusId)
        {
            InvTrxHdrs invTrxHdrs = new InvTrxHdrs();
            invTrxHdrs.Id = id;
            invTrxHdrs.InvStoreId = invStoreId;
            invTrxHdrs.DtTrx = dtTrx;
            invTrxHdrs.UserId = userId;
            invTrxHdrs.InvTrxTypeId = invTrxTypeId;
            invTrxHdrs.InvTrxHdrStatusId = invTrxHdrStatusId;
            return invTrxHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvStoreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvStoreId
        {
            get
            {
                int value = _InvStoreId;
                OnGetInvStoreId(ref value);
                return value;
            }
            set
            {
                if (_InvStoreId != value)
                {
                  OnInvStoreIdChanging(ref value);
                  ReportPropertyChanging("InvStoreId");
                  _InvStoreId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvStoreId");
                  OnInvStoreIdChanged();
              }
            }
        }
        private int _InvStoreId;
        partial void OnGetInvStoreId(ref int value);
        partial void OnInvStoreIdChanging(ref int value);
        partial void OnInvStoreIdChanged();
    
        /// <summary>
        /// There are no comments for DtTrx in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtTrx
        {
            get
            {
                global::System.DateTime value = _DtTrx;
                OnGetDtTrx(ref value);
                return value;
            }
            set
            {
                if (_DtTrx != value)
                {
                  OnDtTrxChanging(ref value);
                  ReportPropertyChanging("DtTrx");
                  _DtTrx = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtTrx");
                  OnDtTrxChanged();
              }
            }
        }
        private global::System.DateTime _DtTrx;
        partial void OnGetDtTrx(ref global::System.DateTime value);
        partial void OnDtTrxChanging(ref global::System.DateTime value);
        partial void OnDtTrxChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for InvTrxTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvTrxTypeId
        {
            get
            {
                int value = _InvTrxTypeId;
                OnGetInvTrxTypeId(ref value);
                return value;
            }
            set
            {
                if (_InvTrxTypeId != value)
                {
                  OnInvTrxTypeIdChanging(ref value);
                  ReportPropertyChanging("InvTrxTypeId");
                  _InvTrxTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTrxTypeId");
                  OnInvTrxTypeIdChanged();
              }
            }
        }
        private int _InvTrxTypeId;
        partial void OnGetInvTrxTypeId(ref int value);
        partial void OnInvTrxTypeIdChanging(ref int value);
        partial void OnInvTrxTypeIdChanged();
    
        /// <summary>
        /// There are no comments for InvTrxHdrStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvTrxHdrStatusId
        {
            get
            {
                int value = _InvTrxHdrStatusId;
                OnGetInvTrxHdrStatusId(ref value);
                return value;
            }
            set
            {
                if (_InvTrxHdrStatusId != value)
                {
                  OnInvTrxHdrStatusIdChanging(ref value);
                  ReportPropertyChanging("InvTrxHdrStatusId");
                  _InvTrxHdrStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvTrxHdrStatusId");
                  OnInvTrxHdrStatusIdChanged();
              }
            }
        }
        private int _InvTrxHdrStatusId;
        partial void OnGetInvTrxHdrStatusId(ref int value);
        partial void OnInvTrxHdrStatusIdChanging(ref int value);
        partial void OnInvTrxHdrStatusIdChanged();
    
        /// <summary>
        /// There are no comments for Party in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Party
        {
            get
            {
                string value = _Party;
                OnGetParty(ref value);
                return value;
            }
            set
            {
                if (_Party != value)
                {
                  OnPartyChanging(ref value);
                  ReportPropertyChanging("Party");
                  _Party = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Party");
                  OnPartyChanged();
              }
            }
        }
        private string _Party;
        partial void OnGetParty(ref string value);
        partial void OnPartyChanging(ref string value);
        partial void OnPartyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxApprovals in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrInvTrxApproval", "InvTrxApprovals")]
        public virtual EntityCollection<InvTrxApprovals> InvTrxApprovals
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxApprovals>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxApprovals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxApprovals>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxApproval", "InvTrxApprovals", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrInvTrxDtl", "InvTrxDtls")]
        public virtual EntityCollection<InvTrxDtls> InvTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvTrxHdrInvTrxDtl", "InvTrxDtls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvStoreInvTrxHdr", "InvStores")]
        public virtual InvStores InvStores
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvStores").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvStores").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvStores in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvStores> InvStoresReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvStores");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvStores", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvStores>("DB_A0A0AE_ClientModel.FK_InvStoreInvTrxHdr", "InvStores").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxTypeInvTrxHdr", "InvTrxTypes")]
        public virtual InvTrxTypes InvTrxTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxTypes>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxTypes>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTrxTypes> InvTrxTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxTypes>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTrxTypes>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxTypes>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxHdrStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus")]
        public virtual InvTrxHdrStatus InvTrxHdrStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrStatus>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrStatus>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxHdrStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvTrxHdrStatus> InvTrxHdrStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrStatus>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvTrxHdrStatus>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvTrxHdrStatus>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxHdrStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxHdrStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxHdrStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxHdrStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        public static InvTrxHdrStatus CreateInvTrxHdrStatus(int id, string status, int orderNo)
        {
            InvTrxHdrStatus invTrxHdrStatus = new InvTrxHdrStatus();
            invTrxHdrStatus.Id = id;
            invTrxHdrStatus.Status = status;
            invTrxHdrStatus.OrderNo = orderNo;
            return invTrxHdrStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrs")]
        public virtual EntityCollection<InvTrxHdrs> InvTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxHdrStatusInvTrxHdr", "InvTrxHdrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTrxTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTrxTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTrxTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTrxTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static InvTrxTypes CreateInvTrxTypes(int id, string type)
        {
            InvTrxTypes invTrxTypes = new InvTrxTypes();
            invTrxTypes.Id = id;
            invTrxTypes.Type = type;
            return invTrxTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvTrxHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTrxTypeInvTrxHdr", "InvTrxHdrs")]
        public virtual EntityCollection<InvTrxHdrs> InvTrxHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxHdrs>("DB_A0A0AE_ClientModel.FK_InvTrxTypeInvTrxHdr", "InvTrxHdrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        public static InvTypes CreateInvTypes(int id, string desc, string remarks, string sysCode)
        {
            InvTypes invTypes = new InvTypes();
            invTypes.Id = id;
            invTypes.Desc = desc;
            invTypes.Remarks = remarks;
            invTypes.SysCode = sysCode;
            return invTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvTypeInvItem", "InvItems")]
        public virtual EntityCollection<InvItems> InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItems>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItems>("DB_A0A0AE_ClientModel.FK_InvTypeInvItem", "InvItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvUomConversions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvUomConversions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvUomConversions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvUomConversions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invUomId_Base">Initial value of InvUomId_Base.</param>
        /// <param name="invUomId_Into">Initial value of InvUomId_Into.</param>
        /// <param name="factor">Initial value of Factor.</param>
        /// <param name="description">Initial value of Description.</param>
        public static InvUomConversions CreateInvUomConversions(int id, int invUomId_Base, int invUomId_Into, decimal factor, string description)
        {
            InvUomConversions invUomConversions = new InvUomConversions();
            invUomConversions.Id = id;
            invUomConversions.InvUomId_Base = invUomId_Base;
            invUomConversions.InvUomId_Into = invUomId_Into;
            invUomConversions.Factor = factor;
            invUomConversions.Description = description;
            return invUomConversions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId_Base in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId_Base
        {
            get
            {
                int value = _InvUomId_Base;
                OnGetInvUomId_Base(ref value);
                return value;
            }
            set
            {
                if (_InvUomId_Base != value)
                {
                  OnInvUomId_BaseChanging(ref value);
                  ReportPropertyChanging("InvUomId_Base");
                  _InvUomId_Base = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId_Base");
                  OnInvUomId_BaseChanged();
              }
            }
        }
        private int _InvUomId_Base;
        partial void OnGetInvUomId_Base(ref int value);
        partial void OnInvUomId_BaseChanging(ref int value);
        partial void OnInvUomId_BaseChanged();
    
        /// <summary>
        /// There are no comments for InvUomId_Into in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId_Into
        {
            get
            {
                int value = _InvUomId_Into;
                OnGetInvUomId_Into(ref value);
                return value;
            }
            set
            {
                if (_InvUomId_Into != value)
                {
                  OnInvUomId_IntoChanging(ref value);
                  ReportPropertyChanging("InvUomId_Into");
                  _InvUomId_Into = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId_Into");
                  OnInvUomId_IntoChanged();
              }
            }
        }
        private int _InvUomId_Into;
        partial void OnGetInvUomId_Into(ref int value);
        partial void OnInvUomId_IntoChanging(ref int value);
        partial void OnInvUomId_IntoChanged();
    
        /// <summary>
        /// There are no comments for Factor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Factor
        {
            get
            {
                decimal value = _Factor;
                OnGetFactor(ref value);
                return value;
            }
            set
            {
                if (_Factor != value)
                {
                  OnFactorChanging(ref value);
                  ReportPropertyChanging("Factor");
                  _Factor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Factor");
                  OnFactorChanged();
              }
            }
        }
        private decimal _Factor;
        partial void OnGetFactor(ref decimal value);
        partial void OnFactorChanging(ref decimal value);
        partial void OnFactorChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvUomConvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomConversionInvUomConvItem", "InvUomConvItems")]
        public virtual EntityCollection<InvUomConvItems> InvUomConvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvUomConvItems>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvUomConvItems>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConvItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvUomConvItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvUomConvItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvUomConvItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvUomConvItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invUomConversionId">Initial value of InvUomConversionId.</param>
        public static InvUomConvItems CreateInvUomConvItems(int id, int invUomConversionId)
        {
            InvUomConvItems invUomConvItems = new InvUomConvItems();
            invUomConvItems.Id = id;
            invUomConvItems.InvUomConversionId = invUomConversionId;
            return invUomConvItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomConversionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomConversionId
        {
            get
            {
                int value = _InvUomConversionId;
                OnGetInvUomConversionId(ref value);
                return value;
            }
            set
            {
                if (_InvUomConversionId != value)
                {
                  OnInvUomConversionIdChanging(ref value);
                  ReportPropertyChanging("InvUomConversionId");
                  _InvUomConversionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomConversionId");
                  OnInvUomConversionIdChanged();
              }
            }
        }
        private int _InvUomConversionId;
        partial void OnGetInvUomConversionId(ref int value);
        partial void OnInvUomConversionIdChanging(ref int value);
        partial void OnInvUomConversionIdChanged();
    
        /// <summary>
        /// There are no comments for InvClassificationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvClassificationId
        {
            get
            {
                int? value = _InvClassificationId;
                OnGetInvClassificationId(ref value);
                return value;
            }
            set
            {
                if (_InvClassificationId != value)
                {
                  OnInvClassificationIdChanging(ref value);
                  ReportPropertyChanging("InvClassificationId");
                  _InvClassificationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvClassificationId");
                  OnInvClassificationIdChanged();
              }
            }
        }
        private int? _InvClassificationId;
        partial void OnGetInvClassificationId(ref int? value);
        partial void OnInvClassificationIdChanging(ref int? value);
        partial void OnInvClassificationIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvItemId
        {
            get
            {
                int? value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int? _InvItemId;
        partial void OnGetInvItemId(ref int? value);
        partial void OnInvItemIdChanging(ref int? value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvUomConversions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomConversionInvUomConvItem", "InvUomConversions")]
        public virtual InvUomConversions InvUomConversions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUomConversions>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConversions").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUomConversions>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConversions").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUomConversions in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUomConversions> InvUomConversionsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUomConversions>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConversions");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUomConversions>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConversions", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUomConversions>("DB_A0A0AE_ClientModel.FK_InvUomConversionInvUomConvItem", "InvUomConversions").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvClassifications in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvClassificationInvUomConvItem", "InvClassifications")]
        public virtual InvClassifications InvClassifications
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvClassifications").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvClassifications").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvClassifications in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvClassifications> InvClassificationsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvClassifications");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvClassifications", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvClassifications>("DB_A0A0AE_ClientModel.FK_InvClassificationInvUomConvItem", "InvClassifications").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvUomConvItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvUomConvItem", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvUoms in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvUoms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvUoms : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvUoms object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="uom">Initial value of Uom.</param>
        public static InvUoms CreateInvUoms(int id, string uom)
        {
            InvUoms invUoms = new InvUoms();
            invUoms.Id = id;
            invUoms.Uom = uom;
            return invUoms;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Uom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Uom
        {
            get
            {
                string value = _Uom;
                OnGetUom(ref value);
                return value;
            }
            set
            {
                if (_Uom != value)
                {
                  OnUomChanging(ref value);
                  ReportPropertyChanging("Uom");
                  _Uom = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Uom");
                  OnUomChanged();
              }
            }
        }
        private string _Uom;
        partial void OnGetUom(ref string value);
        partial void OnUomChanging(ref string value);
        partial void OnUomChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvAdjItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvAdjItem", "InvAdjItems")]
        public virtual EntityCollection<InvAdjItems> InvAdjItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvAdjItems>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvAdjItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvAdjItems>("DB_A0A0AE_ClientModel.FK_InvUomInvAdjItem", "InvAdjItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItemMasters in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvItemMaster", "InvItemMasters")]
        public virtual EntityCollection<InvItemMasters> InvItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvItemMasters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemMasters>("DB_A0A0AE_ClientModel.FK_InvUomInvItemMaster", "InvItemMasters", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvItem", "InvItems")]
        public virtual EntityCollection<InvItems> InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItems>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItems>("DB_A0A0AE_ClientModel.FK_InvUomInvItem", "InvItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvPoItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvPoItem", "InvPoItems")]
        public virtual EntityCollection<InvPoItems> InvPoItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvPoItems>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvPoItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvPoItems>("DB_A0A0AE_ClientModel.FK_InvUomInvPoItem", "InvPoItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRecItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvRecItem", "InvRecItems")]
        public virtual EntityCollection<InvRecItems> InvRecItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvRecItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRecItems>("DB_A0A0AE_ClientModel.FK_InvUomInvRecItem", "InvRecItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvRequestItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvRequestItem", "InvRequestItems")]
        public virtual EntityCollection<InvRequestItems> InvRequestItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvRequestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvRequestItems>("DB_A0A0AE_ClientModel.FK_InvUomInvRequestItem", "InvRequestItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvTrxDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvTrxDtl", "InvTrxDtls")]
        public virtual EntityCollection<InvTrxDtls> InvTrxDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvTrxDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvTrxDtls>("DB_A0A0AE_ClientModel.FK_InvUomInvTrxDtl", "InvTrxDtls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvWarningLevels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvWarningLevel", "InvWarningLevels")]
        public virtual EntityCollection<InvWarningLevels> InvWarningLevels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvWarningLevels>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvWarningLevels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvWarningLevels>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvWarningLevels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvWarningLevels in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvWarningLevels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvWarningLevels : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvWarningLevels object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        /// <param name="level1">Initial value of Level1.</param>
        /// <param name="level2">Initial value of Level2.</param>
        /// <param name="invWarningTypeId">Initial value of InvWarningTypeId.</param>
        /// <param name="invUomId">Initial value of InvUomId.</param>
        public static InvWarningLevels CreateInvWarningLevels(int id, int invItemId, decimal level1, decimal level2, int invWarningTypeId, int invUomId)
        {
            InvWarningLevels invWarningLevels = new InvWarningLevels();
            invWarningLevels.Id = id;
            invWarningLevels.InvItemId = invItemId;
            invWarningLevels.Level1 = level1;
            invWarningLevels.Level2 = level2;
            invWarningLevels.InvWarningTypeId = invWarningTypeId;
            invWarningLevels.InvUomId = invUomId;
            return invWarningLevels;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for Level1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Level1
        {
            get
            {
                decimal value = _Level1;
                OnGetLevel1(ref value);
                return value;
            }
            set
            {
                if (_Level1 != value)
                {
                  OnLevel1Changing(ref value);
                  ReportPropertyChanging("Level1");
                  _Level1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Level1");
                  OnLevel1Changed();
              }
            }
        }
        private decimal _Level1;
        partial void OnGetLevel1(ref decimal value);
        partial void OnLevel1Changing(ref decimal value);
        partial void OnLevel1Changed();
    
        /// <summary>
        /// There are no comments for Level2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Level2
        {
            get
            {
                decimal value = _Level2;
                OnGetLevel2(ref value);
                return value;
            }
            set
            {
                if (_Level2 != value)
                {
                  OnLevel2Changing(ref value);
                  ReportPropertyChanging("Level2");
                  _Level2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Level2");
                  OnLevel2Changed();
              }
            }
        }
        private decimal _Level2;
        partial void OnGetLevel2(ref decimal value);
        partial void OnLevel2Changing(ref decimal value);
        partial void OnLevel2Changed();
    
        /// <summary>
        /// There are no comments for InvWarningTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvWarningTypeId
        {
            get
            {
                int value = _InvWarningTypeId;
                OnGetInvWarningTypeId(ref value);
                return value;
            }
            set
            {
                if (_InvWarningTypeId != value)
                {
                  OnInvWarningTypeIdChanging(ref value);
                  ReportPropertyChanging("InvWarningTypeId");
                  _InvWarningTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvWarningTypeId");
                  OnInvWarningTypeIdChanged();
              }
            }
        }
        private int _InvWarningTypeId;
        partial void OnGetInvWarningTypeId(ref int value);
        partial void OnInvWarningTypeIdChanging(ref int value);
        partial void OnInvWarningTypeIdChanged();
    
        /// <summary>
        /// There are no comments for InvUomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvUomId
        {
            get
            {
                int value = _InvUomId;
                OnGetInvUomId(ref value);
                return value;
            }
            set
            {
                if (_InvUomId != value)
                {
                  OnInvUomIdChanging(ref value);
                  ReportPropertyChanging("InvUomId");
                  _InvUomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvUomId");
                  OnInvUomIdChanged();
              }
            }
        }
        private int _InvUomId;
        partial void OnGetInvUomId(ref int value);
        partial void OnInvUomIdChanging(ref int value);
        partial void OnInvUomIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemInvWarningLevel", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemInvWarningLevel", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvWarningTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvWarningTypeInvWarningLevel", "InvWarningTypes")]
        public virtual InvWarningTypes InvWarningTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvWarningTypes>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvWarningTypes>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvWarningTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvWarningTypes> InvWarningTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvWarningTypes>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvWarningTypes>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvWarningTypes>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvUomInvWarningLevel", "InvUoms")]
        public virtual InvUoms InvUoms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvUoms").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvUoms").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvUoms in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvUoms> InvUomsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvUoms");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvUoms", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvUoms>("DB_A0A0AE_ClientModel.FK_InvUomInvWarningLevel", "InvUoms").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.InvWarningTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="InvWarningTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvWarningTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvWarningTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static InvWarningTypes CreateInvWarningTypes(int id, string desc)
        {
            InvWarningTypes invWarningTypes = new InvWarningTypes();
            invWarningTypes.Id = id;
            invWarningTypes.Desc = desc;
            return invWarningTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvWarningLevels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvWarningTypeInvWarningLevel", "InvWarningLevels")]
        public virtual EntityCollection<InvWarningLevels> InvWarningLevels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvWarningLevels>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningLevels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvWarningLevels>("DB_A0A0AE_ClientModel.FK_InvWarningTypeInvWarningLevel", "InvWarningLevels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobActions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobActions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobActions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobActions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobServicesId">Initial value of JobServicesId.</param>
        /// <param name="srvActionItemId">Initial value of SrvActionItemId.</param>
        public static JobActions CreateJobActions(int id, int jobServicesId, int srvActionItemId)
        {
            JobActions jobActions = new JobActions();
            jobActions.Id = id;
            jobActions.JobServicesId = jobServicesId;
            jobActions.SrvActionItemId = srvActionItemId;
            return jobActions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobServicesId
        {
            get
            {
                int value = _JobServicesId;
                OnGetJobServicesId(ref value);
                return value;
            }
            set
            {
                if (_JobServicesId != value)
                {
                  OnJobServicesIdChanging(ref value);
                  ReportPropertyChanging("JobServicesId");
                  _JobServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobServicesId");
                  OnJobServicesIdChanged();
              }
            }
        }
        private int _JobServicesId;
        partial void OnGetJobServicesId(ref int value);
        partial void OnJobServicesIdChanging(ref int value);
        partial void OnJobServicesIdChanged();
    
        /// <summary>
        /// There are no comments for AssignedTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AssignedTo
        {
            get
            {
                string value = _AssignedTo;
                OnGetAssignedTo(ref value);
                return value;
            }
            set
            {
                if (_AssignedTo != value)
                {
                  OnAssignedToChanging(ref value);
                  ReportPropertyChanging("AssignedTo");
                  _AssignedTo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AssignedTo");
                  OnAssignedToChanged();
              }
            }
        }
        private string _AssignedTo;
        partial void OnGetAssignedTo(ref string value);
        partial void OnAssignedToChanging(ref string value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// There are no comments for PerformedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PerformedBy
        {
            get
            {
                string value = _PerformedBy;
                OnGetPerformedBy(ref value);
                return value;
            }
            set
            {
                if (_PerformedBy != value)
                {
                  OnPerformedByChanging(ref value);
                  ReportPropertyChanging("PerformedBy");
                  _PerformedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PerformedBy");
                  OnPerformedByChanged();
              }
            }
        }
        private string _PerformedBy;
        partial void OnGetPerformedBy(ref string value);
        partial void OnPerformedByChanging(ref string value);
        partial void OnPerformedByChanged();
    
        /// <summary>
        /// There are no comments for DtAssigned in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtAssigned
        {
            get
            {
                global::System.DateTime? value = _DtAssigned;
                OnGetDtAssigned(ref value);
                return value;
            }
            set
            {
                if (_DtAssigned != value)
                {
                  OnDtAssignedChanging(ref value);
                  ReportPropertyChanging("DtAssigned");
                  _DtAssigned = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtAssigned");
                  OnDtAssignedChanged();
              }
            }
        }
        private global::System.DateTime? _DtAssigned;
        partial void OnGetDtAssigned(ref global::System.DateTime? value);
        partial void OnDtAssignedChanging(ref global::System.DateTime? value);
        partial void OnDtAssignedChanged();
    
        /// <summary>
        /// There are no comments for DtPerformed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtPerformed
        {
            get
            {
                global::System.DateTime? value = _DtPerformed;
                OnGetDtPerformed(ref value);
                return value;
            }
            set
            {
                if (_DtPerformed != value)
                {
                  OnDtPerformedChanging(ref value);
                  ReportPropertyChanging("DtPerformed");
                  _DtPerformed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtPerformed");
                  OnDtPerformedChanged();
              }
            }
        }
        private global::System.DateTime? _DtPerformed;
        partial void OnGetDtPerformed(ref global::System.DateTime? value);
        partial void OnDtPerformedChanging(ref global::System.DateTime? value);
        partial void OnDtPerformedChanged();
    
        /// <summary>
        /// There are no comments for SrvActionItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SrvActionItemId
        {
            get
            {
                int value = _SrvActionItemId;
                OnGetSrvActionItemId(ref value);
                return value;
            }
            set
            {
                if (_SrvActionItemId != value)
                {
                  OnSrvActionItemIdChanging(ref value);
                  ReportPropertyChanging("SrvActionItemId");
                  _SrvActionItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SrvActionItemId");
                  OnSrvActionItemIdChanged();
              }
            }
        }
        private int _SrvActionItemId;
        partial void OnGetSrvActionItemId(ref int value);
        partial void OnSrvActionItemIdChanging(ref int value);
        partial void OnSrvActionItemIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobAction", "JobServices")]
        public virtual JobServices JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobServices> JobServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobServices").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SrvActionItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SrvActionItemJobAction", "SrvActionItems")]
        public virtual SrvActionItems SrvActionItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "SrvActionItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "SrvActionItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SrvActionItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SrvActionItems> SrvActionItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "SrvActionItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "SrvActionItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "SrvActionItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobChecklists in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobChecklists")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobChecklists : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobChecklists object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtEntered">Initial value of DtEntered.</param>
        /// <param name="dtDue">Initial value of DtDue.</param>
        /// <param name="dtNotification">Initial value of DtNotification.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="status">Initial value of Status.</param>
        public static JobChecklists CreateJobChecklists(int id, global::System.DateTime dtEntered, global::System.DateTime dtDue, global::System.DateTime dtNotification, string description, int status)
        {
            JobChecklists jobChecklists = new JobChecklists();
            jobChecklists.Id = id;
            jobChecklists.DtEntered = dtEntered;
            jobChecklists.DtDue = dtDue;
            jobChecklists.DtNotification = dtNotification;
            jobChecklists.Description = description;
            jobChecklists.Status = status;
            return jobChecklists;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtEntered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtEntered
        {
            get
            {
                global::System.DateTime value = _DtEntered;
                OnGetDtEntered(ref value);
                return value;
            }
            set
            {
                if (_DtEntered != value)
                {
                  OnDtEnteredChanging(ref value);
                  ReportPropertyChanging("DtEntered");
                  _DtEntered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEntered");
                  OnDtEnteredChanged();
              }
            }
        }
        private global::System.DateTime _DtEntered;
        partial void OnGetDtEntered(ref global::System.DateTime value);
        partial void OnDtEnteredChanging(ref global::System.DateTime value);
        partial void OnDtEnteredChanged();
    
        /// <summary>
        /// There are no comments for DtDue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtDue
        {
            get
            {
                global::System.DateTime value = _DtDue;
                OnGetDtDue(ref value);
                return value;
            }
            set
            {
                if (_DtDue != value)
                {
                  OnDtDueChanging(ref value);
                  ReportPropertyChanging("DtDue");
                  _DtDue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtDue");
                  OnDtDueChanged();
              }
            }
        }
        private global::System.DateTime _DtDue;
        partial void OnGetDtDue(ref global::System.DateTime value);
        partial void OnDtDueChanging(ref global::System.DateTime value);
        partial void OnDtDueChanged();
    
        /// <summary>
        /// There are no comments for DtNotification in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtNotification
        {
            get
            {
                global::System.DateTime value = _DtNotification;
                OnGetDtNotification(ref value);
                return value;
            }
            set
            {
                if (_DtNotification != value)
                {
                  OnDtNotificationChanging(ref value);
                  ReportPropertyChanging("DtNotification");
                  _DtNotification = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtNotification");
                  OnDtNotificationChanged();
              }
            }
        }
        private global::System.DateTime _DtNotification;
        partial void OnGetDtNotification(ref global::System.DateTime value);
        partial void OnDtNotificationChanging(ref global::System.DateTime value);
        partial void OnDtNotificationChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for RefId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RefId
        {
            get
            {
                int? value = _RefId;
                OnGetRefId(ref value);
                return value;
            }
            set
            {
                if (_RefId != value)
                {
                  OnRefIdChanging(ref value);
                  ReportPropertyChanging("RefId");
                  _RefId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefId");
                  OnRefIdChanged();
              }
            }
        }
        private int? _RefId;
        partial void OnGetRefId(ref int? value);
        partial void OnRefIdChanging(ref int? value);
        partial void OnRefIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Status
        {
            get
            {
                int value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private int _Status;
        partial void OnGetStatus(ref int value);
        partial void OnStatusChanging(ref int value);
        partial void OnStatusChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobContacts in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobContacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobContacts : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobContacts object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static JobContacts CreateJobContacts(int id, string name)
        {
            JobContacts jobContacts = new JobContacts();
            jobContacts.Id = id;
            jobContacts.Name = name;
            return jobContacts;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for ShortName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ShortName
        {
            get
            {
                string value = _ShortName;
                OnGetShortName(ref value);
                return value;
            }
            set
            {
                if (_ShortName != value)
                {
                  OnShortNameChanging(ref value);
                  ReportPropertyChanging("ShortName");
                  _ShortName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ShortName");
                  OnShortNameChanged();
              }
            }
        }
        private string _ShortName;
        partial void OnGetShortName(ref string value);
        partial void OnShortNameChanging(ref string value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Company
        {
            get
            {
                string value = _Company;
                OnGetCompany(ref value);
                return value;
            }
            set
            {
                if (_Company != value)
                {
                  OnCompanyChanging(ref value);
                  ReportPropertyChanging("Company");
                  _Company = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Company");
                  OnCompanyChanged();
              }
            }
        }
        private string _Company;
        partial void OnGetCompany(ref string value);
        partial void OnCompanyChanging(ref string value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// There are no comments for Position in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Position
        {
            get
            {
                string value = _Position;
                OnGetPosition(ref value);
                return value;
            }
            set
            {
                if (_Position != value)
                {
                  OnPositionChanging(ref value);
                  ReportPropertyChanging("Position");
                  _Position = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Position");
                  OnPositionChanged();
              }
            }
        }
        private string _Position;
        partial void OnGetPosition(ref string value);
        partial void OnPositionChanging(ref string value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// There are no comments for Tel1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tel1
        {
            get
            {
                string value = _Tel1;
                OnGetTel1(ref value);
                return value;
            }
            set
            {
                if (_Tel1 != value)
                {
                  OnTel1Changing(ref value);
                  ReportPropertyChanging("Tel1");
                  _Tel1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tel1");
                  OnTel1Changed();
              }
            }
        }
        private string _Tel1;
        partial void OnGetTel1(ref string value);
        partial void OnTel1Changing(ref string value);
        partial void OnTel1Changed();
    
        /// <summary>
        /// There are no comments for Tel2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tel2
        {
            get
            {
                string value = _Tel2;
                OnGetTel2(ref value);
                return value;
            }
            set
            {
                if (_Tel2 != value)
                {
                  OnTel2Changing(ref value);
                  ReportPropertyChanging("Tel2");
                  _Tel2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tel2");
                  OnTel2Changed();
              }
            }
        }
        private string _Tel2;
        partial void OnGetTel2(ref string value);
        partial void OnTel2Changing(ref string value);
        partial void OnTel2Changed();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for AddInfo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddInfo
        {
            get
            {
                string value = _AddInfo;
                OnGetAddInfo(ref value);
                return value;
            }
            set
            {
                if (_AddInfo != value)
                {
                  OnAddInfoChanging(ref value);
                  ReportPropertyChanging("AddInfo");
                  _AddInfo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddInfo");
                  OnAddInfoChanged();
              }
            }
        }
        private string _AddInfo;
        partial void OnGetAddInfo(ref string value);
        partial void OnAddInfoChanging(ref string value);
        partial void OnAddInfoChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for ContactType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ContactType
        {
            get
            {
                string value = _ContactType;
                OnGetContactType(ref value);
                return value;
            }
            set
            {
                if (_ContactType != value)
                {
                  OnContactTypeChanging(ref value);
                  ReportPropertyChanging("ContactType");
                  _ContactType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ContactType");
                  OnContactTypeChanged();
              }
            }
        }
        private string _ContactType;
        partial void OnGetContactType(ref string value);
        partial void OnContactTypeChanging(ref string value);
        partial void OnContactTypeChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobEntMains in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobEntMains")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobEntMains : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobEntMains object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        public static JobEntMains CreateJobEntMains(int id, int jobMainId, int custEntMainId)
        {
            JobEntMains jobEntMains = new JobEntMains();
            jobEntMains.Id = id;
            jobEntMains.JobMainId = jobMainId;
            jobEntMains.CustEntMainId = custEntMainId;
            return jobEntMains;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobEntMainJobMain", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobEntMainCustEntMain", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainCustEntMain", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobExpenses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobExpenses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobExpenses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobExpenses object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="expensesId">Initial value of ExpensesId.</param>
        /// <param name="jobServicesId">Initial value of JobServicesId.</param>
        public static JobExpenses CreateJobExpenses(int id, decimal amount, string remarks, int jobMainId, int expensesId, int jobServicesId)
        {
            JobExpenses jobExpenses = new JobExpenses();
            jobExpenses.Id = id;
            jobExpenses.Amount = amount;
            jobExpenses.Remarks = remarks;
            jobExpenses.JobMainId = jobMainId;
            jobExpenses.ExpensesId = expensesId;
            jobExpenses.JobServicesId = jobServicesId;
            return jobExpenses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for ExpensesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ExpensesId
        {
            get
            {
                int value = _ExpensesId;
                OnGetExpensesId(ref value);
                return value;
            }
            set
            {
                if (_ExpensesId != value)
                {
                  OnExpensesIdChanging(ref value);
                  ReportPropertyChanging("ExpensesId");
                  _ExpensesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpensesId");
                  OnExpensesIdChanged();
              }
            }
        }
        private int _ExpensesId;
        partial void OnGetExpensesId(ref int value);
        partial void OnExpensesIdChanging(ref int value);
        partial void OnExpensesIdChanged();
    
        /// <summary>
        /// There are no comments for JobServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobServicesId
        {
            get
            {
                int value = _JobServicesId;
                OnGetJobServicesId(ref value);
                return value;
            }
            set
            {
                if (_JobServicesId != value)
                {
                  OnJobServicesIdChanging(ref value);
                  ReportPropertyChanging("JobServicesId");
                  _JobServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobServicesId");
                  OnJobServicesIdChanged();
              }
            }
        }
        private int _JobServicesId;
        partial void OnGetJobServicesId(ref int value);
        partial void OnJobServicesIdChanging(ref int value);
        partial void OnJobServicesIdChanged();
    
        /// <summary>
        /// There are no comments for DtExpense in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtExpense
        {
            get
            {
                global::System.DateTime? value = _DtExpense;
                OnGetDtExpense(ref value);
                return value;
            }
            set
            {
                if (_DtExpense != value)
                {
                  OnDtExpenseChanging(ref value);
                  ReportPropertyChanging("DtExpense");
                  _DtExpense = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtExpense");
                  OnDtExpenseChanged();
              }
            }
        }
        private global::System.DateTime? _DtExpense;
        partial void OnGetDtExpense(ref global::System.DateTime? value);
        partial void OnDtExpenseChanging(ref global::System.DateTime? value);
        partial void OnDtExpenseChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Expenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ExpensesJobExpenses", "Expenses")]
        public virtual Expenses Expenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "Expenses").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "Expenses").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Expenses in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Expenses> ExpensesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "Expenses");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "Expenses", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Expenses>("DB_A0A0AE_ClientModel.FK_ExpensesJobExpenses", "Expenses").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobExpenses", "JobServices")]
        public virtual JobServices JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobServices> JobServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobServices").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobItineraries in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobItineraries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobItineraries : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobItineraries object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="destinationId">Initial value of DestinationId.</param>
        public static JobItineraries CreateJobItineraries(int id, int jobMainId, int destinationId)
        {
            JobItineraries jobItineraries = new JobItineraries();
            jobItineraries.Id = id;
            jobItineraries.JobMainId = jobMainId;
            jobItineraries.DestinationId = destinationId;
            return jobItineraries;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for DestinationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DestinationId
        {
            get
            {
                int value = _DestinationId;
                OnGetDestinationId(ref value);
                return value;
            }
            set
            {
                if (_DestinationId != value)
                {
                  OnDestinationIdChanging(ref value);
                  ReportPropertyChanging("DestinationId");
                  _DestinationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DestinationId");
                  OnDestinationIdChanged();
              }
            }
        }
        private int _DestinationId;
        partial void OnGetDestinationId(ref int value);
        partial void OnDestinationIdChanging(ref int value);
        partial void OnDestinationIdChanged();
    
        /// <summary>
        /// There are no comments for ActualRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? ActualRate
        {
            get
            {
                decimal? value = _ActualRate;
                OnGetActualRate(ref value);
                return value;
            }
            set
            {
                if (_ActualRate != value)
                {
                  OnActualRateChanging(ref value);
                  ReportPropertyChanging("ActualRate");
                  _ActualRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ActualRate");
                  OnActualRateChanged();
              }
            }
        }
        private decimal? _ActualRate;
        partial void OnGetActualRate(ref decimal? value);
        partial void OnActualRateChanging(ref decimal? value);
        partial void OnActualRateChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for ItiDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ItiDate
        {
            get
            {
                global::System.DateTime? value = _ItiDate;
                OnGetItiDate(ref value);
                return value;
            }
            set
            {
                if (_ItiDate != value)
                {
                  OnItiDateChanging(ref value);
                  ReportPropertyChanging("ItiDate");
                  _ItiDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItiDate");
                  OnItiDateChanged();
              }
            }
        }
        private global::System.DateTime? _ItiDate;
        partial void OnGetItiDate(ref global::System.DateTime? value);
        partial void OnItiDateChanging(ref global::System.DateTime? value);
        partial void OnItiDateChanged();
    
        /// <summary>
        /// There are no comments for SvcId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SvcId
        {
            get
            {
                int? value = _SvcId;
                OnGetSvcId(ref value);
                return value;
            }
            set
            {
                if (_SvcId != value)
                {
                  OnSvcIdChanging(ref value);
                  ReportPropertyChanging("SvcId");
                  _SvcId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SvcId");
                  OnSvcIdChanged();
              }
            }
        }
        private int? _SvcId;
        partial void OnGetSvcId(ref int? value);
        partial void OnSvcIdChanging(ref int? value);
        partial void OnSvcIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobItinerary", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Destinations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_DestinationJobItinerary", "Destinations")]
        public virtual Destinations Destinations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Destinations>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "Destinations").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Destinations>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "Destinations").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Destinations in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destinations> DestinationsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Destinations>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "Destinations");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Destinations>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "Destinations", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Destinations>("DB_A0A0AE_ClientModel.FK_DestinationJobItinerary", "Destinations").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobMains in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobMains")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobMains : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobMains object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobDate">Initial value of JobDate.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="noOfPax">Initial value of NoOfPax.</param>
        /// <param name="noOfDays">Initial value of NoOfDays.</param>
        /// <param name="jobStatusId">Initial value of JobStatusId.</param>
        /// <param name="branchId">Initial value of BranchId.</param>
        /// <param name="jobThruId">Initial value of JobThruId.</param>
        public static JobMains CreateJobMains(int id, global::System.DateTime jobDate, int customerId, string description, int noOfPax, int noOfDays, int jobStatusId, int branchId, int jobThruId)
        {
            JobMains jobMains = new JobMains();
            jobMains.Id = id;
            jobMains.JobDate = jobDate;
            jobMains.CustomerId = customerId;
            jobMains.Description = description;
            jobMains.NoOfPax = noOfPax;
            jobMains.NoOfDays = noOfDays;
            jobMains.JobStatusId = jobStatusId;
            jobMains.BranchId = branchId;
            jobMains.JobThruId = jobThruId;
            return jobMains;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime JobDate
        {
            get
            {
                global::System.DateTime value = _JobDate;
                OnGetJobDate(ref value);
                return value;
            }
            set
            {
                if (_JobDate != value)
                {
                  OnJobDateChanging(ref value);
                  ReportPropertyChanging("JobDate");
                  _JobDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobDate");
                  OnJobDateChanged();
              }
            }
        }
        private global::System.DateTime _JobDate;
        partial void OnGetJobDate(ref global::System.DateTime value);
        partial void OnJobDateChanging(ref global::System.DateTime value);
        partial void OnJobDateChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for NoOfPax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NoOfPax
        {
            get
            {
                int value = _NoOfPax;
                OnGetNoOfPax(ref value);
                return value;
            }
            set
            {
                if (_NoOfPax != value)
                {
                  OnNoOfPaxChanging(ref value);
                  ReportPropertyChanging("NoOfPax");
                  _NoOfPax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoOfPax");
                  OnNoOfPaxChanged();
              }
            }
        }
        private int _NoOfPax;
        partial void OnGetNoOfPax(ref int value);
        partial void OnNoOfPaxChanging(ref int value);
        partial void OnNoOfPaxChanged();
    
        /// <summary>
        /// There are no comments for NoOfDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NoOfDays
        {
            get
            {
                int value = _NoOfDays;
                OnGetNoOfDays(ref value);
                return value;
            }
            set
            {
                if (_NoOfDays != value)
                {
                  OnNoOfDaysChanging(ref value);
                  ReportPropertyChanging("NoOfDays");
                  _NoOfDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoOfDays");
                  OnNoOfDaysChanged();
              }
            }
        }
        private int _NoOfDays;
        partial void OnGetNoOfDays(ref int value);
        partial void OnNoOfDaysChanging(ref int value);
        partial void OnNoOfDaysChanged();
    
        /// <summary>
        /// There are no comments for JobRemarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string JobRemarks
        {
            get
            {
                string value = _JobRemarks;
                OnGetJobRemarks(ref value);
                return value;
            }
            set
            {
                if (_JobRemarks != value)
                {
                  OnJobRemarksChanging(ref value);
                  ReportPropertyChanging("JobRemarks");
                  _JobRemarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("JobRemarks");
                  OnJobRemarksChanged();
              }
            }
        }
        private string _JobRemarks;
        partial void OnGetJobRemarks(ref string value);
        partial void OnJobRemarksChanging(ref string value);
        partial void OnJobRemarksChanged();
    
        /// <summary>
        /// There are no comments for JobStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobStatusId
        {
            get
            {
                int value = _JobStatusId;
                OnGetJobStatusId(ref value);
                return value;
            }
            set
            {
                if (_JobStatusId != value)
                {
                  OnJobStatusIdChanging(ref value);
                  ReportPropertyChanging("JobStatusId");
                  _JobStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobStatusId");
                  OnJobStatusIdChanged();
              }
            }
        }
        private int _JobStatusId;
        partial void OnGetJobStatusId(ref int value);
        partial void OnJobStatusIdChanging(ref int value);
        partial void OnJobStatusIdChanged();
    
        /// <summary>
        /// There are no comments for StatusRemarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string StatusRemarks
        {
            get
            {
                string value = _StatusRemarks;
                OnGetStatusRemarks(ref value);
                return value;
            }
            set
            {
                if (_StatusRemarks != value)
                {
                  OnStatusRemarksChanging(ref value);
                  ReportPropertyChanging("StatusRemarks");
                  _StatusRemarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StatusRemarks");
                  OnStatusRemarksChanged();
              }
            }
        }
        private string _StatusRemarks;
        partial void OnGetStatusRemarks(ref string value);
        partial void OnStatusRemarksChanging(ref string value);
        partial void OnStatusRemarksChanged();
    
        /// <summary>
        /// There are no comments for BranchId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BranchId
        {
            get
            {
                int value = _BranchId;
                OnGetBranchId(ref value);
                return value;
            }
            set
            {
                if (_BranchId != value)
                {
                  OnBranchIdChanging(ref value);
                  ReportPropertyChanging("BranchId");
                  _BranchId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BranchId");
                  OnBranchIdChanged();
              }
            }
        }
        private int _BranchId;
        partial void OnGetBranchId(ref int value);
        partial void OnBranchIdChanging(ref int value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// There are no comments for JobThruId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobThruId
        {
            get
            {
                int value = _JobThruId;
                OnGetJobThruId(ref value);
                return value;
            }
            set
            {
                if (_JobThruId != value)
                {
                  OnJobThruIdChanging(ref value);
                  ReportPropertyChanging("JobThruId");
                  _JobThruId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobThruId");
                  OnJobThruIdChanged();
              }
            }
        }
        private int _JobThruId;
        partial void OnGetJobThruId(ref int value);
        partial void OnJobThruIdChanging(ref int value);
        partial void OnJobThruIdChanged();
    
        /// <summary>
        /// There are no comments for AgreedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? AgreedAmt
        {
            get
            {
                decimal? value = _AgreedAmt;
                OnGetAgreedAmt(ref value);
                return value;
            }
            set
            {
                if (_AgreedAmt != value)
                {
                  OnAgreedAmtChanging(ref value);
                  ReportPropertyChanging("AgreedAmt");
                  _AgreedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgreedAmt");
                  OnAgreedAmtChanged();
              }
            }
        }
        private decimal? _AgreedAmt;
        partial void OnGetAgreedAmt(ref decimal? value);
        partial void OnAgreedAmtChanging(ref decimal? value);
        partial void OnAgreedAmtChanged();
    
        /// <summary>
        /// There are no comments for CustContactEmail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustContactEmail
        {
            get
            {
                string value = _CustContactEmail;
                OnGetCustContactEmail(ref value);
                return value;
            }
            set
            {
                if (_CustContactEmail != value)
                {
                  OnCustContactEmailChanging(ref value);
                  ReportPropertyChanging("CustContactEmail");
                  _CustContactEmail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustContactEmail");
                  OnCustContactEmailChanged();
              }
            }
        }
        private string _CustContactEmail;
        partial void OnGetCustContactEmail(ref string value);
        partial void OnCustContactEmailChanging(ref string value);
        partial void OnCustContactEmailChanged();
    
        /// <summary>
        /// There are no comments for CustContactNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustContactNumber
        {
            get
            {
                string value = _CustContactNumber;
                OnGetCustContactNumber(ref value);
                return value;
            }
            set
            {
                if (_CustContactNumber != value)
                {
                  OnCustContactNumberChanging(ref value);
                  ReportPropertyChanging("CustContactNumber");
                  _CustContactNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustContactNumber");
                  OnCustContactNumberChanged();
              }
            }
        }
        private string _CustContactNumber;
        partial void OnGetCustContactNumber(ref string value);
        partial void OnCustContactNumberChanging(ref string value);
        partial void OnCustContactNumberChanged();
    
        /// <summary>
        /// There are no comments for AssignedTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AssignedTo
        {
            get
            {
                string value = _AssignedTo;
                OnGetAssignedTo(ref value);
                return value;
            }
            set
            {
                if (_AssignedTo != value)
                {
                  OnAssignedToChanging(ref value);
                  ReportPropertyChanging("AssignedTo");
                  _AssignedTo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AssignedTo");
                  OnAssignedToChanged();
              }
            }
        }
        private string _AssignedTo;
        partial void OnGetAssignedTo(ref string value);
        partial void OnAssignedToChanging(ref string value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// There are no comments for DueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DueDate
        {
            get
            {
                global::System.DateTime? value = _DueDate;
                OnGetDueDate(ref value);
                return value;
            }
            set
            {
                if (_DueDate != value)
                {
                  OnDueDateChanging(ref value);
                  ReportPropertyChanging("DueDate");
                  _DueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DueDate");
                  OnDueDateChanged();
              }
            }
        }
        private global::System.DateTime? _DueDate;
        partial void OnGetDueDate(ref global::System.DateTime? value);
        partial void OnDueDateChanging(ref global::System.DateTime? value);
        partial void OnDueDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CashExpenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CashExpenseJobMain", "CashExpenses")]
        public virtual EntityCollection<CashExpenses> CashExpenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CashExpenses>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "CashExpenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CashExpenses>("DB_A0A0AE_ClientModel.FK_CashExpenseJobMain", "CashExpenses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobEntMainJobMain", "JobEntMains")]
        public virtual EntityCollection<JobEntMains> JobEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobEntMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobEntMains>("DB_A0A0AE_ClientModel.FK_JobEntMainJobMain", "JobEntMains", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobItineraries in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobItinerary", "JobItineraries")]
        public virtual EntityCollection<JobItineraries> JobItineraries
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobItineraries>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobItineraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobItineraries>("DB_A0A0AE_ClientModel.FK_JobMainJobItinerary", "JobItineraries", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerJobMain", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerJobMain", "Customers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Branches in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_BranchJobMain", "Branches")]
        public virtual Branches Branches
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Branches>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "Branches").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Branches>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "Branches").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Branches in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branches> BranchesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Branches>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "Branches");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Branches>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "Branches", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Branches>("DB_A0A0AE_ClientModel.FK_BranchJobMain", "Branches").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobStatusJobMain", "JobStatus")]
        public virtual JobStatus JobStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobStatus>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobStatus>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobStatus> JobStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobStatus>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobStatus>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobStatus>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobThrus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobThruJobMain", "JobThrus")]
        public virtual JobThrus JobThrus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobThrus>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobThrus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobThrus>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobThrus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobThrus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobThrus> JobThrusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobThrus>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobThrus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobThrus>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobThrus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobThrus>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobThrus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobNotes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobNote", "JobNotes")]
        public virtual EntityCollection<JobNotes> JobNotes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobNotes>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobNotes>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobNotes", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobPayments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPayment", "JobPayments")]
        public virtual EntityCollection<JobPayments> JobPayments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobPayments>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobPayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobPayments>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobPayments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobPickups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPickup", "JobPickups")]
        public virtual EntityCollection<JobPickups> JobPickups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobPickups>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobPickups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobPickups>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobPickups", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobPosts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPost", "JobPosts")]
        public virtual EntityCollection<JobPosts> JobPosts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobPosts>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobPosts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobPosts>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobPosts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobSupplier", "JobServices")]
        public virtual EntityCollection<JobServices> JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobServices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobType", "JobTypes")]
        public virtual EntityCollection<JobTypes> JobTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobTypes>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobTypes>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobTypes", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobVehicles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobVehicle", "JobVehicles")]
        public virtual EntityCollection<JobVehicles> JobVehicles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobVehicles>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobVehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobVehicles>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobVehicles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadLinks in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainSalesLeadLink", "SalesLeadLinks")]
        public virtual EntityCollection<SalesLeadLinks> SalesLeadLinks
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadLinks>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "SalesLeadLinks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadLinks>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "SalesLeadLinks", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobNotes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobNotes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobNotes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobNotes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        public static JobNotes CreateJobNotes(int id, int jobMainId)
        {
            JobNotes jobNotes = new JobNotes();
            jobNotes.Id = id;
            jobNotes.JobMainId = jobMainId;
            return jobNotes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for Sort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Sort
        {
            get
            {
                int? value = _Sort;
                OnGetSort(ref value);
                return value;
            }
            set
            {
                if (_Sort != value)
                {
                  OnSortChanging(ref value);
                  ReportPropertyChanging("Sort");
                  _Sort = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Sort");
                  OnSortChanged();
              }
            }
        }
        private int? _Sort;
        partial void OnGetSort(ref int? value);
        partial void OnSortChanging(ref int? value);
        partial void OnSortChanged();
    
        /// <summary>
        /// There are no comments for Note in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Note
        {
            get
            {
                string value = _Note;
                OnGetNote(ref value);
                return value;
            }
            set
            {
                if (_Note != value)
                {
                  OnNoteChanging(ref value);
                  ReportPropertyChanging("Note");
                  _Note = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Note");
                  OnNoteChanged();
              }
            }
        }
        private string _Note;
        partial void OnGetNote(ref string value);
        partial void OnNoteChanging(ref string value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobNote", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobNote", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobNotificationRequests in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobNotificationRequests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobNotificationRequests : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobNotificationRequests object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="serviceId">Initial value of ServiceId.</param>
        /// <param name="reqDt">Initial value of ReqDt.</param>
        public static JobNotificationRequests CreateJobNotificationRequests(int id, int serviceId, global::System.DateTime reqDt)
        {
            JobNotificationRequests jobNotificationRequests = new JobNotificationRequests();
            jobNotificationRequests.Id = id;
            jobNotificationRequests.ServiceId = serviceId;
            jobNotificationRequests.ReqDt = reqDt;
            return jobNotificationRequests;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ServiceId
        {
            get
            {
                int value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private int _ServiceId;
        partial void OnGetServiceId(ref int value);
        partial void OnServiceIdChanging(ref int value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for ReqDt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ReqDt
        {
            get
            {
                global::System.DateTime value = _ReqDt;
                OnGetReqDt(ref value);
                return value;
            }
            set
            {
                if (_ReqDt != value)
                {
                  OnReqDtChanging(ref value);
                  ReportPropertyChanging("ReqDt");
                  _ReqDt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqDt");
                  OnReqDtChanged();
              }
            }
        }
        private global::System.DateTime _ReqDt;
        partial void OnGetReqDt(ref global::System.DateTime value);
        partial void OnReqDtChanging(ref global::System.DateTime value);
        partial void OnReqDtChanged();
    
        /// <summary>
        /// There are no comments for RefId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RefId
        {
            get
            {
                string value = _RefId;
                OnGetRefId(ref value);
                return value;
            }
            set
            {
                if (_RefId != value)
                {
                  OnRefIdChanging(ref value);
                  ReportPropertyChanging("RefId");
                  _RefId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RefId");
                  OnRefIdChanged();
              }
            }
        }
        private string _RefId;
        partial void OnGetRefId(ref string value);
        partial void OnRefIdChanging(ref string value);
        partial void OnRefIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobPayments in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobPayments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobPayments : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobPayments object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="dtPayment">Initial value of DtPayment.</param>
        /// <param name="paymentAmt">Initial value of PaymentAmt.</param>
        /// <param name="bankId">Initial value of BankId.</param>
        public static JobPayments CreateJobPayments(int id, int jobMainId, global::System.DateTime dtPayment, decimal paymentAmt, int bankId)
        {
            JobPayments jobPayments = new JobPayments();
            jobPayments.Id = id;
            jobPayments.JobMainId = jobMainId;
            jobPayments.DtPayment = dtPayment;
            jobPayments.PaymentAmt = paymentAmt;
            jobPayments.BankId = bankId;
            return jobPayments;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for DtPayment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtPayment
        {
            get
            {
                global::System.DateTime value = _DtPayment;
                OnGetDtPayment(ref value);
                return value;
            }
            set
            {
                if (_DtPayment != value)
                {
                  OnDtPaymentChanging(ref value);
                  ReportPropertyChanging("DtPayment");
                  _DtPayment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtPayment");
                  OnDtPaymentChanged();
              }
            }
        }
        private global::System.DateTime _DtPayment;
        partial void OnGetDtPayment(ref global::System.DateTime value);
        partial void OnDtPaymentChanging(ref global::System.DateTime value);
        partial void OnDtPaymentChanged();
    
        /// <summary>
        /// There are no comments for PaymentAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PaymentAmt
        {
            get
            {
                decimal value = _PaymentAmt;
                OnGetPaymentAmt(ref value);
                return value;
            }
            set
            {
                if (_PaymentAmt != value)
                {
                  OnPaymentAmtChanging(ref value);
                  ReportPropertyChanging("PaymentAmt");
                  _PaymentAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PaymentAmt");
                  OnPaymentAmtChanged();
              }
            }
        }
        private decimal _PaymentAmt;
        partial void OnGetPaymentAmt(ref decimal value);
        partial void OnPaymentAmtChanging(ref decimal value);
        partial void OnPaymentAmtChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for BankId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BankId
        {
            get
            {
                int value = _BankId;
                OnGetBankId(ref value);
                return value;
            }
            set
            {
                if (_BankId != value)
                {
                  OnBankIdChanging(ref value);
                  ReportPropertyChanging("BankId");
                  _BankId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BankId");
                  OnBankIdChanged();
              }
            }
        }
        private int _BankId;
        partial void OnGetBankId(ref int value);
        partial void OnBankIdChanging(ref int value);
        partial void OnBankIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPayment", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPayment", "JobMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Banks in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_BankJobPayment", "Banks")]
        public virtual Banks Banks
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Banks>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "Banks").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Banks>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "Banks").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Banks in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Banks> BanksReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Banks>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "Banks");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Banks>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "Banks", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Banks>("DB_A0A0AE_ClientModel.FK_BankJobPayment", "Banks").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobPickups in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobPickups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobPickups : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobPickups object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="puDate">Initial value of PuDate.</param>
        /// <param name="puTime">Initial value of PuTime.</param>
        /// <param name="puLocation">Initial value of PuLocation.</param>
        /// <param name="contactName">Initial value of ContactName.</param>
        /// <param name="contactNumber">Initial value of ContactNumber.</param>
        public static JobPickups CreateJobPickups(int id, int jobMainId, global::System.DateTime puDate, string puTime, string puLocation, string contactName, string contactNumber)
        {
            JobPickups jobPickups = new JobPickups();
            jobPickups.Id = id;
            jobPickups.JobMainId = jobMainId;
            jobPickups.PuDate = puDate;
            jobPickups.PuTime = puTime;
            jobPickups.PuLocation = puLocation;
            jobPickups.ContactName = contactName;
            jobPickups.ContactNumber = contactNumber;
            return jobPickups;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for PuDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PuDate
        {
            get
            {
                global::System.DateTime value = _PuDate;
                OnGetPuDate(ref value);
                return value;
            }
            set
            {
                if (_PuDate != value)
                {
                  OnPuDateChanging(ref value);
                  ReportPropertyChanging("PuDate");
                  _PuDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PuDate");
                  OnPuDateChanged();
              }
            }
        }
        private global::System.DateTime _PuDate;
        partial void OnGetPuDate(ref global::System.DateTime value);
        partial void OnPuDateChanging(ref global::System.DateTime value);
        partial void OnPuDateChanged();
    
        /// <summary>
        /// There are no comments for PuTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PuTime
        {
            get
            {
                string value = _PuTime;
                OnGetPuTime(ref value);
                return value;
            }
            set
            {
                if (_PuTime != value)
                {
                  OnPuTimeChanging(ref value);
                  ReportPropertyChanging("PuTime");
                  _PuTime = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PuTime");
                  OnPuTimeChanged();
              }
            }
        }
        private string _PuTime;
        partial void OnGetPuTime(ref string value);
        partial void OnPuTimeChanging(ref string value);
        partial void OnPuTimeChanged();
    
        /// <summary>
        /// There are no comments for PuLocation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PuLocation
        {
            get
            {
                string value = _PuLocation;
                OnGetPuLocation(ref value);
                return value;
            }
            set
            {
                if (_PuLocation != value)
                {
                  OnPuLocationChanging(ref value);
                  ReportPropertyChanging("PuLocation");
                  _PuLocation = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PuLocation");
                  OnPuLocationChanged();
              }
            }
        }
        private string _PuLocation;
        partial void OnGetPuLocation(ref string value);
        partial void OnPuLocationChanging(ref string value);
        partial void OnPuLocationChanged();
    
        /// <summary>
        /// There are no comments for ContactName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ContactName
        {
            get
            {
                string value = _ContactName;
                OnGetContactName(ref value);
                return value;
            }
            set
            {
                if (_ContactName != value)
                {
                  OnContactNameChanging(ref value);
                  ReportPropertyChanging("ContactName");
                  _ContactName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ContactName");
                  OnContactNameChanged();
              }
            }
        }
        private string _ContactName;
        partial void OnGetContactName(ref string value);
        partial void OnContactNameChanging(ref string value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// There are no comments for ContactNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ContactNumber
        {
            get
            {
                string value = _ContactNumber;
                OnGetContactNumber(ref value);
                return value;
            }
            set
            {
                if (_ContactNumber != value)
                {
                  OnContactNumberChanging(ref value);
                  ReportPropertyChanging("ContactNumber");
                  _ContactNumber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ContactNumber");
                  OnContactNumberChanged();
              }
            }
        }
        private string _ContactNumber;
        partial void OnGetContactNumber(ref string value);
        partial void OnContactNumberChanging(ref string value);
        partial void OnContactNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPickup", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPickup", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobPosts in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobPosts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobPosts : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobPosts object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtPost">Initial value of DtPost.</param>
        /// <param name="paymentAmt">Initial value of PaymentAmt.</param>
        /// <param name="expensesAmt">Initial value of ExpensesAmt.</param>
        /// <param name="carRentalInc">Initial value of CarRentalInc.</param>
        /// <param name="tourInc">Initial value of TourInc.</param>
        /// <param name="othersInc">Initial value of OthersInc.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        public static JobPosts CreateJobPosts(int id, global::System.DateTime dtPost, decimal paymentAmt, decimal expensesAmt, decimal carRentalInc, decimal tourInc, decimal othersInc, string remarks, int jobMainId)
        {
            JobPosts jobPosts = new JobPosts();
            jobPosts.Id = id;
            jobPosts.DtPost = dtPost;
            jobPosts.PaymentAmt = paymentAmt;
            jobPosts.ExpensesAmt = expensesAmt;
            jobPosts.CarRentalInc = carRentalInc;
            jobPosts.TourInc = tourInc;
            jobPosts.OthersInc = othersInc;
            jobPosts.Remarks = remarks;
            jobPosts.JobMainId = jobMainId;
            return jobPosts;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtPost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtPost
        {
            get
            {
                global::System.DateTime value = _DtPost;
                OnGetDtPost(ref value);
                return value;
            }
            set
            {
                if (_DtPost != value)
                {
                  OnDtPostChanging(ref value);
                  ReportPropertyChanging("DtPost");
                  _DtPost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtPost");
                  OnDtPostChanged();
              }
            }
        }
        private global::System.DateTime _DtPost;
        partial void OnGetDtPost(ref global::System.DateTime value);
        partial void OnDtPostChanging(ref global::System.DateTime value);
        partial void OnDtPostChanged();
    
        /// <summary>
        /// There are no comments for PaymentAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PaymentAmt
        {
            get
            {
                decimal value = _PaymentAmt;
                OnGetPaymentAmt(ref value);
                return value;
            }
            set
            {
                if (_PaymentAmt != value)
                {
                  OnPaymentAmtChanging(ref value);
                  ReportPropertyChanging("PaymentAmt");
                  _PaymentAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PaymentAmt");
                  OnPaymentAmtChanged();
              }
            }
        }
        private decimal _PaymentAmt;
        partial void OnGetPaymentAmt(ref decimal value);
        partial void OnPaymentAmtChanging(ref decimal value);
        partial void OnPaymentAmtChanged();
    
        /// <summary>
        /// There are no comments for ExpensesAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExpensesAmt
        {
            get
            {
                decimal value = _ExpensesAmt;
                OnGetExpensesAmt(ref value);
                return value;
            }
            set
            {
                if (_ExpensesAmt != value)
                {
                  OnExpensesAmtChanging(ref value);
                  ReportPropertyChanging("ExpensesAmt");
                  _ExpensesAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpensesAmt");
                  OnExpensesAmtChanged();
              }
            }
        }
        private decimal _ExpensesAmt;
        partial void OnGetExpensesAmt(ref decimal value);
        partial void OnExpensesAmtChanging(ref decimal value);
        partial void OnExpensesAmtChanged();
    
        /// <summary>
        /// There are no comments for CarRentalInc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CarRentalInc
        {
            get
            {
                decimal value = _CarRentalInc;
                OnGetCarRentalInc(ref value);
                return value;
            }
            set
            {
                if (_CarRentalInc != value)
                {
                  OnCarRentalIncChanging(ref value);
                  ReportPropertyChanging("CarRentalInc");
                  _CarRentalInc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarRentalInc");
                  OnCarRentalIncChanged();
              }
            }
        }
        private decimal _CarRentalInc;
        partial void OnGetCarRentalInc(ref decimal value);
        partial void OnCarRentalIncChanging(ref decimal value);
        partial void OnCarRentalIncChanged();
    
        /// <summary>
        /// There are no comments for TourInc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TourInc
        {
            get
            {
                decimal value = _TourInc;
                OnGetTourInc(ref value);
                return value;
            }
            set
            {
                if (_TourInc != value)
                {
                  OnTourIncChanging(ref value);
                  ReportPropertyChanging("TourInc");
                  _TourInc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TourInc");
                  OnTourIncChanged();
              }
            }
        }
        private decimal _TourInc;
        partial void OnGetTourInc(ref decimal value);
        partial void OnTourIncChanging(ref decimal value);
        partial void OnTourIncChanged();
    
        /// <summary>
        /// There are no comments for OthersInc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OthersInc
        {
            get
            {
                decimal value = _OthersInc;
                OnGetOthersInc(ref value);
                return value;
            }
            set
            {
                if (_OthersInc != value)
                {
                  OnOthersIncChanging(ref value);
                  ReportPropertyChanging("OthersInc");
                  _OthersInc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OthersInc");
                  OnOthersIncChanged();
              }
            }
        }
        private decimal _OthersInc;
        partial void OnGetOthersInc(ref decimal value);
        partial void OnOthersIncChanging(ref decimal value);
        partial void OnOthersIncChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobPost", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobPost", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobServiceItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobServiceItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobServiceItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobServiceItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobServicesId">Initial value of JobServicesId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        public static JobServiceItems CreateJobServiceItems(int id, int jobServicesId, int invItemId)
        {
            JobServiceItems jobServiceItems = new JobServiceItems();
            jobServiceItems.Id = id;
            jobServiceItems.JobServicesId = jobServicesId;
            jobServiceItems.InvItemId = invItemId;
            return jobServiceItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobServicesId
        {
            get
            {
                int value = _JobServicesId;
                OnGetJobServicesId(ref value);
                return value;
            }
            set
            {
                if (_JobServicesId != value)
                {
                  OnJobServicesIdChanging(ref value);
                  ReportPropertyChanging("JobServicesId");
                  _JobServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobServicesId");
                  OnJobServicesIdChanged();
              }
            }
        }
        private int _JobServicesId;
        partial void OnGetJobServicesId(ref int value);
        partial void OnJobServicesIdChanging(ref int value);
        partial void OnJobServicesIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobServiceItem", "JobServices")]
        public virtual JobServices JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobServices> JobServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServices").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemJobServiceItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemJobServiceItem", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobServicePickups in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobServicePickups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobServicePickups : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobServicePickups object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobServicesId">Initial value of JobServicesId.</param>
        /// <param name="jsDate">Initial value of JsDate.</param>
        public static JobServicePickups CreateJobServicePickups(int id, int jobServicesId, global::System.DateTime jsDate)
        {
            JobServicePickups jobServicePickups = new JobServicePickups();
            jobServicePickups.Id = id;
            jobServicePickups.JobServicesId = jobServicesId;
            jobServicePickups.JsDate = jsDate;
            return jobServicePickups;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobServicesId
        {
            get
            {
                int value = _JobServicesId;
                OnGetJobServicesId(ref value);
                return value;
            }
            set
            {
                if (_JobServicesId != value)
                {
                  OnJobServicesIdChanging(ref value);
                  ReportPropertyChanging("JobServicesId");
                  _JobServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobServicesId");
                  OnJobServicesIdChanged();
              }
            }
        }
        private int _JobServicesId;
        partial void OnGetJobServicesId(ref int value);
        partial void OnJobServicesIdChanging(ref int value);
        partial void OnJobServicesIdChanged();
    
        /// <summary>
        /// There are no comments for JsDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime JsDate
        {
            get
            {
                global::System.DateTime value = _JsDate;
                OnGetJsDate(ref value);
                return value;
            }
            set
            {
                if (_JsDate != value)
                {
                  OnJsDateChanging(ref value);
                  ReportPropertyChanging("JsDate");
                  _JsDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JsDate");
                  OnJsDateChanged();
              }
            }
        }
        private global::System.DateTime _JsDate;
        partial void OnGetJsDate(ref global::System.DateTime value);
        partial void OnJsDateChanging(ref global::System.DateTime value);
        partial void OnJsDateChanged();
    
        /// <summary>
        /// There are no comments for JsTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string JsTime
        {
            get
            {
                string value = _JsTime;
                OnGetJsTime(ref value);
                return value;
            }
            set
            {
                if (_JsTime != value)
                {
                  OnJsTimeChanging(ref value);
                  ReportPropertyChanging("JsTime");
                  _JsTime = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("JsTime");
                  OnJsTimeChanged();
              }
            }
        }
        private string _JsTime;
        partial void OnGetJsTime(ref string value);
        partial void OnJsTimeChanging(ref string value);
        partial void OnJsTimeChanged();
    
        /// <summary>
        /// There are no comments for JsLocation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string JsLocation
        {
            get
            {
                string value = _JsLocation;
                OnGetJsLocation(ref value);
                return value;
            }
            set
            {
                if (_JsLocation != value)
                {
                  OnJsLocationChanging(ref value);
                  ReportPropertyChanging("JsLocation");
                  _JsLocation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("JsLocation");
                  OnJsLocationChanged();
              }
            }
        }
        private string _JsLocation;
        partial void OnGetJsLocation(ref string value);
        partial void OnJsLocationChanging(ref string value);
        partial void OnJsLocationChanged();
    
        /// <summary>
        /// There are no comments for ClientName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClientName
        {
            get
            {
                string value = _ClientName;
                OnGetClientName(ref value);
                return value;
            }
            set
            {
                if (_ClientName != value)
                {
                  OnClientNameChanging(ref value);
                  ReportPropertyChanging("ClientName");
                  _ClientName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClientName");
                  OnClientNameChanged();
              }
            }
        }
        private string _ClientName;
        partial void OnGetClientName(ref string value);
        partial void OnClientNameChanging(ref string value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// There are no comments for ClientContact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClientContact
        {
            get
            {
                string value = _ClientContact;
                OnGetClientContact(ref value);
                return value;
            }
            set
            {
                if (_ClientContact != value)
                {
                  OnClientContactChanging(ref value);
                  ReportPropertyChanging("ClientContact");
                  _ClientContact = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClientContact");
                  OnClientContactChanged();
              }
            }
        }
        private string _ClientContact;
        partial void OnGetClientContact(ref string value);
        partial void OnClientContactChanging(ref string value);
        partial void OnClientContactChanged();
    
        /// <summary>
        /// There are no comments for ProviderName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProviderName
        {
            get
            {
                string value = _ProviderName;
                OnGetProviderName(ref value);
                return value;
            }
            set
            {
                if (_ProviderName != value)
                {
                  OnProviderNameChanging(ref value);
                  ReportPropertyChanging("ProviderName");
                  _ProviderName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProviderName");
                  OnProviderNameChanged();
              }
            }
        }
        private string _ProviderName;
        partial void OnGetProviderName(ref string value);
        partial void OnProviderNameChanging(ref string value);
        partial void OnProviderNameChanged();
    
        /// <summary>
        /// There are no comments for ProviderContact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProviderContact
        {
            get
            {
                string value = _ProviderContact;
                OnGetProviderContact(ref value);
                return value;
            }
            set
            {
                if (_ProviderContact != value)
                {
                  OnProviderContactChanging(ref value);
                  ReportPropertyChanging("ProviderContact");
                  _ProviderContact = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProviderContact");
                  OnProviderContactChanged();
              }
            }
        }
        private string _ProviderContact;
        partial void OnGetProviderContact(ref string value);
        partial void OnProviderContactChanging(ref string value);
        partial void OnProviderContactChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobServicePickup", "JobServices")]
        public virtual JobServices JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobServices> JobServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServices").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobServices in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobServices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobServices : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobServices object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="servicesId">Initial value of ServicesId.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        /// <param name="supplierItemId">Initial value of SupplierItemId.</param>
        public static JobServices CreateJobServices(int id, int jobMainId, int servicesId, int supplierId, int supplierItemId)
        {
            JobServices jobServices = new JobServices();
            jobServices.Id = id;
            jobServices.JobMainId = jobMainId;
            jobServices.ServicesId = servicesId;
            jobServices.SupplierId = supplierId;
            jobServices.SupplierItemId = supplierItemId;
            return jobServices;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for ServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ServicesId
        {
            get
            {
                int value = _ServicesId;
                OnGetServicesId(ref value);
                return value;
            }
            set
            {
                if (_ServicesId != value)
                {
                  OnServicesIdChanging(ref value);
                  ReportPropertyChanging("ServicesId");
                  _ServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ServicesId");
                  OnServicesIdChanged();
              }
            }
        }
        private int _ServicesId;
        partial void OnGetServicesId(ref int value);
        partial void OnServicesIdChanging(ref int value);
        partial void OnServicesIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for Particulars in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Particulars
        {
            get
            {
                string value = _Particulars;
                OnGetParticulars(ref value);
                return value;
            }
            set
            {
                if (_Particulars != value)
                {
                  OnParticularsChanging(ref value);
                  ReportPropertyChanging("Particulars");
                  _Particulars = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Particulars");
                  OnParticularsChanged();
              }
            }
        }
        private string _Particulars;
        partial void OnGetParticulars(ref string value);
        partial void OnParticularsChanging(ref string value);
        partial void OnParticularsChanged();
    
        /// <summary>
        /// There are no comments for QuotedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? QuotedAmt
        {
            get
            {
                decimal? value = _QuotedAmt;
                OnGetQuotedAmt(ref value);
                return value;
            }
            set
            {
                if (_QuotedAmt != value)
                {
                  OnQuotedAmtChanging(ref value);
                  ReportPropertyChanging("QuotedAmt");
                  _QuotedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QuotedAmt");
                  OnQuotedAmtChanged();
              }
            }
        }
        private decimal? _QuotedAmt;
        partial void OnGetQuotedAmt(ref decimal? value);
        partial void OnQuotedAmtChanging(ref decimal? value);
        partial void OnQuotedAmtChanged();
    
        /// <summary>
        /// There are no comments for SupplierAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? SupplierAmt
        {
            get
            {
                decimal? value = _SupplierAmt;
                OnGetSupplierAmt(ref value);
                return value;
            }
            set
            {
                if (_SupplierAmt != value)
                {
                  OnSupplierAmtChanging(ref value);
                  ReportPropertyChanging("SupplierAmt");
                  _SupplierAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierAmt");
                  OnSupplierAmtChanged();
              }
            }
        }
        private decimal? _SupplierAmt;
        partial void OnGetSupplierAmt(ref decimal? value);
        partial void OnSupplierAmtChanging(ref decimal? value);
        partial void OnSupplierAmtChanged();
    
        /// <summary>
        /// There are no comments for ActualAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? ActualAmt
        {
            get
            {
                decimal? value = _ActualAmt;
                OnGetActualAmt(ref value);
                return value;
            }
            set
            {
                if (_ActualAmt != value)
                {
                  OnActualAmtChanging(ref value);
                  ReportPropertyChanging("ActualAmt");
                  _ActualAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ActualAmt");
                  OnActualAmtChanged();
              }
            }
        }
        private decimal? _ActualAmt;
        partial void OnGetActualAmt(ref decimal? value);
        partial void OnActualAmtChanging(ref decimal? value);
        partial void OnActualAmtChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SupplierItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierItemId
        {
            get
            {
                int value = _SupplierItemId;
                OnGetSupplierItemId(ref value);
                return value;
            }
            set
            {
                if (_SupplierItemId != value)
                {
                  OnSupplierItemIdChanging(ref value);
                  ReportPropertyChanging("SupplierItemId");
                  _SupplierItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierItemId");
                  OnSupplierItemIdChanged();
              }
            }
        }
        private int _SupplierItemId;
        partial void OnGetSupplierItemId(ref int value);
        partial void OnSupplierItemIdChanging(ref int value);
        partial void OnSupplierItemIdChanged();
    
        /// <summary>
        /// There are no comments for DtStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtStart
        {
            get
            {
                global::System.DateTime? value = _DtStart;
                OnGetDtStart(ref value);
                return value;
            }
            set
            {
                if (_DtStart != value)
                {
                  OnDtStartChanging(ref value);
                  ReportPropertyChanging("DtStart");
                  _DtStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStart");
                  OnDtStartChanged();
              }
            }
        }
        private global::System.DateTime? _DtStart;
        partial void OnGetDtStart(ref global::System.DateTime? value);
        partial void OnDtStartChanging(ref global::System.DateTime? value);
        partial void OnDtStartChanged();
    
        /// <summary>
        /// There are no comments for DtEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtEnd
        {
            get
            {
                global::System.DateTime? value = _DtEnd;
                OnGetDtEnd(ref value);
                return value;
            }
            set
            {
                if (_DtEnd != value)
                {
                  OnDtEndChanging(ref value);
                  ReportPropertyChanging("DtEnd");
                  _DtEnd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEnd");
                  OnDtEndChanged();
              }
            }
        }
        private global::System.DateTime? _DtEnd;
        partial void OnGetDtEnd(ref global::System.DateTime? value);
        partial void OnDtEndChanging(ref global::System.DateTime? value);
        partial void OnDtEndChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobActions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobAction", "JobActions")]
        public virtual EntityCollection<JobActions> JobActions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobActions>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobActions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobActions>("DB_A0A0AE_ClientModel.FK_JobServicesJobAction", "JobActions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobExpenses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobExpenses", "JobExpenses")]
        public virtual EntityCollection<JobExpenses> JobExpenses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobExpenses>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobExpenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobExpenses>("DB_A0A0AE_ClientModel.FK_JobServicesJobExpenses", "JobExpenses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServiceItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobServiceItem", "JobServiceItems")]
        public virtual EntityCollection<JobServiceItems> JobServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServiceItems>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServiceItems>("DB_A0A0AE_ClientModel.FK_JobServicesJobServiceItem", "JobServiceItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServicePickups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesJobServicePickup", "JobServicePickups")]
        public virtual EntityCollection<JobServicePickups> JobServicePickups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServicePickups>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServicePickups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServicePickups>("DB_A0A0AE_ClientModel.FK_JobServicesJobServicePickup", "JobServicePickups", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobSupplier", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobSupplier", "JobMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierJobSupplier", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "Suppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Services in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ServicesJobServices", "Services")]
        public virtual Services Services
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "Services").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Services in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "Services");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "Services", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "Services").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierItemJobServices", "SupplierItems")]
        public virtual SupplierItems SupplierItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "SupplierItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "SupplierItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierItems> SupplierItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "SupplierItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "SupplierItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "SupplierItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PickupInstructions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesPickupInstructions", "PickupInstructions")]
        public virtual EntityCollection<PickupInstructions> PickupInstructions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<PickupInstructions>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "PickupInstructions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<PickupInstructions>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "PickupInstructions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesSupplierPoDtl", "SupplierPoDtls")]
        public virtual EntityCollection<SupplierPoDtls> SupplierPoDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "SupplierPoDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "SupplierPoDtls", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static JobStatus CreateJobStatus(int id, string status)
        {
            JobStatus jobStatus = new JobStatus();
            jobStatus.Id = id;
            jobStatus.Status = status;
            return jobStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobStatusJobMain", "JobMains")]
        public virtual EntityCollection<JobMains> JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_JobStatusJobMain", "JobMains", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobThrus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobThrus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobThrus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobThrus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static JobThrus CreateJobThrus(int id, string desc)
        {
            JobThrus jobThrus = new JobThrus();
            jobThrus.Id = id;
            jobThrus.Desc = desc;
            return jobThrus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobThruJobMain", "JobMains")]
        public virtual EntityCollection<JobMains> JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobMains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobMains>("DB_A0A0AE_ClientModel.FK_JobThruJobMain", "JobMains", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobTrails in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobTrails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobTrails : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobTrails object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="refTable">Initial value of RefTable.</param>
        /// <param name="refId">Initial value of RefId.</param>
        /// <param name="dtTrail">Initial value of DtTrail.</param>
        /// <param name="user">Initial value of User.</param>
        /// <param name="action">Initial value of Action.</param>
        public static JobTrails CreateJobTrails(int id, string refTable, string refId, global::System.DateTime dtTrail, string user, string action)
        {
            JobTrails jobTrails = new JobTrails();
            jobTrails.Id = id;
            jobTrails.RefTable = refTable;
            jobTrails.RefId = refId;
            jobTrails.DtTrail = dtTrail;
            jobTrails.User = user;
            jobTrails.Action = action;
            return jobTrails;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for RefTable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RefTable
        {
            get
            {
                string value = _RefTable;
                OnGetRefTable(ref value);
                return value;
            }
            set
            {
                if (_RefTable != value)
                {
                  OnRefTableChanging(ref value);
                  ReportPropertyChanging("RefTable");
                  _RefTable = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RefTable");
                  OnRefTableChanged();
              }
            }
        }
        private string _RefTable;
        partial void OnGetRefTable(ref string value);
        partial void OnRefTableChanging(ref string value);
        partial void OnRefTableChanged();
    
        /// <summary>
        /// There are no comments for RefId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RefId
        {
            get
            {
                string value = _RefId;
                OnGetRefId(ref value);
                return value;
            }
            set
            {
                if (_RefId != value)
                {
                  OnRefIdChanging(ref value);
                  ReportPropertyChanging("RefId");
                  _RefId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RefId");
                  OnRefIdChanged();
              }
            }
        }
        private string _RefId;
        partial void OnGetRefId(ref string value);
        partial void OnRefIdChanging(ref string value);
        partial void OnRefIdChanged();
    
        /// <summary>
        /// There are no comments for DtTrail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtTrail
        {
            get
            {
                global::System.DateTime value = _DtTrail;
                OnGetDtTrail(ref value);
                return value;
            }
            set
            {
                if (_DtTrail != value)
                {
                  OnDtTrailChanging(ref value);
                  ReportPropertyChanging("DtTrail");
                  _DtTrail = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtTrail");
                  OnDtTrailChanged();
              }
            }
        }
        private global::System.DateTime _DtTrail;
        partial void OnGetDtTrail(ref global::System.DateTime value);
        partial void OnDtTrailChanging(ref global::System.DateTime value);
        partial void OnDtTrailChanged();
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string User
        {
            get
            {
                string value = _User;
                OnGetUser(ref value);
                return value;
            }
            set
            {
                if (_User != value)
                {
                  OnUserChanging(ref value);
                  ReportPropertyChanging("User");
                  _User = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("User");
                  OnUserChanged();
              }
            }
        }
        private string _User;
        partial void OnGetUser(ref string value);
        partial void OnUserChanging(ref string value);
        partial void OnUserChanged();
    
        /// <summary>
        /// There are no comments for Action in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Action
        {
            get
            {
                string value = _Action;
                OnGetAction(ref value);
                return value;
            }
            set
            {
                if (_Action != value)
                {
                  OnActionChanging(ref value);
                  ReportPropertyChanging("Action");
                  _Action = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Action");
                  OnActionChanged();
              }
            }
        }
        private string _Action;
        partial void OnGetAction(ref string value);
        partial void OnActionChanging(ref string value);
        partial void OnActionChanged();
    
        /// <summary>
        /// There are no comments for IPAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IPAddress
        {
            get
            {
                string value = _IPAddress;
                OnGetIPAddress(ref value);
                return value;
            }
            set
            {
                if (_IPAddress != value)
                {
                  OnIPAddressChanging(ref value);
                  ReportPropertyChanging("IPAddress");
                  _IPAddress = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IPAddress");
                  OnIPAddressChanged();
              }
            }
        }
        private string _IPAddress;
        partial void OnGetIPAddress(ref string value);
        partial void OnIPAddressChanging(ref string value);
        partial void OnIPAddressChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        public static JobTypes CreateJobTypes(int id, int jobMainId)
        {
            JobTypes jobTypes = new JobTypes();
            jobTypes.Id = id;
            jobTypes.JobMainId = jobMainId;
            return jobTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for TTicket in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TTicket
        {
            get
            {
                int? value = _TTicket;
                OnGetTTicket(ref value);
                return value;
            }
            set
            {
                if (_TTicket != value)
                {
                  OnTTicketChanging(ref value);
                  ReportPropertyChanging("TTicket");
                  _TTicket = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TTicket");
                  OnTTicketChanged();
              }
            }
        }
        private int? _TTicket;
        partial void OnGetTTicket(ref int? value);
        partial void OnTTicketChanging(ref int? value);
        partial void OnTTicketChanged();
    
        /// <summary>
        /// There are no comments for TTransport in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TTransport
        {
            get
            {
                int? value = _TTransport;
                OnGetTTransport(ref value);
                return value;
            }
            set
            {
                if (_TTransport != value)
                {
                  OnTTransportChanging(ref value);
                  ReportPropertyChanging("TTransport");
                  _TTransport = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TTransport");
                  OnTTransportChanged();
              }
            }
        }
        private int? _TTransport;
        partial void OnGetTTransport(ref int? value);
        partial void OnTTransportChanging(ref int? value);
        partial void OnTTransportChanged();
    
        /// <summary>
        /// There are no comments for TTour in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TTour
        {
            get
            {
                int? value = _TTour;
                OnGetTTour(ref value);
                return value;
            }
            set
            {
                if (_TTour != value)
                {
                  OnTTourChanging(ref value);
                  ReportPropertyChanging("TTour");
                  _TTour = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TTour");
                  OnTTourChanged();
              }
            }
        }
        private int? _TTour;
        partial void OnGetTTour(ref int? value);
        partial void OnTTourChanging(ref int? value);
        partial void OnTTourChanged();
    
        /// <summary>
        /// There are no comments for THotel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? THotel
        {
            get
            {
                int? value = _THotel;
                OnGetTHotel(ref value);
                return value;
            }
            set
            {
                if (_THotel != value)
                {
                  OnTHotelChanging(ref value);
                  ReportPropertyChanging("THotel");
                  _THotel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("THotel");
                  OnTHotelChanged();
              }
            }
        }
        private int? _THotel;
        partial void OnGetTHotel(ref int? value);
        partial void OnTHotelChanging(ref int? value);
        partial void OnTHotelChanged();
    
        /// <summary>
        /// There are no comments for TOthers in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TOthers
        {
            get
            {
                int? value = _TOthers;
                OnGetTOthers(ref value);
                return value;
            }
            set
            {
                if (_TOthers != value)
                {
                  OnTOthersChanging(ref value);
                  ReportPropertyChanging("TOthers");
                  _TOthers = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TOthers");
                  OnTOthersChanged();
              }
            }
        }
        private int? _TOthers;
        partial void OnGetTOthers(ref int? value);
        partial void OnTOthersChanging(ref int? value);
        partial void OnTOthersChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobType", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobType", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.JobVehicles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="JobVehicles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobVehicles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JobVehicles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="vehicleId">Initial value of VehicleId.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        /// <param name="mileage">Initial value of Mileage.</param>
        public static JobVehicles CreateJobVehicles(int id, int vehicleId, int jobMainId, int mileage)
        {
            JobVehicles jobVehicles = new JobVehicles();
            jobVehicles.Id = id;
            jobVehicles.VehicleId = vehicleId;
            jobVehicles.JobMainId = jobMainId;
            jobVehicles.Mileage = mileage;
            return jobVehicles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for VehicleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleId
        {
            get
            {
                int value = _VehicleId;
                OnGetVehicleId(ref value);
                return value;
            }
            set
            {
                if (_VehicleId != value)
                {
                  OnVehicleIdChanging(ref value);
                  ReportPropertyChanging("VehicleId");
                  _VehicleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleId");
                  OnVehicleIdChanged();
              }
            }
        }
        private int _VehicleId;
        partial void OnGetVehicleId(ref int value);
        partial void OnVehicleIdChanging(ref int value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();
    
        /// <summary>
        /// There are no comments for Mileage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Mileage
        {
            get
            {
                int value = _Mileage;
                OnGetMileage(ref value);
                return value;
            }
            set
            {
                if (_Mileage != value)
                {
                  OnMileageChanging(ref value);
                  ReportPropertyChanging("Mileage");
                  _Mileage = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Mileage");
                  OnMileageChanged();
              }
            }
        }
        private int _Mileage;
        partial void OnGetMileage(ref int value);
        partial void OnMileageChanging(ref int value);
        partial void OnMileageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Vehicles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleJobVehicle", "Vehicles")]
        public virtual Vehicles Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "Vehicles").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "Vehicles").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Vehicles in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicles> VehiclesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "Vehicles");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "Vehicles", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "Vehicles").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainJobVehicle", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainJobVehicle", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.NotifRecipients in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="NotifRecipients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotifRecipients : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new NotifRecipients object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="mobile">Initial value of Mobile.</param>
        public static NotifRecipients CreateNotifRecipients(int id, string email, string mobile)
        {
            NotifRecipients notifRecipients = new NotifRecipients();
            notifRecipients.Id = id;
            notifRecipients.Email = email;
            notifRecipients.Mobile = mobile;
            return notifRecipients;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Mobile in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Mobile
        {
            get
            {
                string value = _Mobile;
                OnGetMobile(ref value);
                return value;
            }
            set
            {
                if (_Mobile != value)
                {
                  OnMobileChanging(ref value);
                  ReportPropertyChanging("Mobile");
                  _Mobile = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Mobile");
                  OnMobileChanged();
              }
            }
        }
        private string _Mobile;
        partial void OnGetMobile(ref string value);
        partial void OnMobileChanging(ref string value);
        partial void OnMobileChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustNotifRecipients in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_NotifRecipientCustNotifRecipient", "CustNotifRecipients")]
        public virtual EntityCollection<CustNotifRecipients> CustNotifRecipients
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustNotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "CustNotifRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustNotifRecipients>("DB_A0A0AE_ClientModel.FK_NotifRecipientCustNotifRecipient", "CustNotifRecipients", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.OnlineReservations in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="OnlineReservations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineReservations : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new OnlineReservations object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtPosted">Initial value of DtPosted.</param>
        /// <param name="productCode">Initial value of ProductCode.</param>
        /// <param name="dtStart">Initial value of DtStart.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="contactNum">Initial value of ContactNum.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="qty">Initial value of Qty.</param>
        /// <param name="pickupDtls">Initial value of PickupDtls.</param>
        public static OnlineReservations CreateOnlineReservations(int id, global::System.DateTime dtPosted, string productCode, global::System.DateTime dtStart, string name, string contactNum, string email, int qty, string pickupDtls)
        {
            OnlineReservations onlineReservations = new OnlineReservations();
            onlineReservations.Id = id;
            onlineReservations.DtPosted = dtPosted;
            onlineReservations.ProductCode = productCode;
            onlineReservations.DtStart = dtStart;
            onlineReservations.Name = name;
            onlineReservations.ContactNum = contactNum;
            onlineReservations.Email = email;
            onlineReservations.Qty = qty;
            onlineReservations.PickupDtls = pickupDtls;
            return onlineReservations;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtPosted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtPosted
        {
            get
            {
                global::System.DateTime value = _DtPosted;
                OnGetDtPosted(ref value);
                return value;
            }
            set
            {
                if (_DtPosted != value)
                {
                  OnDtPostedChanging(ref value);
                  ReportPropertyChanging("DtPosted");
                  _DtPosted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtPosted");
                  OnDtPostedChanged();
              }
            }
        }
        private global::System.DateTime _DtPosted;
        partial void OnGetDtPosted(ref global::System.DateTime value);
        partial void OnDtPostedChanging(ref global::System.DateTime value);
        partial void OnDtPostedChanged();
    
        /// <summary>
        /// There are no comments for ProductCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProductCode
        {
            get
            {
                string value = _ProductCode;
                OnGetProductCode(ref value);
                return value;
            }
            set
            {
                if (_ProductCode != value)
                {
                  OnProductCodeChanging(ref value);
                  ReportPropertyChanging("ProductCode");
                  _ProductCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProductCode");
                  OnProductCodeChanged();
              }
            }
        }
        private string _ProductCode;
        partial void OnGetProductCode(ref string value);
        partial void OnProductCodeChanging(ref string value);
        partial void OnProductCodeChanged();
    
        /// <summary>
        /// There are no comments for DtStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtStart
        {
            get
            {
                global::System.DateTime value = _DtStart;
                OnGetDtStart(ref value);
                return value;
            }
            set
            {
                if (_DtStart != value)
                {
                  OnDtStartChanging(ref value);
                  ReportPropertyChanging("DtStart");
                  _DtStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStart");
                  OnDtStartChanged();
              }
            }
        }
        private global::System.DateTime _DtStart;
        partial void OnGetDtStart(ref global::System.DateTime value);
        partial void OnDtStartChanging(ref global::System.DateTime value);
        partial void OnDtStartChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for ContactNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ContactNum
        {
            get
            {
                string value = _ContactNum;
                OnGetContactNum(ref value);
                return value;
            }
            set
            {
                if (_ContactNum != value)
                {
                  OnContactNumChanging(ref value);
                  ReportPropertyChanging("ContactNum");
                  _ContactNum = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ContactNum");
                  OnContactNumChanged();
              }
            }
        }
        private string _ContactNum;
        partial void OnGetContactNum(ref string value);
        partial void OnContactNumChanging(ref string value);
        partial void OnContactNumChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Qty
        {
            get
            {
                int value = _Qty;
                OnGetQty(ref value);
                return value;
            }
            set
            {
                if (_Qty != value)
                {
                  OnQtyChanging(ref value);
                  ReportPropertyChanging("Qty");
                  _Qty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Qty");
                  OnQtyChanged();
              }
            }
        }
        private int _Qty;
        partial void OnGetQty(ref int value);
        partial void OnQtyChanging(ref int value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// There are no comments for PickupDtls in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PickupDtls
        {
            get
            {
                string value = _PickupDtls;
                OnGetPickupDtls(ref value);
                return value;
            }
            set
            {
                if (_PickupDtls != value)
                {
                  OnPickupDtlsChanging(ref value);
                  ReportPropertyChanging("PickupDtls");
                  _PickupDtls = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PickupDtls");
                  OnPickupDtlsChanged();
              }
            }
        }
        private string _PickupDtls;
        partial void OnGetPickupDtls(ref string value);
        partial void OnPickupDtlsChanging(ref string value);
        partial void OnPickupDtlsChanged();
    
        /// <summary>
        /// There are no comments for PaymentAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? PaymentAmt
        {
            get
            {
                decimal? value = _PaymentAmt;
                OnGetPaymentAmt(ref value);
                return value;
            }
            set
            {
                if (_PaymentAmt != value)
                {
                  OnPaymentAmtChanging(ref value);
                  ReportPropertyChanging("PaymentAmt");
                  _PaymentAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PaymentAmt");
                  OnPaymentAmtChanged();
              }
            }
        }
        private decimal? _PaymentAmt;
        partial void OnGetPaymentAmt(ref decimal? value);
        partial void OnPaymentAmtChanging(ref decimal? value);
        partial void OnPaymentAmtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RsvPayments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_OnlineReservationRsvPayment", "RsvPayments")]
        public virtual EntityCollection<RsvPayments> RsvPayments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RsvPayments>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "RsvPayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RsvPayments>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "RsvPayments", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.PaypalAccounts in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="PaypalAccounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaypalAccounts : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PaypalAccounts object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        /// <param name="key">Initial value of Key.</param>
        /// <param name="secret">Initial value of Secret.</param>
        public static PaypalAccounts CreatePaypalAccounts(int id, string sysCode, string key, string secret)
        {
            PaypalAccounts paypalAccounts = new PaypalAccounts();
            paypalAccounts.Id = id;
            paypalAccounts.SysCode = sysCode;
            paypalAccounts.Key = key;
            paypalAccounts.Secret = secret;
            return paypalAccounts;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for Key in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Key
        {
            get
            {
                string value = _Key;
                OnGetKey(ref value);
                return value;
            }
            set
            {
                if (_Key != value)
                {
                  OnKeyChanging(ref value);
                  ReportPropertyChanging("Key");
                  _Key = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Key");
                  OnKeyChanged();
              }
            }
        }
        private string _Key;
        partial void OnGetKey(ref string value);
        partial void OnKeyChanging(ref string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// There are no comments for Secret in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Secret
        {
            get
            {
                string value = _Secret;
                OnGetSecret(ref value);
                return value;
            }
            set
            {
                if (_Secret != value)
                {
                  OnSecretChanging(ref value);
                  ReportPropertyChanging("Secret");
                  _Secret = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Secret");
                  OnSecretChanged();
              }
            }
        }
        private string _Secret;
        partial void OnGetSecret(ref string value);
        partial void OnSecretChanging(ref string value);
        partial void OnSecretChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.PaypalTransactions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="PaypalTransactions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaypalTransactions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PaypalTransactions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="trxId">Initial value of TrxId.</param>
        /// <param name="jobId">Initial value of JobId.</param>
        /// <param name="trxDate">Initial value of TrxDate.</param>
        /// <param name="datePosted">Initial value of DatePosted.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="amount">Initial value of Amount.</param>
        public static PaypalTransactions CreatePaypalTransactions(int id, string trxId, int jobId, global::System.DateTime trxDate, global::System.DateTime datePosted, string status, decimal amount)
        {
            PaypalTransactions paypalTransactions = new PaypalTransactions();
            paypalTransactions.Id = id;
            paypalTransactions.TrxId = trxId;
            paypalTransactions.JobId = jobId;
            paypalTransactions.TrxDate = trxDate;
            paypalTransactions.DatePosted = datePosted;
            paypalTransactions.Status = status;
            paypalTransactions.Amount = amount;
            return paypalTransactions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for TrxId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TrxId
        {
            get
            {
                string value = _TrxId;
                OnGetTrxId(ref value);
                return value;
            }
            set
            {
                if (_TrxId != value)
                {
                  OnTrxIdChanging(ref value);
                  ReportPropertyChanging("TrxId");
                  _TrxId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TrxId");
                  OnTrxIdChanged();
              }
            }
        }
        private string _TrxId;
        partial void OnGetTrxId(ref string value);
        partial void OnTrxIdChanging(ref string value);
        partial void OnTrxIdChanged();
    
        /// <summary>
        /// There are no comments for JobId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobId
        {
            get
            {
                int value = _JobId;
                OnGetJobId(ref value);
                return value;
            }
            set
            {
                if (_JobId != value)
                {
                  OnJobIdChanging(ref value);
                  ReportPropertyChanging("JobId");
                  _JobId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobId");
                  OnJobIdChanged();
              }
            }
        }
        private int _JobId;
        partial void OnGetJobId(ref int value);
        partial void OnJobIdChanging(ref int value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// There are no comments for TrxDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TrxDate
        {
            get
            {
                global::System.DateTime value = _TrxDate;
                OnGetTrxDate(ref value);
                return value;
            }
            set
            {
                if (_TrxDate != value)
                {
                  OnTrxDateChanging(ref value);
                  ReportPropertyChanging("TrxDate");
                  _TrxDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrxDate");
                  OnTrxDateChanged();
              }
            }
        }
        private global::System.DateTime _TrxDate;
        partial void OnGetTrxDate(ref global::System.DateTime value);
        partial void OnTrxDateChanging(ref global::System.DateTime value);
        partial void OnTrxDateChanged();
    
        /// <summary>
        /// There are no comments for DatePosted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DatePosted
        {
            get
            {
                global::System.DateTime value = _DatePosted;
                OnGetDatePosted(ref value);
                return value;
            }
            set
            {
                if (_DatePosted != value)
                {
                  OnDatePostedChanging(ref value);
                  ReportPropertyChanging("DatePosted");
                  _DatePosted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DatePosted");
                  OnDatePostedChanged();
              }
            }
        }
        private global::System.DateTime _DatePosted;
        partial void OnGetDatePosted(ref global::System.DateTime value);
        partial void OnDatePostedChanging(ref global::System.DateTime value);
        partial void OnDatePostedChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.PickupInstructions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="PickupInstructions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PickupInstructions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PickupInstructions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="driverInstructionsId">Initial value of DriverInstructionsId.</param>
        /// <param name="jobServicesId">Initial value of JobServicesId.</param>
        public static PickupInstructions CreatePickupInstructions(int id, int driverInstructionsId, int jobServicesId)
        {
            PickupInstructions pickupInstructions = new PickupInstructions();
            pickupInstructions.Id = id;
            pickupInstructions.DriverInstructionsId = driverInstructionsId;
            pickupInstructions.JobServicesId = jobServicesId;
            return pickupInstructions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DriverInstructionsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DriverInstructionsId
        {
            get
            {
                int value = _DriverInstructionsId;
                OnGetDriverInstructionsId(ref value);
                return value;
            }
            set
            {
                if (_DriverInstructionsId != value)
                {
                  OnDriverInstructionsIdChanging(ref value);
                  ReportPropertyChanging("DriverInstructionsId");
                  _DriverInstructionsId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DriverInstructionsId");
                  OnDriverInstructionsIdChanged();
              }
            }
        }
        private int _DriverInstructionsId;
        partial void OnGetDriverInstructionsId(ref int value);
        partial void OnDriverInstructionsIdChanging(ref int value);
        partial void OnDriverInstructionsIdChanged();
    
        /// <summary>
        /// There are no comments for JobServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobServicesId
        {
            get
            {
                int value = _JobServicesId;
                OnGetJobServicesId(ref value);
                return value;
            }
            set
            {
                if (_JobServicesId != value)
                {
                  OnJobServicesIdChanging(ref value);
                  ReportPropertyChanging("JobServicesId");
                  _JobServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobServicesId");
                  OnJobServicesIdChanged();
              }
            }
        }
        private int _JobServicesId;
        partial void OnGetJobServicesId(ref int value);
        partial void OnJobServicesIdChanging(ref int value);
        partial void OnJobServicesIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for DriverInstructions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_PickupInstructionsDriverInstructions", "DriverInstructions")]
        public virtual DriverInstructions DriverInstructions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DriverInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "DriverInstructions").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DriverInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "DriverInstructions").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DriverInstructions in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DriverInstructions> DriverInstructionsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DriverInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "DriverInstructions");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DriverInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "DriverInstructions", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DriverInstructions>("DB_A0A0AE_ClientModel.FK_PickupInstructionsDriverInstructions", "DriverInstructions").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesPickupInstructions", "JobServices")]
        public virtual JobServices JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "JobServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "JobServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobServices> JobServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "JobServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "JobServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesPickupInstructions", "JobServices").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.PkgDestinations in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="PkgDestinations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PkgDestinations : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PkgDestinations object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        /// <param name="jobId">Initial value of JobId.</param>
        public static PkgDestinations CreatePkgDestinations(int id, string description, string smProductId, string jobId)
        {
            PkgDestinations pkgDestinations = new PkgDestinations();
            pkgDestinations.Id = id;
            pkgDestinations.Description = description;
            pkgDestinations.SmProductId = smProductId;
            pkgDestinations.JobId = jobId;
            return pkgDestinations;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SmProductId
        {
            get
            {
                string value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private string _SmProductId;
        partial void OnGetSmProductId(ref string value);
        partial void OnSmProductIdChanging(ref string value);
        partial void OnSmProductIdChanged();
    
        /// <summary>
        /// There are no comments for JobId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string JobId
        {
            get
            {
                string value = _JobId;
                OnGetJobId(ref value);
                return value;
            }
            set
            {
                if (_JobId != value)
                {
                  OnJobIdChanging(ref value);
                  ReportPropertyChanging("JobId");
                  _JobId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("JobId");
                  OnJobIdChanged();
              }
            }
        }
        private string _JobId;
        partial void OnGetJobId(ref string value);
        partial void OnJobIdChanging(ref string value);
        partial void OnJobIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.PortalCustomers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="PortalCustomers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortalCustomers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PortalCustomers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="contactNum">Initial value of ContactNum.</param>
        /// <param name="password">Initial value of Password.</param>
        /// <param name="expiryDt">Initial value of ExpiryDt.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        public static PortalCustomers CreatePortalCustomers(int id, string contactNum, string password, global::System.DateTime expiryDt, int customerId)
        {
            PortalCustomers portalCustomers = new PortalCustomers();
            portalCustomers.Id = id;
            portalCustomers.ContactNum = contactNum;
            portalCustomers.Password = password;
            portalCustomers.ExpiryDt = expiryDt;
            portalCustomers.CustomerId = customerId;
            return portalCustomers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ContactNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ContactNum
        {
            get
            {
                string value = _ContactNum;
                OnGetContactNum(ref value);
                return value;
            }
            set
            {
                if (_ContactNum != value)
                {
                  OnContactNumChanging(ref value);
                  ReportPropertyChanging("ContactNum");
                  _ContactNum = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ContactNum");
                  OnContactNumChanged();
              }
            }
        }
        private string _ContactNum;
        partial void OnGetContactNum(ref string value);
        partial void OnContactNumChanging(ref string value);
        partial void OnContactNumChanged();
    
        /// <summary>
        /// There are no comments for Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Password
        {
            get
            {
                string value = _Password;
                OnGetPassword(ref value);
                return value;
            }
            set
            {
                if (_Password != value)
                {
                  OnPasswordChanging(ref value);
                  ReportPropertyChanging("Password");
                  _Password = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Password");
                  OnPasswordChanged();
              }
            }
        }
        private string _Password;
        partial void OnGetPassword(ref string value);
        partial void OnPasswordChanging(ref string value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// There are no comments for ExpiryDt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ExpiryDt
        {
            get
            {
                global::System.DateTime value = _ExpiryDt;
                OnGetExpiryDt(ref value);
                return value;
            }
            set
            {
                if (_ExpiryDt != value)
                {
                  OnExpiryDtChanging(ref value);
                  ReportPropertyChanging("ExpiryDt");
                  _ExpiryDt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpiryDt");
                  OnExpiryDtChanged();
              }
            }
        }
        private global::System.DateTime _ExpiryDt;
        partial void OnGetExpiryDt(ref global::System.DateTime value);
        partial void OnExpiryDtChanging(ref global::System.DateTime value);
        partial void OnExpiryDtChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerPortalCustomer", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerPortalCustomer", "Customers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.PreDefinedNotes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="PreDefinedNotes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreDefinedNotes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PreDefinedNotes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static PreDefinedNotes CreatePreDefinedNotes(int id)
        {
            PreDefinedNotes preDefinedNotes = new PreDefinedNotes();
            preDefinedNotes.Id = id;
            return preDefinedNotes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Note in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Note
        {
            get
            {
                string value = _Note;
                OnGetNote(ref value);
                return value;
            }
            set
            {
                if (_Note != value)
                {
                  OnNoteChanging(ref value);
                  ReportPropertyChanging("Note");
                  _Note = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Note");
                  OnNoteChanged();
              }
            }
        }
        private string _Note;
        partial void OnGetNote(ref string value);
        partial void OnNoteChanging(ref string value);
        partial void OnNoteChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.ProductCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="ProductCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static ProductCategories CreateProductCategories(int id, string name, string remarks)
        {
            ProductCategories productCategories = new ProductCategories();
            productCategories.Id = id;
            productCategories.Name = name;
            productCategories.Remarks = remarks;
            return productCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ProductProdCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductCategoryProductProdCat", "ProductProdCats")]
        public virtual EntityCollection<ProductProdCats> ProductProdCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductProdCats>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductProdCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductProdCats>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductProdCats", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.ProductConditions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="ProductConditions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductConditions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductConditions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="productId">Initial value of ProductId.</param>
        /// <param name="description">Initial value of Description.</param>
        public static ProductConditions CreateProductConditions(int id, int productId, string description)
        {
            ProductConditions productConditions = new ProductConditions();
            productConditions.Id = id;
            productConditions.ProductId = productId;
            productConditions.Description = description;
            return productConditions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProductId
        {
            get
            {
                int value = _ProductId;
                OnGetProductId(ref value);
                return value;
            }
            set
            {
                if (_ProductId != value)
                {
                  OnProductIdChanging(ref value);
                  ReportPropertyChanging("ProductId");
                  _ProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProductId");
                  OnProductIdChanged();
              }
            }
        }
        private int _ProductId;
        partial void OnGetProductId(ref int value);
        partial void OnProductIdChanging(ref int value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductCondition", "Products")]
        public virtual Products Products
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "Products").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Products> ProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "Products");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "Products", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "Products").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.ProductImages1 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="ProductImages1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductImages1 : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductImages1 object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="productId">Initial value of ProductId.</param>
        /// <param name="path">Initial value of Path.</param>
        public static ProductImages1 CreateProductImages1(int id, int productId, string path)
        {
            ProductImages1 productImages1 = new ProductImages1();
            productImages1.Id = id;
            productImages1.ProductId = productId;
            productImages1.Path = path;
            return productImages1;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProductId
        {
            get
            {
                int value = _ProductId;
                OnGetProductId(ref value);
                return value;
            }
            set
            {
                if (_ProductId != value)
                {
                  OnProductIdChanging(ref value);
                  ReportPropertyChanging("ProductId");
                  _ProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProductId");
                  OnProductIdChanged();
              }
            }
        }
        private int _ProductId;
        partial void OnGetProductId(ref int value);
        partial void OnProductIdChanging(ref int value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// There are no comments for Path in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Path
        {
            get
            {
                string value = _Path;
                OnGetPath(ref value);
                return value;
            }
            set
            {
                if (_Path != value)
                {
                  OnPathChanging(ref value);
                  ReportPropertyChanging("Path");
                  _Path = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Path");
                  OnPathChanged();
              }
            }
        }
        private string _Path;
        partial void OnGetPath(ref string value);
        partial void OnPathChanging(ref string value);
        partial void OnPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductImages", "Products")]
        public virtual Products Products
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "Products").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Products> ProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "Products");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "Products", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "Products").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.ProductPrices in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="ProductPrices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductPrices : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductPrices object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="productId">Initial value of ProductId.</param>
        /// <param name="uom">Initial value of Uom.</param>
        /// <param name="qty">Initial value of Qty.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="rate1">Initial value of Rate1.</param>
        public static ProductPrices CreateProductPrices(int id, int productId, string uom, int qty, decimal rate, decimal rate1)
        {
            ProductPrices productPrices = new ProductPrices();
            productPrices.Id = id;
            productPrices.ProductId = productId;
            productPrices.Uom = uom;
            productPrices.Qty = qty;
            productPrices.Rate = rate;
            productPrices.Rate1 = rate1;
            return productPrices;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProductId
        {
            get
            {
                int value = _ProductId;
                OnGetProductId(ref value);
                return value;
            }
            set
            {
                if (_ProductId != value)
                {
                  OnProductIdChanging(ref value);
                  ReportPropertyChanging("ProductId");
                  _ProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProductId");
                  OnProductIdChanged();
              }
            }
        }
        private int _ProductId;
        partial void OnGetProductId(ref int value);
        partial void OnProductIdChanging(ref int value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// There are no comments for Uom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Uom
        {
            get
            {
                string value = _Uom;
                OnGetUom(ref value);
                return value;
            }
            set
            {
                if (_Uom != value)
                {
                  OnUomChanging(ref value);
                  ReportPropertyChanging("Uom");
                  _Uom = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Uom");
                  OnUomChanged();
              }
            }
        }
        private string _Uom;
        partial void OnGetUom(ref string value);
        partial void OnUomChanging(ref string value);
        partial void OnUomChanged();
    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Qty
        {
            get
            {
                int value = _Qty;
                OnGetQty(ref value);
                return value;
            }
            set
            {
                if (_Qty != value)
                {
                  OnQtyChanging(ref value);
                  ReportPropertyChanging("Qty");
                  _Qty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Qty");
                  OnQtyChanged();
              }
            }
        }
        private int _Qty;
        partial void OnGetQty(ref int value);
        partial void OnQtyChanging(ref int value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// There are no comments for Rate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Rate
        {
            get
            {
                decimal value = _Rate;
                OnGetRate(ref value);
                return value;
            }
            set
            {
                if (_Rate != value)
                {
                  OnRateChanging(ref value);
                  ReportPropertyChanging("Rate");
                  _Rate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Rate");
                  OnRateChanged();
              }
            }
        }
        private decimal _Rate;
        partial void OnGetRate(ref decimal value);
        partial void OnRateChanging(ref decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// There are no comments for Rate1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Rate1
        {
            get
            {
                decimal value = _Rate1;
                OnGetRate1(ref value);
                return value;
            }
            set
            {
                if (_Rate1 != value)
                {
                  OnRate1Changing(ref value);
                  ReportPropertyChanging("Rate1");
                  _Rate1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Rate1");
                  OnRate1Changed();
              }
            }
        }
        private decimal _Rate1;
        partial void OnGetRate1(ref decimal value);
        partial void OnRate1Changing(ref decimal value);
        partial void OnRate1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductPrice", "Products")]
        public virtual Products Products
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "Products").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Products> ProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "Products");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "Products", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "Products").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.ProductProdCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="ProductProdCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductProdCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductProdCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="productCategoryId">Initial value of ProductCategoryId.</param>
        /// <param name="productId">Initial value of ProductId.</param>
        public static ProductProdCats CreateProductProdCats(int id, int productCategoryId, int productId)
        {
            ProductProdCats productProdCats = new ProductProdCats();
            productProdCats.Id = id;
            productProdCats.ProductCategoryId = productCategoryId;
            productProdCats.ProductId = productId;
            return productProdCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ProductCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProductCategoryId
        {
            get
            {
                int value = _ProductCategoryId;
                OnGetProductCategoryId(ref value);
                return value;
            }
            set
            {
                if (_ProductCategoryId != value)
                {
                  OnProductCategoryIdChanging(ref value);
                  ReportPropertyChanging("ProductCategoryId");
                  _ProductCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProductCategoryId");
                  OnProductCategoryIdChanged();
              }
            }
        }
        private int _ProductCategoryId;
        partial void OnGetProductCategoryId(ref int value);
        partial void OnProductCategoryIdChanging(ref int value);
        partial void OnProductCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProductId
        {
            get
            {
                int value = _ProductId;
                OnGetProductId(ref value);
                return value;
            }
            set
            {
                if (_ProductId != value)
                {
                  OnProductIdChanging(ref value);
                  ReportPropertyChanging("ProductId");
                  _ProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProductId");
                  OnProductIdChanged();
              }
            }
        }
        private int _ProductId;
        partial void OnGetProductId(ref int value);
        partial void OnProductIdChanging(ref int value);
        partial void OnProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ProductCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductCategoryProductProdCat", "ProductCategories")]
        public virtual ProductCategories ProductCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategories>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategories>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ProductCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategories> ProductCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategories>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ProductCategories>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategories>("DB_A0A0AE_ClientModel.FK_ProductCategoryProductProdCat", "ProductCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductProdCat", "Products")]
        public virtual Products Products
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "Products").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Products> ProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "Products");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "Products", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Products>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "Products").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Products in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Products")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Products : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Products object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="sort">Initial value of Sort.</param>
        /// <param name="status">Initial value of Status.</param>
        public static Products CreateProducts(int id, string code, string description, int sort, string status)
        {
            Products products = new Products();
            products.Id = id;
            products.Code = code;
            products.Description = description;
            products.Sort = sort;
            products.Status = status;
            return products;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for TemplateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TemplateId
        {
            get
            {
                int? value = _TemplateId;
                OnGetTemplateId(ref value);
                return value;
            }
            set
            {
                if (_TemplateId != value)
                {
                  OnTemplateIdChanging(ref value);
                  ReportPropertyChanging("TemplateId");
                  _TemplateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TemplateId");
                  OnTemplateIdChanged();
              }
            }
        }
        private int? _TemplateId;
        partial void OnGetTemplateId(ref int? value);
        partial void OnTemplateIdChanging(ref int? value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Sort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Sort
        {
            get
            {
                int value = _Sort;
                OnGetSort(ref value);
                return value;
            }
            set
            {
                if (_Sort != value)
                {
                  OnSortChanging(ref value);
                  ReportPropertyChanging("Sort");
                  _Sort = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Sort");
                  OnSortChanged();
              }
            }
        }
        private int _Sort;
        partial void OnGetSort(ref int value);
        partial void OnSortChanging(ref int value);
        partial void OnSortChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ProductConditions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductCondition", "ProductConditions")]
        public virtual EntityCollection<ProductConditions> ProductConditions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductConditions>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "ProductConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductConditions>("DB_A0A0AE_ClientModel.FK_ProductProductCondition", "ProductConditions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProductImages1 in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductImages", "ProductImages1")]
        public virtual EntityCollection<ProductImages1> ProductImages1
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductImages1>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "ProductImages1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductImages1>("DB_A0A0AE_ClientModel.FK_ProductProductImages", "ProductImages1", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProductPrices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductPrice", "ProductPrices")]
        public virtual EntityCollection<ProductPrices> ProductPrices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductPrices>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "ProductPrices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductPrices>("DB_A0A0AE_ClientModel.FK_ProductProductPrice", "ProductPrices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProductProdCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ProductProductProdCat", "ProductProdCats")]
        public virtual EntityCollection<ProductProdCats> ProductProdCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductProdCats>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "ProductProdCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductProdCats>("DB_A0A0AE_ClientModel.FK_ProductProductProdCat", "ProductProdCats", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RateGroups in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RateGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RateGroups : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RateGroups object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="groupName">Initial value of GroupName.</param>
        public static RateGroups CreateRateGroups(int id, string groupName)
        {
            RateGroups rateGroups = new RateGroups();
            rateGroups.Id = id;
            rateGroups.GroupName = groupName;
            return rateGroups;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for GroupName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string GroupName
        {
            get
            {
                string value = _GroupName;
                OnGetGroupName(ref value);
                return value;
            }
            set
            {
                if (_GroupName != value)
                {
                  OnGroupNameChanging(ref value);
                  ReportPropertyChanging("GroupName");
                  _GroupName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("GroupName");
                  OnGroupNameChanged();
              }
            }
        }
        private string _GroupName;
        partial void OnGetGroupName(ref string value);
        partial void OnGroupNameChanging(ref string value);
        partial void OnGroupNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CarRateGroups in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RateGroupCarRateGroup", "CarRateGroups")]
        public virtual EntityCollection<CarRateGroups> CarRateGroups
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CarRateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "CarRateGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CarRateGroups>("DB_A0A0AE_ClientModel.FK_RateGroupCarRateGroup", "CarRateGroups", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Reports in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Reports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reports : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Reports object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static Reports CreateReports(int id)
        {
            Reports reports = new Reports();
            reports.Id = id;
            return reports;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for DisplayName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DisplayName
        {
            get
            {
                string value = _DisplayName;
                OnGetDisplayName(ref value);
                return value;
            }
            set
            {
                if (_DisplayName != value)
                {
                  OnDisplayNameChanging(ref value);
                  ReportPropertyChanging("DisplayName");
                  _DisplayName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DisplayName");
                  OnDisplayNameChanged();
              }
            }
        }
        private string _DisplayName;
        partial void OnGetDisplayName(ref string value);
        partial void OnDisplayNameChanging(ref string value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// There are no comments for LayoutData in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual byte[] LayoutData
        {
            get
            {
                byte[] value = _LayoutData;
                OnGetLayoutData(ref value);
                return value;
            }
            set
            {
                if (_LayoutData != value)
                {
                  OnLayoutDataChanging(ref value);
                  ReportPropertyChanging("LayoutData");
                  _LayoutData = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LayoutData");
                  OnLayoutDataChanged();
              }
            }
        }
        private byte[] _LayoutData;
        partial void OnGetLayoutData(ref byte[] value);
        partial void OnLayoutDataChanging(ref byte[] value);
        partial void OnLayoutDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RptReportCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportCat", "RptReportCats")]
        public virtual EntityCollection<RptReportCats> RptReportCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RptReportCats>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "RptReportCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RptReportCats>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "RptReportCats", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for RptReportRoles1 in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportRoles", "RptReportRoles1")]
        public virtual EntityCollection<RptReportRoles1> RptReportRoles1
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RptReportRoles1>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "RptReportRoles1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RptReportRoles1>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "RptReportRoles1", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for RptReportUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportUser", "RptReportUsers")]
        public virtual EntityCollection<RptReportUsers> RptReportUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RptReportUsers>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "RptReportUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RptReportUsers>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "RptReportUsers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RptAccessTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RptAccessTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RptAccessTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RptAccessTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        public static RptAccessTypes CreateRptAccessTypes(int id, string code)
        {
            RptAccessTypes rptAccessTypes = new RptAccessTypes();
            rptAccessTypes.Id = id;
            rptAccessTypes.Code = code;
            return rptAccessTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RptReportRoles1 in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RptAccessTypeRptReportRoles", "RptReportRoles1")]
        public virtual EntityCollection<RptReportRoles1> RptReportRoles1
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RptReportRoles1>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptReportRoles1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RptReportRoles1>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptReportRoles1", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for RptReportUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RptAccessTypeRptReportUser", "RptReportUsers")]
        public virtual EntityCollection<RptReportUsers> RptReportUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RptReportUsers>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptReportUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RptReportUsers>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptReportUsers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RptCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RptCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RptCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RptCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        public static RptCategories CreateRptCategories(int id, string description)
        {
            RptCategories rptCategories = new RptCategories();
            rptCategories.Id = id;
            rptCategories.Description = description;
            return rptCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RptReportCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RptCategoryRptReportCat", "RptReportCats")]
        public virtual EntityCollection<RptReportCats> RptReportCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RptReportCats>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptReportCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RptReportCats>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptReportCats", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RptReportCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RptReportCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RptReportCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RptReportCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="rptCategoryId">Initial value of RptCategoryId.</param>
        /// <param name="reportId">Initial value of ReportId.</param>
        public static RptReportCats CreateRptReportCats(int id, int rptCategoryId, int reportId)
        {
            RptReportCats rptReportCats = new RptReportCats();
            rptReportCats.Id = id;
            rptReportCats.RptCategoryId = rptCategoryId;
            rptReportCats.ReportId = reportId;
            return rptReportCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for RptCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RptCategoryId
        {
            get
            {
                int value = _RptCategoryId;
                OnGetRptCategoryId(ref value);
                return value;
            }
            set
            {
                if (_RptCategoryId != value)
                {
                  OnRptCategoryIdChanging(ref value);
                  ReportPropertyChanging("RptCategoryId");
                  _RptCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RptCategoryId");
                  OnRptCategoryIdChanged();
              }
            }
        }
        private int _RptCategoryId;
        partial void OnGetRptCategoryId(ref int value);
        partial void OnRptCategoryIdChanging(ref int value);
        partial void OnRptCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for ReportId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ReportId
        {
            get
            {
                int value = _ReportId;
                OnGetReportId(ref value);
                return value;
            }
            set
            {
                if (_ReportId != value)
                {
                  OnReportIdChanging(ref value);
                  ReportPropertyChanging("ReportId");
                  _ReportId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReportId");
                  OnReportIdChanged();
              }
            }
        }
        private int _ReportId;
        partial void OnGetReportId(ref int value);
        partial void OnReportIdChanging(ref int value);
        partial void OnReportIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RptCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RptCategoryRptReportCat", "RptCategories")]
        public virtual RptCategories RptCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptCategories>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptCategories>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RptCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RptCategories> RptCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptCategories>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<RptCategories>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptCategories>("DB_A0A0AE_ClientModel.FK_RptCategoryRptReportCat", "RptCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Reports in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportCat", "Reports")]
        public virtual Reports Reports
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "Reports").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Reports in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reports> ReportsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "Reports");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "Reports", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportCat", "Reports").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RptReportRoles1 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RptReportRoles1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RptReportRoles1 : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RptReportRoles1 object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="aspNetRoleId">Initial value of AspNetRoleId.</param>
        /// <param name="rptAccessTypeId">Initial value of RptAccessTypeId.</param>
        /// <param name="reportId">Initial value of ReportId.</param>
        public static RptReportRoles1 CreateRptReportRoles1(int id, int aspNetRoleId, int rptAccessTypeId, int reportId)
        {
            RptReportRoles1 rptReportRoles1 = new RptReportRoles1();
            rptReportRoles1.Id = id;
            rptReportRoles1.AspNetRoleId = aspNetRoleId;
            rptReportRoles1.RptAccessTypeId = rptAccessTypeId;
            rptReportRoles1.ReportId = reportId;
            return rptReportRoles1;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for AspNetRoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AspNetRoleId
        {
            get
            {
                int value = _AspNetRoleId;
                OnGetAspNetRoleId(ref value);
                return value;
            }
            set
            {
                if (_AspNetRoleId != value)
                {
                  OnAspNetRoleIdChanging(ref value);
                  ReportPropertyChanging("AspNetRoleId");
                  _AspNetRoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AspNetRoleId");
                  OnAspNetRoleIdChanged();
              }
            }
        }
        private int _AspNetRoleId;
        partial void OnGetAspNetRoleId(ref int value);
        partial void OnAspNetRoleIdChanging(ref int value);
        partial void OnAspNetRoleIdChanged();
    
        /// <summary>
        /// There are no comments for RptAccessTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RptAccessTypeId
        {
            get
            {
                int value = _RptAccessTypeId;
                OnGetRptAccessTypeId(ref value);
                return value;
            }
            set
            {
                if (_RptAccessTypeId != value)
                {
                  OnRptAccessTypeIdChanging(ref value);
                  ReportPropertyChanging("RptAccessTypeId");
                  _RptAccessTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RptAccessTypeId");
                  OnRptAccessTypeIdChanged();
              }
            }
        }
        private int _RptAccessTypeId;
        partial void OnGetRptAccessTypeId(ref int value);
        partial void OnRptAccessTypeIdChanging(ref int value);
        partial void OnRptAccessTypeIdChanged();
    
        /// <summary>
        /// There are no comments for ReportId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ReportId
        {
            get
            {
                int value = _ReportId;
                OnGetReportId(ref value);
                return value;
            }
            set
            {
                if (_ReportId != value)
                {
                  OnReportIdChanging(ref value);
                  ReportPropertyChanging("ReportId");
                  _ReportId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReportId");
                  OnReportIdChanged();
              }
            }
        }
        private int _ReportId;
        partial void OnGetReportId(ref int value);
        partial void OnReportIdChanging(ref int value);
        partial void OnReportIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RptAccessTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RptAccessTypeRptReportRoles", "RptAccessTypes")]
        public virtual RptAccessTypes RptAccessTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptAccessTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptAccessTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RptAccessTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RptAccessTypes> RptAccessTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptAccessTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptAccessTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportRoles", "RptAccessTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Reports in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportRoles", "Reports")]
        public virtual Reports Reports
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "Reports").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Reports in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reports> ReportsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "Reports");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "Reports", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportRoles", "Reports").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RptReportUsers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RptReportUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RptReportUsers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RptReportUsers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="aspNetUserId">Initial value of AspNetUserId.</param>
        /// <param name="rptAccessTypeId">Initial value of RptAccessTypeId.</param>
        /// <param name="reportId">Initial value of ReportId.</param>
        public static RptReportUsers CreateRptReportUsers(int id, string aspNetUserId, int rptAccessTypeId, int reportId)
        {
            RptReportUsers rptReportUsers = new RptReportUsers();
            rptReportUsers.Id = id;
            rptReportUsers.AspNetUserId = aspNetUserId;
            rptReportUsers.RptAccessTypeId = rptAccessTypeId;
            rptReportUsers.ReportId = reportId;
            return rptReportUsers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for AspNetUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AspNetUserId
        {
            get
            {
                string value = _AspNetUserId;
                OnGetAspNetUserId(ref value);
                return value;
            }
            set
            {
                if (_AspNetUserId != value)
                {
                  OnAspNetUserIdChanging(ref value);
                  ReportPropertyChanging("AspNetUserId");
                  _AspNetUserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AspNetUserId");
                  OnAspNetUserIdChanged();
              }
            }
        }
        private string _AspNetUserId;
        partial void OnGetAspNetUserId(ref string value);
        partial void OnAspNetUserIdChanging(ref string value);
        partial void OnAspNetUserIdChanged();
    
        /// <summary>
        /// There are no comments for RptAccessTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RptAccessTypeId
        {
            get
            {
                int value = _RptAccessTypeId;
                OnGetRptAccessTypeId(ref value);
                return value;
            }
            set
            {
                if (_RptAccessTypeId != value)
                {
                  OnRptAccessTypeIdChanging(ref value);
                  ReportPropertyChanging("RptAccessTypeId");
                  _RptAccessTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RptAccessTypeId");
                  OnRptAccessTypeIdChanged();
              }
            }
        }
        private int _RptAccessTypeId;
        partial void OnGetRptAccessTypeId(ref int value);
        partial void OnRptAccessTypeIdChanging(ref int value);
        partial void OnRptAccessTypeIdChanged();
    
        /// <summary>
        /// There are no comments for ReportId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ReportId
        {
            get
            {
                int value = _ReportId;
                OnGetReportId(ref value);
                return value;
            }
            set
            {
                if (_ReportId != value)
                {
                  OnReportIdChanging(ref value);
                  ReportPropertyChanging("ReportId");
                  _ReportId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReportId");
                  OnReportIdChanged();
              }
            }
        }
        private int _ReportId;
        partial void OnGetReportId(ref int value);
        partial void OnReportIdChanging(ref int value);
        partial void OnReportIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RptAccessTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_RptAccessTypeRptReportUser", "RptAccessTypes")]
        public virtual RptAccessTypes RptAccessTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptAccessTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptAccessTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RptAccessTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RptAccessTypes> RptAccessTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptAccessTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptAccessTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RptAccessTypes>("DB_A0A0AE_ClientModel.FK_RptAccessTypeRptReportUser", "RptAccessTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Reports in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ReportRptReportUser", "Reports")]
        public virtual Reports Reports
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "Reports").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Reports in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reports> ReportsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "Reports");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "Reports", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Reports>("DB_A0A0AE_ClientModel.FK_ReportRptReportUser", "Reports").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RptUserLevels in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RptUserLevels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RptUserLevels : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RptUserLevels object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="aspNetUserId">Initial value of AspNetUserId.</param>
        /// <param name="rptRole">Initial value of RptRole.</param>
        public static RptUserLevels CreateRptUserLevels(int id, string aspNetUserId, string rptRole)
        {
            RptUserLevels rptUserLevels = new RptUserLevels();
            rptUserLevels.Id = id;
            rptUserLevels.AspNetUserId = aspNetUserId;
            rptUserLevels.RptRole = rptRole;
            return rptUserLevels;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for AspNetUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AspNetUserId
        {
            get
            {
                string value = _AspNetUserId;
                OnGetAspNetUserId(ref value);
                return value;
            }
            set
            {
                if (_AspNetUserId != value)
                {
                  OnAspNetUserIdChanging(ref value);
                  ReportPropertyChanging("AspNetUserId");
                  _AspNetUserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AspNetUserId");
                  OnAspNetUserIdChanged();
              }
            }
        }
        private string _AspNetUserId;
        partial void OnGetAspNetUserId(ref string value);
        partial void OnAspNetUserIdChanging(ref string value);
        partial void OnAspNetUserIdChanged();
    
        /// <summary>
        /// There are no comments for RptRole in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RptRole
        {
            get
            {
                string value = _RptRole;
                OnGetRptRole(ref value);
                return value;
            }
            set
            {
                if (_RptRole != value)
                {
                  OnRptRoleChanging(ref value);
                  ReportPropertyChanging("RptRole");
                  _RptRole = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RptRole");
                  OnRptRoleChanged();
              }
            }
        }
        private string _RptRole;
        partial void OnGetRptRole(ref string value);
        partial void OnRptRoleChanging(ref string value);
        partial void OnRptRoleChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.RsvPayments in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="RsvPayments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RsvPayments : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RsvPayments object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtPayment">Initial value of DtPayment.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="paypaPaymentId">Initial value of PaypaPaymentId.</param>
        /// <param name="onlineReservationId">Initial value of OnlineReservationId.</param>
        public static RsvPayments CreateRsvPayments(int id, global::System.DateTime dtPayment, string status, decimal amount, string paypaPaymentId, int onlineReservationId)
        {
            RsvPayments rsvPayments = new RsvPayments();
            rsvPayments.Id = id;
            rsvPayments.DtPayment = dtPayment;
            rsvPayments.Status = status;
            rsvPayments.Amount = amount;
            rsvPayments.PaypaPaymentId = paypaPaymentId;
            rsvPayments.OnlineReservationId = onlineReservationId;
            return rsvPayments;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtPayment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtPayment
        {
            get
            {
                global::System.DateTime value = _DtPayment;
                OnGetDtPayment(ref value);
                return value;
            }
            set
            {
                if (_DtPayment != value)
                {
                  OnDtPaymentChanging(ref value);
                  ReportPropertyChanging("DtPayment");
                  _DtPayment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtPayment");
                  OnDtPaymentChanged();
              }
            }
        }
        private global::System.DateTime _DtPayment;
        partial void OnGetDtPayment(ref global::System.DateTime value);
        partial void OnDtPaymentChanging(ref global::System.DateTime value);
        partial void OnDtPaymentChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for PaypaPaymentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PaypaPaymentId
        {
            get
            {
                string value = _PaypaPaymentId;
                OnGetPaypaPaymentId(ref value);
                return value;
            }
            set
            {
                if (_PaypaPaymentId != value)
                {
                  OnPaypaPaymentIdChanging(ref value);
                  ReportPropertyChanging("PaypaPaymentId");
                  _PaypaPaymentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PaypaPaymentId");
                  OnPaypaPaymentIdChanged();
              }
            }
        }
        private string _PaypaPaymentId;
        partial void OnGetPaypaPaymentId(ref string value);
        partial void OnPaypaPaymentIdChanging(ref string value);
        partial void OnPaypaPaymentIdChanged();
    
        /// <summary>
        /// There are no comments for OnlineReservationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OnlineReservationId
        {
            get
            {
                int value = _OnlineReservationId;
                OnGetOnlineReservationId(ref value);
                return value;
            }
            set
            {
                if (_OnlineReservationId != value)
                {
                  OnOnlineReservationIdChanging(ref value);
                  ReportPropertyChanging("OnlineReservationId");
                  _OnlineReservationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OnlineReservationId");
                  OnOnlineReservationIdChanged();
              }
            }
        }
        private int _OnlineReservationId;
        partial void OnGetOnlineReservationId(ref int value);
        partial void OnOnlineReservationIdChanging(ref int value);
        partial void OnOnlineReservationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for OnlineReservations in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_OnlineReservationRsvPayment", "OnlineReservations")]
        public virtual OnlineReservations OnlineReservations
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<OnlineReservations>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "OnlineReservations").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<OnlineReservations>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "OnlineReservations").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for OnlineReservations in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnlineReservations> OnlineReservationsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<OnlineReservations>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "OnlineReservations");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<OnlineReservations>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "OnlineReservations", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<OnlineReservations>("DB_A0A0AE_ClientModel.FK_OnlineReservationRsvPayment", "OnlineReservations").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesActCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesActCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesActCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesActCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="desc">Initial value of Desc.</param>
        public static SalesActCodes CreateSalesActCodes(int id, string name, string desc)
        {
            SalesActCodes salesActCodes = new SalesActCodes();
            salesActCodes.Id = id;
            salesActCodes.Name = name;
            salesActCodes.Desc = desc;
            return salesActCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for DefaultActStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DefaultActStatus
        {
            get
            {
                int? value = _DefaultActStatus;
                OnGetDefaultActStatus(ref value);
                return value;
            }
            set
            {
                if (_DefaultActStatus != value)
                {
                  OnDefaultActStatusChanging(ref value);
                  ReportPropertyChanging("DefaultActStatus");
                  _DefaultActStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DefaultActStatus");
                  OnDefaultActStatusChanged();
              }
            }
        }
        private int? _DefaultActStatus;
        partial void OnGetDefaultActStatus(ref int? value);
        partial void OnDefaultActStatusChanging(ref int? value);
        partial void OnDefaultActStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesActCodeSalesActivity", "SalesActivities")]
        public virtual EntityCollection<SalesActivities> SalesActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesActivities>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesActivities>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesActivities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesActivities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesActivities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="salesActCodeId">Initial value of SalesActCodeId.</param>
        /// <param name="particulars">Initial value of Particulars.</param>
        /// <param name="dtActivity">Initial value of DtActivity.</param>
        /// <param name="salesActStatusId">Initial value of SalesActStatusId.</param>
        /// <param name="dtEntered">Initial value of DtEntered.</param>
        /// <param name="enteredBy">Initial value of EnteredBy.</param>
        public static SalesActivities CreateSalesActivities(int id, int salesLeadId, int salesActCodeId, string particulars, global::System.DateTime dtActivity, int salesActStatusId, global::System.DateTime dtEntered, string enteredBy)
        {
            SalesActivities salesActivities = new SalesActivities();
            salesActivities.Id = id;
            salesActivities.SalesLeadId = salesLeadId;
            salesActivities.SalesActCodeId = salesActCodeId;
            salesActivities.Particulars = particulars;
            salesActivities.DtActivity = dtActivity;
            salesActivities.SalesActStatusId = salesActStatusId;
            salesActivities.DtEntered = dtEntered;
            salesActivities.EnteredBy = enteredBy;
            return salesActivities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for SalesActCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesActCodeId
        {
            get
            {
                int value = _SalesActCodeId;
                OnGetSalesActCodeId(ref value);
                return value;
            }
            set
            {
                if (_SalesActCodeId != value)
                {
                  OnSalesActCodeIdChanging(ref value);
                  ReportPropertyChanging("SalesActCodeId");
                  _SalesActCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesActCodeId");
                  OnSalesActCodeIdChanged();
              }
            }
        }
        private int _SalesActCodeId;
        partial void OnGetSalesActCodeId(ref int value);
        partial void OnSalesActCodeIdChanging(ref int value);
        partial void OnSalesActCodeIdChanged();
    
        /// <summary>
        /// There are no comments for Particulars in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Particulars
        {
            get
            {
                string value = _Particulars;
                OnGetParticulars(ref value);
                return value;
            }
            set
            {
                if (_Particulars != value)
                {
                  OnParticularsChanging(ref value);
                  ReportPropertyChanging("Particulars");
                  _Particulars = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Particulars");
                  OnParticularsChanged();
              }
            }
        }
        private string _Particulars;
        partial void OnGetParticulars(ref string value);
        partial void OnParticularsChanging(ref string value);
        partial void OnParticularsChanged();
    
        /// <summary>
        /// There are no comments for DtActivity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtActivity
        {
            get
            {
                global::System.DateTime value = _DtActivity;
                OnGetDtActivity(ref value);
                return value;
            }
            set
            {
                if (_DtActivity != value)
                {
                  OnDtActivityChanging(ref value);
                  ReportPropertyChanging("DtActivity");
                  _DtActivity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtActivity");
                  OnDtActivityChanged();
              }
            }
        }
        private global::System.DateTime _DtActivity;
        partial void OnGetDtActivity(ref global::System.DateTime value);
        partial void OnDtActivityChanging(ref global::System.DateTime value);
        partial void OnDtActivityChanged();
    
        /// <summary>
        /// There are no comments for SalesActStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesActStatusId
        {
            get
            {
                int value = _SalesActStatusId;
                OnGetSalesActStatusId(ref value);
                return value;
            }
            set
            {
                if (_SalesActStatusId != value)
                {
                  OnSalesActStatusIdChanging(ref value);
                  ReportPropertyChanging("SalesActStatusId");
                  _SalesActStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesActStatusId");
                  OnSalesActStatusIdChanged();
              }
            }
        }
        private int _SalesActStatusId;
        partial void OnGetSalesActStatusId(ref int value);
        partial void OnSalesActStatusIdChanging(ref int value);
        partial void OnSalesActStatusIdChanged();
    
        /// <summary>
        /// There are no comments for DtEntered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtEntered
        {
            get
            {
                global::System.DateTime value = _DtEntered;
                OnGetDtEntered(ref value);
                return value;
            }
            set
            {
                if (_DtEntered != value)
                {
                  OnDtEnteredChanging(ref value);
                  ReportPropertyChanging("DtEntered");
                  _DtEntered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEntered");
                  OnDtEnteredChanged();
              }
            }
        }
        private global::System.DateTime _DtEntered;
        partial void OnGetDtEntered(ref global::System.DateTime value);
        partial void OnDtEnteredChanging(ref global::System.DateTime value);
        partial void OnDtEnteredChanged();
    
        /// <summary>
        /// There are no comments for EnteredBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EnteredBy
        {
            get
            {
                string value = _EnteredBy;
                OnGetEnteredBy(ref value);
                return value;
            }
            set
            {
                if (_EnteredBy != value)
                {
                  OnEnteredByChanging(ref value);
                  ReportPropertyChanging("EnteredBy");
                  _EnteredBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EnteredBy");
                  OnEnteredByChanged();
              }
            }
        }
        private string _EnteredBy;
        partial void OnGetEnteredBy(ref string value);
        partial void OnEnteredByChanging(ref string value);
        partial void OnEnteredByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesActCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesActCodeSalesActivity", "SalesActCodes")]
        public virtual SalesActCodes SalesActCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActCodes>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActCodes>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesActCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesActCodes> SalesActCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActCodes>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesActCodes>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActCodes>("DB_A0A0AE_ClientModel.FK_SalesActCodeSalesActivity", "SalesActCodes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesActivity", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesActStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesActStatusSalesActivity", "SalesActStatus")]
        public virtual SalesActStatus SalesActStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActStatus>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActStatus>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesActStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesActStatus> SalesActStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActStatus>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesActStatus>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesActStatus>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesActStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesActStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesActStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesActStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SalesActStatus CreateSalesActStatus(int id, string name)
        {
            SalesActStatus salesActStatus = new SalesActStatus();
            salesActStatus.Id = id;
            salesActStatus.Name = name;
            return salesActStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesActStatusSalesActivity", "SalesActivities")]
        public virtual EntityCollection<SalesActivities> SalesActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesActivities>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesActivities>("DB_A0A0AE_ClientModel.FK_SalesActStatusSalesActivity", "SalesActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadCatCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadCatCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadCatCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadCatCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="catName">Initial value of CatName.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        public static SalesLeadCatCodes CreateSalesLeadCatCodes(int id, string catName, string sysCode)
        {
            SalesLeadCatCodes salesLeadCatCodes = new SalesLeadCatCodes();
            salesLeadCatCodes.Id = id;
            salesLeadCatCodes.CatName = catName;
            salesLeadCatCodes.SysCode = sysCode;
            return salesLeadCatCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CatName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CatName
        {
            get
            {
                string value = _CatName;
                OnGetCatName(ref value);
                return value;
            }
            set
            {
                if (_CatName != value)
                {
                  OnCatNameChanging(ref value);
                  ReportPropertyChanging("CatName");
                  _CatName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CatName");
                  OnCatNameChanged();
              }
            }
        }
        private string _CatName;
        partial void OnGetCatName(ref string value);
        partial void OnCatNameChanging(ref string value);
        partial void OnCatNameChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustSalesCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCatCodeCustSalesCategory", "CustSalesCategories")]
        public virtual EntityCollection<CustSalesCategories> CustSalesCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustSalesCategories>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "CustSalesCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustSalesCategories>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeCustSalesCategory", "CustSalesCategories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCategories")]
        public virtual EntityCollection<SalesLeadCategories> SalesLeadCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadCategories>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadCategories>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCategories", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadCatCodeId">Initial value of SalesLeadCatCodeId.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        public static SalesLeadCategories CreateSalesLeadCategories(int id, int salesLeadCatCodeId, int salesLeadId)
        {
            SalesLeadCategories salesLeadCategories = new SalesLeadCategories();
            salesLeadCategories.Id = id;
            salesLeadCategories.SalesLeadCatCodeId = salesLeadCatCodeId;
            salesLeadCategories.SalesLeadId = salesLeadId;
            return salesLeadCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadCatCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadCatCodeId
        {
            get
            {
                int value = _SalesLeadCatCodeId;
                OnGetSalesLeadCatCodeId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadCatCodeId != value)
                {
                  OnSalesLeadCatCodeIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadCatCodeId");
                  _SalesLeadCatCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadCatCodeId");
                  OnSalesLeadCatCodeIdChanged();
              }
            }
        }
        private int _SalesLeadCatCodeId;
        partial void OnGetSalesLeadCatCodeId(ref int value);
        partial void OnSalesLeadCatCodeIdChanging(ref int value);
        partial void OnSalesLeadCatCodeIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeadCatCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes")]
        public virtual SalesLeadCatCodes SalesLeadCatCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadCatCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeadCatCodes> SalesLeadCatCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadCatCodes>("DB_A0A0AE_ClientModel.FK_SalesLeadCatCodeSalesLeadCategory", "SalesLeadCatCodes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadCategory", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeads").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadCompanies in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadCompanies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadCompanies : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadCompanies object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        public static SalesLeadCompanies CreateSalesLeadCompanies(int id, int salesLeadId, int custEntMainId)
        {
            SalesLeadCompanies salesLeadCompanies = new SalesLeadCompanies();
            salesLeadCompanies.Id = id;
            salesLeadCompanies.SalesLeadId = salesLeadId;
            salesLeadCompanies.CustEntMainId = custEntMainId;
            return salesLeadCompanies;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadCompany", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainSalesLeadCompany", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainSalesLeadCompany", "CustEntMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadFiles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadFiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadFiles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadFiles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="link">Initial value of Link.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        public static SalesLeadFiles CreateSalesLeadFiles(int id, string link, int salesLeadId)
        {
            SalesLeadFiles salesLeadFiles = new SalesLeadFiles();
            salesLeadFiles.Id = id;
            salesLeadFiles.Link = link;
            salesLeadFiles.SalesLeadId = salesLeadId;
            return salesLeadFiles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Link in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Link
        {
            get
            {
                string value = _Link;
                OnGetLink(ref value);
                return value;
            }
            set
            {
                if (_Link != value)
                {
                  OnLinkChanging(ref value);
                  ReportPropertyChanging("Link");
                  _Link = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Link");
                  OnLinkChanged();
              }
            }
        }
        private string _Link;
        partial void OnGetLink(ref string value);
        partial void OnLinkChanging(ref string value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        public static SalesLeadItems CreateSalesLeadItems(int id, int salesLeadId, int invItemId)
        {
            SalesLeadItems salesLeadItems = new SalesLeadItems();
            salesLeadItems.Id = id;
            salesLeadItems.SalesLeadId = salesLeadId;
            salesLeadItems.InvItemId = invItemId;
            return salesLeadItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for QuotedPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? QuotedPrice
        {
            get
            {
                decimal? value = _QuotedPrice;
                OnGetQuotedPrice(ref value);
                return value;
            }
            set
            {
                if (_QuotedPrice != value)
                {
                  OnQuotedPriceChanging(ref value);
                  ReportPropertyChanging("QuotedPrice");
                  _QuotedPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QuotedPrice");
                  OnQuotedPriceChanged();
              }
            }
        }
        private decimal? _QuotedPrice;
        partial void OnGetQuotedPrice(ref decimal? value);
        partial void OnQuotedPriceChanging(ref decimal? value);
        partial void OnQuotedPriceChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadItems", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSalesLeadItems", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSalesLeadItems", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadQuotedItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadQuotedItems")]
        public virtual EntityCollection<SalesLeadQuotedItems> SalesLeadQuotedItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadQuotedItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadQuotedItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadQuotedItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadQuotedItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadLinks in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadLinks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadLinks : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadLinks object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="jobMainId">Initial value of JobMainId.</param>
        public static SalesLeadLinks CreateSalesLeadLinks(int id, int salesLeadId, int jobMainId)
        {
            SalesLeadLinks salesLeadLinks = new SalesLeadLinks();
            salesLeadLinks.Id = id;
            salesLeadLinks.SalesLeadId = salesLeadId;
            salesLeadLinks.JobMainId = jobMainId;
            return salesLeadLinks;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for JobMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobMainId
        {
            get
            {
                int value = _JobMainId;
                OnGetJobMainId(ref value);
                return value;
            }
            set
            {
                if (_JobMainId != value)
                {
                  OnJobMainIdChanging(ref value);
                  ReportPropertyChanging("JobMainId");
                  _JobMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobMainId");
                  OnJobMainIdChanged();
              }
            }
        }
        private int _JobMainId;
        partial void OnGetJobMainId(ref int value);
        partial void OnJobMainIdChanging(ref int value);
        partial void OnJobMainIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadLink", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobMainSalesLeadLink", "JobMains")]
        public virtual JobMains JobMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "JobMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "JobMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobMains> JobMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "JobMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "JobMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobMains>("DB_A0A0AE_ClientModel.FK_JobMainSalesLeadLink", "JobMains").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadQuotedItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadQuotedItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadQuotedItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadQuotedItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadItemsId">Initial value of SalesLeadItemsId.</param>
        /// <param name="supplierItemRateId">Initial value of SupplierItemRateId.</param>
        public static SalesLeadQuotedItems CreateSalesLeadQuotedItems(int id, int salesLeadItemsId, int supplierItemRateId)
        {
            SalesLeadQuotedItems salesLeadQuotedItems = new SalesLeadQuotedItems();
            salesLeadQuotedItems.Id = id;
            salesLeadQuotedItems.SalesLeadItemsId = salesLeadItemsId;
            salesLeadQuotedItems.SupplierItemRateId = supplierItemRateId;
            return salesLeadQuotedItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadItemsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadItemsId
        {
            get
            {
                int value = _SalesLeadItemsId;
                OnGetSalesLeadItemsId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadItemsId != value)
                {
                  OnSalesLeadItemsIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadItemsId");
                  _SalesLeadItemsId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadItemsId");
                  OnSalesLeadItemsIdChanged();
              }
            }
        }
        private int _SalesLeadItemsId;
        partial void OnGetSalesLeadItemsId(ref int value);
        partial void OnSalesLeadItemsIdChanging(ref int value);
        partial void OnSalesLeadItemsIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierItemRateId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierItemRateId
        {
            get
            {
                int value = _SupplierItemRateId;
                OnGetSupplierItemRateId(ref value);
                return value;
            }
            set
            {
                if (_SupplierItemRateId != value)
                {
                  OnSupplierItemRateIdChanging(ref value);
                  ReportPropertyChanging("SupplierItemRateId");
                  _SupplierItemRateId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierItemRateId");
                  OnSupplierItemRateIdChanged();
              }
            }
        }
        private int _SupplierItemRateId;
        partial void OnGetSupplierItemRateId(ref int value);
        partial void OnSupplierItemRateIdChanging(ref int value);
        partial void OnSupplierItemRateIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadQuotedItemStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesLeadQuotedItemStatusId
        {
            get
            {
                int? value = _SalesLeadQuotedItemStatusId;
                OnGetSalesLeadQuotedItemStatusId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadQuotedItemStatusId != value)
                {
                  OnSalesLeadQuotedItemStatusIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadQuotedItemStatusId");
                  _SalesLeadQuotedItemStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadQuotedItemStatusId");
                  OnSalesLeadQuotedItemStatusIdChanged();
              }
            }
        }
        private int? _SalesLeadQuotedItemStatusId = 1;
        partial void OnGetSalesLeadQuotedItemStatusId(ref int? value);
        partial void OnSalesLeadQuotedItemStatusIdChanging(ref int? value);
        partial void OnSalesLeadQuotedItemStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeadItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems")]
        public virtual SalesLeadItems SalesLeadItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeadItems> SalesLeadItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadItemsSalesLeadQuotedItem", "SalesLeadItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierItemRates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates")]
        public virtual SupplierItemRates SupplierItemRates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierItemRates in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierItemRates> SupplierItemRatesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SupplierItemRates").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadQuotedItemStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadQuotedItemStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadQuotedItemStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadQuotedItemStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static SalesLeadQuotedItemStatus CreateSalesLeadQuotedItemStatus(int id, string status)
        {
            SalesLeadQuotedItemStatus salesLeadQuotedItemStatus = new SalesLeadQuotedItemStatus();
            salesLeadQuotedItemStatus.Id = id;
            salesLeadQuotedItemStatus.Status = status;
            return salesLeadQuotedItemStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeads in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeads : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeads object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="date">Initial value of Date.</param>
        /// <param name="details">Initial value of Details.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="dtEntered">Initial value of DtEntered.</param>
        /// <param name="enteredBy">Initial value of EnteredBy.</param>
        /// <param name="price">Initial value of Price.</param>
        public static SalesLeads CreateSalesLeads(int id, global::System.DateTime date, string details, int customerId, global::System.DateTime dtEntered, string enteredBy, decimal price)
        {
            SalesLeads salesLeads = new SalesLeads();
            salesLeads.Id = id;
            salesLeads.Date = date;
            salesLeads.Details = details;
            salesLeads.CustomerId = customerId;
            salesLeads.DtEntered = dtEntered;
            salesLeads.EnteredBy = enteredBy;
            salesLeads.Price = price;
            return salesLeads;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Date
        {
            get
            {
                global::System.DateTime value = _Date;
                OnGetDate(ref value);
                return value;
            }
            set
            {
                if (_Date != value)
                {
                  OnDateChanging(ref value);
                  ReportPropertyChanging("Date");
                  _Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Date");
                  OnDateChanged();
              }
            }
        }
        private global::System.DateTime _Date;
        partial void OnGetDate(ref global::System.DateTime value);
        partial void OnDateChanging(ref global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Details
        {
            get
            {
                string value = _Details;
                OnGetDetails(ref value);
                return value;
            }
            set
            {
                if (_Details != value)
                {
                  OnDetailsChanging(ref value);
                  ReportPropertyChanging("Details");
                  _Details = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Details");
                  OnDetailsChanged();
              }
            }
        }
        private string _Details;
        partial void OnGetDetails(ref string value);
        partial void OnDetailsChanging(ref string value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for CustName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustName
        {
            get
            {
                string value = _CustName;
                OnGetCustName(ref value);
                return value;
            }
            set
            {
                if (_CustName != value)
                {
                  OnCustNameChanging(ref value);
                  ReportPropertyChanging("CustName");
                  _CustName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustName");
                  OnCustNameChanged();
              }
            }
        }
        private string _CustName;
        partial void OnGetCustName(ref string value);
        partial void OnCustNameChanging(ref string value);
        partial void OnCustNameChanged();
    
        /// <summary>
        /// There are no comments for DtEntered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtEntered
        {
            get
            {
                global::System.DateTime value = _DtEntered;
                OnGetDtEntered(ref value);
                return value;
            }
            set
            {
                if (_DtEntered != value)
                {
                  OnDtEnteredChanging(ref value);
                  ReportPropertyChanging("DtEntered");
                  _DtEntered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtEntered");
                  OnDtEnteredChanged();
              }
            }
        }
        private global::System.DateTime _DtEntered;
        partial void OnGetDtEntered(ref global::System.DateTime value);
        partial void OnDtEnteredChanging(ref global::System.DateTime value);
        partial void OnDtEnteredChanged();
    
        /// <summary>
        /// There are no comments for EnteredBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string EnteredBy
        {
            get
            {
                string value = _EnteredBy;
                OnGetEnteredBy(ref value);
                return value;
            }
            set
            {
                if (_EnteredBy != value)
                {
                  OnEnteredByChanging(ref value);
                  ReportPropertyChanging("EnteredBy");
                  _EnteredBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EnteredBy");
                  OnEnteredByChanged();
              }
            }
        }
        private string _EnteredBy;
        partial void OnGetEnteredBy(ref string value);
        partial void OnEnteredByChanging(ref string value);
        partial void OnEnteredByChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Price
        {
            get
            {
                decimal value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal _Price;
        partial void OnGetPrice(ref decimal value);
        partial void OnPriceChanging(ref decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for AssignedTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AssignedTo
        {
            get
            {
                string value = _AssignedTo;
                OnGetAssignedTo(ref value);
                return value;
            }
            set
            {
                if (_AssignedTo != value)
                {
                  OnAssignedToChanging(ref value);
                  ReportPropertyChanging("AssignedTo");
                  _AssignedTo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AssignedTo");
                  OnAssignedToChanged();
              }
            }
        }
        private string _AssignedTo;
        partial void OnGetAssignedTo(ref string value);
        partial void OnAssignedToChanging(ref string value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// There are no comments for CustPhone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustPhone
        {
            get
            {
                string value = _CustPhone;
                OnGetCustPhone(ref value);
                return value;
            }
            set
            {
                if (_CustPhone != value)
                {
                  OnCustPhoneChanging(ref value);
                  ReportPropertyChanging("CustPhone");
                  _CustPhone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustPhone");
                  OnCustPhoneChanged();
              }
            }
        }
        private string _CustPhone;
        partial void OnGetCustPhone(ref string value);
        partial void OnCustPhoneChanging(ref string value);
        partial void OnCustPhoneChanged();
    
        /// <summary>
        /// There are no comments for CustEmail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustEmail
        {
            get
            {
                string value = _CustEmail;
                OnGetCustEmail(ref value);
                return value;
            }
            set
            {
                if (_CustEmail != value)
                {
                  OnCustEmailChanging(ref value);
                  ReportPropertyChanging("CustEmail");
                  _CustEmail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustEmail");
                  OnCustEmailChanged();
              }
            }
        }
        private string _CustEmail;
        partial void OnGetCustEmail(ref string value);
        partial void OnCustEmailChanging(ref string value);
        partial void OnCustEmailChanged();
    
        /// <summary>
        /// There are no comments for SalesCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SalesCode
        {
            get
            {
                string value = _SalesCode;
                OnGetSalesCode(ref value);
                return value;
            }
            set
            {
                if (_SalesCode != value)
                {
                  OnSalesCodeChanging(ref value);
                  ReportPropertyChanging("SalesCode");
                  _SalesCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SalesCode");
                  OnSalesCodeChanged();
              }
            }
        }
        private string _SalesCode;
        partial void OnGetSalesCode(ref string value);
        partial void OnSalesCodeChanging(ref string value);
        partial void OnSalesCodeChanged();
    
        /// <summary>
        /// There are no comments for ItemWeight in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ItemWeight
        {
            get
            {
                string value = _ItemWeight;
                OnGetItemWeight(ref value);
                return value;
            }
            set
            {
                if (_ItemWeight != value)
                {
                  OnItemWeightChanging(ref value);
                  ReportPropertyChanging("ItemWeight");
                  _ItemWeight = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ItemWeight");
                  OnItemWeightChanged();
              }
            }
        }
        private string _ItemWeight;
        partial void OnGetItemWeight(ref string value);
        partial void OnItemWeightChanging(ref string value);
        partial void OnItemWeightChanged();
    
        /// <summary>
        /// There are no comments for Commodity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Commodity
        {
            get
            {
                string value = _Commodity;
                OnGetCommodity(ref value);
                return value;
            }
            set
            {
                if (_Commodity != value)
                {
                  OnCommodityChanging(ref value);
                  ReportPropertyChanging("Commodity");
                  _Commodity = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Commodity");
                  OnCommodityChanged();
              }
            }
        }
        private string _Commodity;
        partial void OnGetCommodity(ref string value);
        partial void OnCommodityChanging(ref string value);
        partial void OnCommodityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CheckerActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadCheckerActivity", "CheckerActivities")]
        public virtual EntityCollection<CheckerActivities> CheckerActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CheckerActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "CheckerActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CheckerActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadCheckerActivity", "CheckerActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesActivity", "SalesActivities")]
        public virtual EntityCollection<SalesActivities> SalesActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesActivity", "SalesActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadCategory", "SalesLeadCategories")]
        public virtual EntityCollection<SalesLeadCategories> SalesLeadCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadCategories>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeadCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadCategories>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCategory", "SalesLeadCategories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadCompanies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadCompany", "SalesLeadCompanies")]
        public virtual EntityCollection<SalesLeadCompanies> SalesLeadCompanies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadCompanies>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeadCompanies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadCompanies>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadCompany", "SalesLeadCompanies", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadItems", "SalesLeadItems")]
        public virtual EntityCollection<SalesLeadItems> SalesLeadItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeadItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadItems>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadItems", "SalesLeadItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadLinks in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesLeadLink", "SalesLeadLinks")]
        public virtual EntityCollection<SalesLeadLinks> SalesLeadLinks
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadLinks>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeadLinks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadLinks>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesLeadLink", "SalesLeadLinks", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerSalesLead", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerSalesLead", "Customers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeadSupActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSupActivitySalesLead", "SalesLeadSupActivities")]
        public virtual EntityCollection<SalesLeadSupActivities> SalesLeadSupActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadSupActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeadSupActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadSupActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeadSupActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesProcStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesProcStatus", "SalesProcStatus")]
        public virtual EntityCollection<SalesProcStatus> SalesProcStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesProcStatus>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesProcStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesProcStatus>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesProcStatus", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesStatus", "SalesStatus")]
        public virtual EntityCollection<SalesStatus> SalesStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesStatus>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesStatus>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesStatus", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesLeadSupActivities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesLeadSupActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLeadSupActivities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesLeadSupActivities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="supplierActivityId">Initial value of SupplierActivityId.</param>
        public static SalesLeadSupActivities CreateSalesLeadSupActivities(int id, int salesLeadId, int supplierActivityId)
        {
            SalesLeadSupActivities salesLeadSupActivities = new SalesLeadSupActivities();
            salesLeadSupActivities.Id = id;
            salesLeadSupActivities.SalesLeadId = salesLeadId;
            salesLeadSupActivities.SupplierActivityId = supplierActivityId;
            return salesLeadSupActivities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierActivityId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierActivityId
        {
            get
            {
                int value = _SupplierActivityId;
                OnGetSupplierActivityId(ref value);
                return value;
            }
            set
            {
                if (_SupplierActivityId != value)
                {
                  OnSupplierActivityIdChanging(ref value);
                  ReportPropertyChanging("SupplierActivityId");
                  _SupplierActivityId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierActivityId");
                  OnSupplierActivityIdChanged();
              }
            }
        }
        private int _SupplierActivityId;
        partial void OnGetSupplierActivityId(ref int value);
        partial void OnSupplierActivityIdChanging(ref int value);
        partial void OnSupplierActivityIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSupActivitySalesLead", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySalesLead", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities")]
        public virtual SupplierActivities SupplierActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierActivities in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierActivities> SupplierActivitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SupplierActivities").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesProcStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesProcStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesProcStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesProcStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtStatus">Initial value of DtStatus.</param>
        /// <param name="salesProcStatusCodeId">Initial value of SalesProcStatusCodeId.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        public static SalesProcStatus CreateSalesProcStatus(int id, global::System.DateTime dtStatus, int salesProcStatusCodeId, int salesLeadId)
        {
            SalesProcStatus salesProcStatus = new SalesProcStatus();
            salesProcStatus.Id = id;
            salesProcStatus.DtStatus = dtStatus;
            salesProcStatus.SalesProcStatusCodeId = salesProcStatusCodeId;
            salesProcStatus.SalesLeadId = salesLeadId;
            return salesProcStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtStatus
        {
            get
            {
                global::System.DateTime value = _DtStatus;
                OnGetDtStatus(ref value);
                return value;
            }
            set
            {
                if (_DtStatus != value)
                {
                  OnDtStatusChanging(ref value);
                  ReportPropertyChanging("DtStatus");
                  _DtStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStatus");
                  OnDtStatusChanged();
              }
            }
        }
        private global::System.DateTime _DtStatus;
        partial void OnGetDtStatus(ref global::System.DateTime value);
        partial void OnDtStatusChanging(ref global::System.DateTime value);
        partial void OnDtStatusChanged();
    
        /// <summary>
        /// There are no comments for SalesProcStatusCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesProcStatusCodeId
        {
            get
            {
                int value = _SalesProcStatusCodeId;
                OnGetSalesProcStatusCodeId(ref value);
                return value;
            }
            set
            {
                if (_SalesProcStatusCodeId != value)
                {
                  OnSalesProcStatusCodeIdChanging(ref value);
                  ReportPropertyChanging("SalesProcStatusCodeId");
                  _SalesProcStatusCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesProcStatusCodeId");
                  OnSalesProcStatusCodeIdChanged();
              }
            }
        }
        private int _SalesProcStatusCodeId;
        partial void OnGetSalesProcStatusCodeId(ref int value);
        partial void OnSalesProcStatusCodeIdChanging(ref int value);
        partial void OnSalesProcStatusCodeIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesProcStatusCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes")]
        public virtual SalesProcStatusCodes SalesProcStatusCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProcStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProcStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesProcStatusCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesProcStatusCodes> SalesProcStatusCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProcStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesProcStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProcStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatusCodes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesProcStatus", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesProcStatus", "SalesLeads").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesProcStatusCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesProcStatusCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesProcStatusCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesProcStatusCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SalesProcStatusCodes CreateSalesProcStatusCodes(int id, string name)
        {
            SalesProcStatusCodes salesProcStatusCodes = new SalesProcStatusCodes();
            salesProcStatusCodes.Id = id;
            salesProcStatusCodes.Name = name;
            return salesProcStatusCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SeqNo
        {
            get
            {
                string value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private string _SeqNo;
        partial void OnGetSeqNo(ref string value);
        partial void OnSeqNoChanging(ref string value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? IconPath
        {
            get
            {
                int? value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private int? _IconPath;
        partial void OnGetIconPath(ref int? value);
        partial void OnIconPathChanging(ref int? value);
        partial void OnIconPathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesProcStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatus")]
        public virtual EntityCollection<SalesProcStatus> SalesProcStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesProcStatus>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesProcStatus>("DB_A0A0AE_ClientModel.FK_SalesProcStatusSalesProcStatusCode", "SalesProcStatus", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtStatus">Initial value of DtStatus.</param>
        /// <param name="salesStatusCodeId">Initial value of SalesStatusCodeId.</param>
        /// <param name="salesLeadId">Initial value of SalesLeadId.</param>
        /// <param name="salesStatusStatusId">Initial value of SalesStatusStatusId.</param>
        public static SalesStatus CreateSalesStatus(int id, global::System.DateTime dtStatus, int salesStatusCodeId, int salesLeadId, int salesStatusStatusId)
        {
            SalesStatus salesStatus = new SalesStatus();
            salesStatus.Id = id;
            salesStatus.DtStatus = dtStatus;
            salesStatus.SalesStatusCodeId = salesStatusCodeId;
            salesStatus.SalesLeadId = salesLeadId;
            salesStatus.SalesStatusStatusId = salesStatusStatusId;
            return salesStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for DtStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtStatus
        {
            get
            {
                global::System.DateTime value = _DtStatus;
                OnGetDtStatus(ref value);
                return value;
            }
            set
            {
                if (_DtStatus != value)
                {
                  OnDtStatusChanging(ref value);
                  ReportPropertyChanging("DtStatus");
                  _DtStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtStatus");
                  OnDtStatusChanged();
              }
            }
        }
        private global::System.DateTime _DtStatus;
        partial void OnGetDtStatus(ref global::System.DateTime value);
        partial void OnDtStatusChanging(ref global::System.DateTime value);
        partial void OnDtStatusChanged();
    
        /// <summary>
        /// There are no comments for SalesStatusCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesStatusCodeId
        {
            get
            {
                int value = _SalesStatusCodeId;
                OnGetSalesStatusCodeId(ref value);
                return value;
            }
            set
            {
                if (_SalesStatusCodeId != value)
                {
                  OnSalesStatusCodeIdChanging(ref value);
                  ReportPropertyChanging("SalesStatusCodeId");
                  _SalesStatusCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesStatusCodeId");
                  OnSalesStatusCodeIdChanged();
              }
            }
        }
        private int _SalesStatusCodeId;
        partial void OnGetSalesStatusCodeId(ref int value);
        partial void OnSalesStatusCodeIdChanging(ref int value);
        partial void OnSalesStatusCodeIdChanged();
    
        /// <summary>
        /// There are no comments for SalesLeadId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesLeadId
        {
            get
            {
                int value = _SalesLeadId;
                OnGetSalesLeadId(ref value);
                return value;
            }
            set
            {
                if (_SalesLeadId != value)
                {
                  OnSalesLeadIdChanging(ref value);
                  ReportPropertyChanging("SalesLeadId");
                  _SalesLeadId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesLeadId");
                  OnSalesLeadIdChanged();
              }
            }
        }
        private int _SalesLeadId;
        partial void OnGetSalesLeadId(ref int value);
        partial void OnSalesLeadIdChanging(ref int value);
        partial void OnSalesLeadIdChanged();
    
        /// <summary>
        /// There are no comments for SalesStatusStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesStatusStatusId
        {
            get
            {
                int value = _SalesStatusStatusId;
                OnGetSalesStatusStatusId(ref value);
                return value;
            }
            set
            {
                if (_SalesStatusStatusId != value)
                {
                  OnSalesStatusStatusIdChanging(ref value);
                  ReportPropertyChanging("SalesStatusStatusId");
                  _SalesStatusStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesStatusStatusId");
                  OnSalesStatusStatusIdChanged();
              }
            }
        }
        private int _SalesStatusStatusId = 1;
        partial void OnGetSalesStatusStatusId(ref int value);
        partial void OnSalesStatusStatusIdChanging(ref int value);
        partial void OnSalesStatusStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesStatusCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesStatusCodeSalesStatus", "SalesStatusCodes")]
        public virtual SalesStatusCodes SalesStatusCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatusCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatusCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesStatusCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesStatusCodes> SalesStatusCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatusCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatusCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusCodes>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatusCodes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSalesStatus", "SalesLeads")]
        public virtual SalesLeads SalesLeads
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesLeads").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesLeads").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesLeads in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesLeads> SalesLeadsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesLeads");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesLeads", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesLeads>("DB_A0A0AE_ClientModel.FK_SalesLeadSalesStatus", "SalesLeads").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesStatusStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesStatusStatusSalesStatus", "SalesStatusStatus")]
        public virtual SalesStatusStatus SalesStatusStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatusStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatusStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesStatusStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesStatusStatus> SalesStatusStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatusStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesStatusStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatusStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesStatusStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatusStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesStatusAllowedUsers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// User
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesStatusAllowedUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesStatusAllowedUsers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesStatusAllowedUsers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="user">Initial value of User.</param>
        public static SalesStatusAllowedUsers CreateSalesStatusAllowedUsers(int id, string user)
        {
            SalesStatusAllowedUsers salesStatusAllowedUsers = new SalesStatusAllowedUsers();
            salesStatusAllowedUsers.Id = id;
            salesStatusAllowedUsers.User = user;
            return salesStatusAllowedUsers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string User
        {
            get
            {
                string value = _User;
                OnGetUser(ref value);
                return value;
            }
            set
            {
                if (_User != value)
                {
                  OnUserChanging(ref value);
                  ReportPropertyChanging("User");
                  _User = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("User");
                  OnUserChanged();
              }
            }
        }
        private string _User;
        partial void OnGetUser(ref string value);
        partial void OnUserChanging(ref string value);
        partial void OnUserChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesStatusCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesStatusCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesStatusCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesStatusCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="salesStatusTypeId">Initial value of SalesStatusTypeId.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        public static SalesStatusCodes CreateSalesStatusCodes(int id, string name, int salesStatusTypeId, int orderNo)
        {
            SalesStatusCodes salesStatusCodes = new SalesStatusCodes();
            salesStatusCodes.Id = id;
            salesStatusCodes.Name = name;
            salesStatusCodes.SalesStatusTypeId = salesStatusTypeId;
            salesStatusCodes.OrderNo = orderNo;
            return salesStatusCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SeqNo
        {
            get
            {
                int? value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int? _SeqNo;
        partial void OnGetSeqNo(ref int? value);
        partial void OnSeqNoChanging(ref int? value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for SalesStatusTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesStatusTypeId
        {
            get
            {
                int value = _SalesStatusTypeId;
                OnGetSalesStatusTypeId(ref value);
                return value;
            }
            set
            {
                if (_SalesStatusTypeId != value)
                {
                  OnSalesStatusTypeIdChanging(ref value);
                  ReportPropertyChanging("SalesStatusTypeId");
                  _SalesStatusTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesStatusTypeId");
                  OnSalesStatusTypeIdChanged();
              }
            }
        }
        private int _SalesStatusTypeId = 1;
        partial void OnGetSalesStatusTypeId(ref int value);
        partial void OnSalesStatusTypeIdChanging(ref int value);
        partial void OnSalesStatusTypeIdChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo = 1;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesStatusCodeSalesStatus", "SalesStatus")]
        public virtual EntityCollection<SalesStatus> SalesStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusCodeSalesStatus", "SalesStatus", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesStatusRestrictions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// SalesStatusAllowedUsersId
    /// SalesStatusCodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesStatusRestrictions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesStatusRestrictions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesStatusRestrictions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="salesStatusAllowedUsersId">Initial value of SalesStatusAllowedUsersId.</param>
        /// <param name="salesStatusCodeId">Initial value of SalesStatusCodeId.</param>
        public static SalesStatusRestrictions CreateSalesStatusRestrictions(int id, int salesStatusAllowedUsersId, int salesStatusCodeId)
        {
            SalesStatusRestrictions salesStatusRestrictions = new SalesStatusRestrictions();
            salesStatusRestrictions.Id = id;
            salesStatusRestrictions.SalesStatusAllowedUsersId = salesStatusAllowedUsersId;
            salesStatusRestrictions.SalesStatusCodeId = salesStatusCodeId;
            return salesStatusRestrictions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SalesStatusAllowedUsersId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesStatusAllowedUsersId
        {
            get
            {
                int value = _SalesStatusAllowedUsersId;
                OnGetSalesStatusAllowedUsersId(ref value);
                return value;
            }
            set
            {
                if (_SalesStatusAllowedUsersId != value)
                {
                  OnSalesStatusAllowedUsersIdChanging(ref value);
                  ReportPropertyChanging("SalesStatusAllowedUsersId");
                  _SalesStatusAllowedUsersId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesStatusAllowedUsersId");
                  OnSalesStatusAllowedUsersIdChanged();
              }
            }
        }
        private int _SalesStatusAllowedUsersId;
        partial void OnGetSalesStatusAllowedUsersId(ref int value);
        partial void OnSalesStatusAllowedUsersIdChanging(ref int value);
        partial void OnSalesStatusAllowedUsersIdChanged();
    
        /// <summary>
        /// There are no comments for SalesStatusCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesStatusCodeId
        {
            get
            {
                int value = _SalesStatusCodeId;
                OnGetSalesStatusCodeId(ref value);
                return value;
            }
            set
            {
                if (_SalesStatusCodeId != value)
                {
                  OnSalesStatusCodeIdChanging(ref value);
                  ReportPropertyChanging("SalesStatusCodeId");
                  _SalesStatusCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesStatusCodeId");
                  OnSalesStatusCodeIdChanged();
              }
            }
        }
        private int _SalesStatusCodeId;
        partial void OnGetSalesStatusCodeId(ref int value);
        partial void OnSalesStatusCodeIdChanging(ref int value);
        partial void OnSalesStatusCodeIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesStatusStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesStatusStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesStatusStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesStatusStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static SalesStatusStatus CreateSalesStatusStatus(int id, string status)
        {
            SalesStatusStatus salesStatusStatus = new SalesStatusStatus();
            salesStatusStatus.Id = id;
            salesStatusStatus.Status = status;
            return salesStatusStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesStatusStatusSalesStatus", "SalesStatus")]
        public virtual EntityCollection<SalesStatus> SalesStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesStatus>("DB_A0A0AE_ClientModel.FK_SalesStatusStatusSalesStatus", "SalesStatus", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SalesStatusTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SalesStatusTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesStatusTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesStatusTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static SalesStatusTypes CreateSalesStatusTypes(int id, string type)
        {
            SalesStatusTypes salesStatusTypes = new SalesStatusTypes();
            salesStatusTypes.Id = id;
            salesStatusTypes.Type = type;
            return salesStatusTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Services in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Services")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Services : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Services object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="status">Initial value of Status.</param>
        public static Services CreateServices(int id, string name, string status)
        {
            Services services = new Services();
            services.Id = id;
            services.Name = name;
            services.Status = status;
            return services;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ServicesJobServices", "JobServices")]
        public virtual EntityCollection<JobServices> JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "JobServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_ServicesJobServices", "JobServices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SrvActionItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ServicesSrvActionItem", "SrvActionItems")]
        public virtual EntityCollection<SrvActionItems> SrvActionItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SrvActionItems>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "SrvActionItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SrvActionItems>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "SrvActionItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmBranches in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmBranches")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmBranches : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmBranches object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SmBranches CreateSmBranches(int id, string name)
        {
            SmBranches smBranches = new SmBranches();
            smBranches.Id = id;
            smBranches.Name = name;
            return smBranches;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmBranchSmProduct", "SmProducts")]
        public virtual EntityCollection<SmProducts> SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProducts>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProducts>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmProducts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmCategories in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmCategories : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmCategories object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SmCategories CreateSmCategories(int id, string name)
        {
            SmCategories smCategories = new SmCategories();
            smCategories.Id = id;
            smCategories.Name = name;
            return smCategories;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProdAds in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmCategorySmProdAds", "SmProdAds")]
        public virtual EntityCollection<SmProdAds> SmProdAds
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdAds>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmProdAds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdAds>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmProdAds", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmCategorySmProdCat", "SmProdCats")]
        public virtual EntityCollection<SmProdCats> SmProdCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdCats>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmProdCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdCats>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmProdCats", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmFiles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmFiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmFiles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmFiles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="link">Initial value of Link.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        public static SmFiles CreateSmFiles(int id, string desc, string link, int smProductId)
        {
            SmFiles smFiles = new SmFiles();
            smFiles.Id = id;
            smFiles.Desc = desc;
            smFiles.Link = link;
            smFiles.SmProductId = smProductId;
            return smFiles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Link in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Link
        {
            get
            {
                string value = _Link;
                OnGetLink(ref value);
                return value;
            }
            set
            {
                if (_Link != value)
                {
                  OnLinkChanging(ref value);
                  ReportPropertyChanging("Link");
                  _Link = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Link");
                  OnLinkChanged();
              }
            }
        }
        private string _Link;
        partial void OnGetLink(ref string value);
        partial void OnLinkChanging(ref string value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmFile", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmProducts").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProdAds in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProdAds")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProdAds : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProdAds object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="image">Initial value of Image.</param>
        /// <param name="link">Initial value of Link.</param>
        /// <param name="smCategoryId">Initial value of SmCategoryId.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        public static SmProdAds CreateSmProdAds(int id, string image, string link, int smCategoryId, int smProductId)
        {
            SmProdAds smProdAds = new SmProdAds();
            smProdAds.Id = id;
            smProdAds.Image = image;
            smProdAds.Link = link;
            smProdAds.SmCategoryId = smCategoryId;
            smProdAds.SmProductId = smProductId;
            return smProdAds;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Image in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Image
        {
            get
            {
                string value = _Image;
                OnGetImage(ref value);
                return value;
            }
            set
            {
                if (_Image != value)
                {
                  OnImageChanging(ref value);
                  ReportPropertyChanging("Image");
                  _Image = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Image");
                  OnImageChanged();
              }
            }
        }
        private string _Image;
        partial void OnGetImage(ref string value);
        partial void OnImageChanging(ref string value);
        partial void OnImageChanged();
    
        /// <summary>
        /// There are no comments for Link in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Link
        {
            get
            {
                string value = _Link;
                OnGetLink(ref value);
                return value;
            }
            set
            {
                if (_Link != value)
                {
                  OnLinkChanging(ref value);
                  ReportPropertyChanging("Link");
                  _Link = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Link");
                  OnLinkChanged();
              }
            }
        }
        private string _Link;
        partial void OnGetLink(ref string value);
        partial void OnLinkChanging(ref string value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// There are no comments for SmCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmCategoryId
        {
            get
            {
                int value = _SmCategoryId;
                OnGetSmCategoryId(ref value);
                return value;
            }
            set
            {
                if (_SmCategoryId != value)
                {
                  OnSmCategoryIdChanging(ref value);
                  ReportPropertyChanging("SmCategoryId");
                  _SmCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmCategoryId");
                  OnSmCategoryIdChanged();
              }
            }
        }
        private int _SmCategoryId;
        partial void OnGetSmCategoryId(ref int value);
        partial void OnSmCategoryIdChanging(ref int value);
        partial void OnSmCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmCategorySmProdAds", "SmCategories")]
        public virtual SmCategories SmCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmCategories> SmCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdAds", "SmCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdAds", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProducts").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProdCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProdCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProdCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProdCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="smCategoryId">Initial value of SmCategoryId.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        public static SmProdCats CreateSmProdCats(int id, int smCategoryId, int smProductId)
        {
            SmProdCats smProdCats = new SmProdCats();
            smProdCats.Id = id;
            smProdCats.SmCategoryId = smCategoryId;
            smProdCats.SmProductId = smProductId;
            return smProdCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SmCategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmCategoryId
        {
            get
            {
                int value = _SmCategoryId;
                OnGetSmCategoryId(ref value);
                return value;
            }
            set
            {
                if (_SmCategoryId != value)
                {
                  OnSmCategoryIdChanging(ref value);
                  ReportPropertyChanging("SmCategoryId");
                  _SmCategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmCategoryId");
                  OnSmCategoryIdChanged();
              }
            }
        }
        private int _SmCategoryId;
        partial void OnGetSmCategoryId(ref int value);
        partial void OnSmCategoryIdChanging(ref int value);
        partial void OnSmCategoryIdChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmCategories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmCategorySmProdCat", "SmCategories")]
        public virtual SmCategories SmCategories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmCategories").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmCategories in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmCategories> SmCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmCategories");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmCategories", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmCategories>("DB_A0A0AE_ClientModel.FK_SmCategorySmProdCat", "SmCategories").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdCat", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProducts").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProdDescs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProdDescs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProdDescs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProdDescs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        /// <param name="sortNo">Initial value of SortNo.</param>
        /// <param name="smProductId1">Initial value of SmProductId1.</param>
        public static SmProdDescs CreateSmProdDescs(int id, int smProductId, int sortNo, int smProductId1)
        {
            SmProdDescs smProdDescs = new SmProdDescs();
            smProdDescs.Id = id;
            smProdDescs.SmProductId = smProductId;
            smProdDescs.SortNo = sortNo;
            smProdDescs.SmProductId1 = smProductId1;
            return smProdDescs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();
    
        /// <summary>
        /// There are no comments for SortNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SortNo
        {
            get
            {
                int value = _SortNo;
                OnGetSortNo(ref value);
                return value;
            }
            set
            {
                if (_SortNo != value)
                {
                  OnSortNoChanging(ref value);
                  ReportPropertyChanging("SortNo");
                  _SortNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortNo");
                  OnSortNoChanged();
              }
            }
        }
        private int _SortNo;
        partial void OnGetSortNo(ref int value);
        partial void OnSortNoChanging(ref int value);
        partial void OnSortNoChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for SmProductId1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId1
        {
            get
            {
                int value = _SmProductId1;
                OnGetSmProductId1(ref value);
                return value;
            }
            set
            {
                if (_SmProductId1 != value)
                {
                  OnSmProductId1Changing(ref value);
                  ReportPropertyChanging("SmProductId1");
                  _SmProductId1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId1");
                  OnSmProductId1Changed();
              }
            }
        }
        private int _SmProductId1;
        partial void OnGetSmProductId1(ref int value);
        partial void OnSmProductId1Changing(ref int value);
        partial void OnSmProductId1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdDesc", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProducts").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProdInfoes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProdInfoes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProdInfoes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProdInfoes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        /// <param name="label">Initial value of Label.</param>
        public static SmProdInfoes CreateSmProdInfoes(int id, int smProductId, string label)
        {
            SmProdInfoes smProdInfoes = new SmProdInfoes();
            smProdInfoes.Id = id;
            smProdInfoes.SmProductId = smProductId;
            smProdInfoes.Label = label;
            return smProdInfoes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();
    
        /// <summary>
        /// There are no comments for Label in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Label
        {
            get
            {
                string value = _Label;
                OnGetLabel(ref value);
                return value;
            }
            set
            {
                if (_Label != value)
                {
                  OnLabelChanging(ref value);
                  ReportPropertyChanging("Label");
                  _Label = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Label");
                  OnLabelChanged();
              }
            }
        }
        private string _Label;
        partial void OnGetLabel(ref string value);
        partial void OnLabelChanging(ref string value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Value
        {
            get
            {
                string value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private string _Value;
        partial void OnGetValue(ref string value);
        partial void OnValueChanging(ref string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdInfo", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProducts").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProdStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProdStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProdStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProdStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static SmProdStatus CreateSmProdStatus(int id, string status)
        {
            SmProdStatus smProdStatus = new SmProdStatus();
            smProdStatus.Id = id;
            smProdStatus.Status = status;
            return smProdStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProdStatusSmProduct", "SmProducts")]
        public virtual EntityCollection<SmProducts> SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProducts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProdSuppliers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProdSuppliers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProdSuppliers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProdSuppliers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="validStart">Initial value of ValidStart.</param>
        /// <param name="validEnd">Initial value of ValidEnd.</param>
        /// <param name="price">Initial value of Price.</param>
        /// <param name="contracted">Initial value of Contracted.</param>
        /// <param name="smSupplierId">Initial value of SmSupplierId.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        public static SmProdSuppliers CreateSmProdSuppliers(int id, global::System.DateTime validStart, global::System.DateTime validEnd, decimal price, decimal contracted, int smSupplierId, int smProductId)
        {
            SmProdSuppliers smProdSuppliers = new SmProdSuppliers();
            smProdSuppliers.Id = id;
            smProdSuppliers.ValidStart = validStart;
            smProdSuppliers.ValidEnd = validEnd;
            smProdSuppliers.Price = price;
            smProdSuppliers.Contracted = contracted;
            smProdSuppliers.SmSupplierId = smSupplierId;
            smProdSuppliers.SmProductId = smProductId;
            return smProdSuppliers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ValidStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ValidStart
        {
            get
            {
                global::System.DateTime value = _ValidStart;
                OnGetValidStart(ref value);
                return value;
            }
            set
            {
                if (_ValidStart != value)
                {
                  OnValidStartChanging(ref value);
                  ReportPropertyChanging("ValidStart");
                  _ValidStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidStart");
                  OnValidStartChanged();
              }
            }
        }
        private global::System.DateTime _ValidStart;
        partial void OnGetValidStart(ref global::System.DateTime value);
        partial void OnValidStartChanging(ref global::System.DateTime value);
        partial void OnValidStartChanged();
    
        /// <summary>
        /// There are no comments for ValidEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ValidEnd
        {
            get
            {
                global::System.DateTime value = _ValidEnd;
                OnGetValidEnd(ref value);
                return value;
            }
            set
            {
                if (_ValidEnd != value)
                {
                  OnValidEndChanging(ref value);
                  ReportPropertyChanging("ValidEnd");
                  _ValidEnd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidEnd");
                  OnValidEndChanged();
              }
            }
        }
        private global::System.DateTime _ValidEnd;
        partial void OnGetValidEnd(ref global::System.DateTime value);
        partial void OnValidEndChanging(ref global::System.DateTime value);
        partial void OnValidEndChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Price
        {
            get
            {
                decimal value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal _Price;
        partial void OnGetPrice(ref decimal value);
        partial void OnPriceChanging(ref decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for Contracted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Contracted
        {
            get
            {
                decimal value = _Contracted;
                OnGetContracted(ref value);
                return value;
            }
            set
            {
                if (_Contracted != value)
                {
                  OnContractedChanging(ref value);
                  ReportPropertyChanging("Contracted");
                  _Contracted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Contracted");
                  OnContractedChanged();
              }
            }
        }
        private decimal _Contracted;
        partial void OnGetContracted(ref decimal value);
        partial void OnContractedChanging(ref decimal value);
        partial void OnContractedChanged();
    
        /// <summary>
        /// There are no comments for SmSupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmSupplierId
        {
            get
            {
                int value = _SmSupplierId;
                OnGetSmSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SmSupplierId != value)
                {
                  OnSmSupplierIdChanging(ref value);
                  ReportPropertyChanging("SmSupplierId");
                  _SmSupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmSupplierId");
                  OnSmSupplierIdChanged();
              }
            }
        }
        private int _SmSupplierId;
        partial void OnGetSmSupplierId(ref int value);
        partial void OnSmSupplierIdChanging(ref int value);
        partial void OnSmSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmSupplierSmProdSupplier", "SmSuppliers")]
        public virtual SmSuppliers SmSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmSuppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmSuppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmSuppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmSuppliers> SmSuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmSuppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmSuppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmSuppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdSupplier", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProducts").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmProducts in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmProducts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmProducts : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmProducts object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="smBranchId">Initial value of SmBranchId.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="branchId">Initial value of BranchId.</param>
        /// <param name="prodStatusId">Initial value of ProdStatusId.</param>
        /// <param name="validStart">Initial value of ValidStart.</param>
        /// <param name="validEnd">Initial value of ValidEnd.</param>
        /// <param name="price">Initial value of Price.</param>
        /// <param name="contracted">Initial value of Contracted.</param>
        /// <param name="smProdStatusId">Initial value of SmProdStatusId.</param>
        public static SmProducts CreateSmProducts(int id, int smBranchId, string name, int branchId, int prodStatusId, global::System.DateTime validStart, global::System.DateTime validEnd, decimal price, decimal contracted, int smProdStatusId)
        {
            SmProducts smProducts = new SmProducts();
            smProducts.Id = id;
            smProducts.SmBranchId = smBranchId;
            smProducts.Name = name;
            smProducts.BranchId = branchId;
            smProducts.ProdStatusId = prodStatusId;
            smProducts.ValidStart = validStart;
            smProducts.ValidEnd = validEnd;
            smProducts.Price = price;
            smProducts.Contracted = contracted;
            smProducts.SmProdStatusId = smProdStatusId;
            return smProducts;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SmBranchId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmBranchId
        {
            get
            {
                int value = _SmBranchId;
                OnGetSmBranchId(ref value);
                return value;
            }
            set
            {
                if (_SmBranchId != value)
                {
                  OnSmBranchIdChanging(ref value);
                  ReportPropertyChanging("SmBranchId");
                  _SmBranchId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmBranchId");
                  OnSmBranchIdChanged();
              }
            }
        }
        private int _SmBranchId;
        partial void OnGetSmBranchId(ref int value);
        partial void OnSmBranchIdChanging(ref int value);
        partial void OnSmBranchIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for BranchId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BranchId
        {
            get
            {
                int value = _BranchId;
                OnGetBranchId(ref value);
                return value;
            }
            set
            {
                if (_BranchId != value)
                {
                  OnBranchIdChanging(ref value);
                  ReportPropertyChanging("BranchId");
                  _BranchId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BranchId");
                  OnBranchIdChanged();
              }
            }
        }
        private int _BranchId;
        partial void OnGetBranchId(ref int value);
        partial void OnBranchIdChanging(ref int value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// There are no comments for ProdStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProdStatusId
        {
            get
            {
                int value = _ProdStatusId;
                OnGetProdStatusId(ref value);
                return value;
            }
            set
            {
                if (_ProdStatusId != value)
                {
                  OnProdStatusIdChanging(ref value);
                  ReportPropertyChanging("ProdStatusId");
                  _ProdStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProdStatusId");
                  OnProdStatusIdChanged();
              }
            }
        }
        private int _ProdStatusId;
        partial void OnGetProdStatusId(ref int value);
        partial void OnProdStatusIdChanging(ref int value);
        partial void OnProdStatusIdChanged();
    
        /// <summary>
        /// There are no comments for ValidStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ValidStart
        {
            get
            {
                global::System.DateTime value = _ValidStart;
                OnGetValidStart(ref value);
                return value;
            }
            set
            {
                if (_ValidStart != value)
                {
                  OnValidStartChanging(ref value);
                  ReportPropertyChanging("ValidStart");
                  _ValidStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidStart");
                  OnValidStartChanged();
              }
            }
        }
        private global::System.DateTime _ValidStart;
        partial void OnGetValidStart(ref global::System.DateTime value);
        partial void OnValidStartChanging(ref global::System.DateTime value);
        partial void OnValidStartChanged();
    
        /// <summary>
        /// There are no comments for ValidEnd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ValidEnd
        {
            get
            {
                global::System.DateTime value = _ValidEnd;
                OnGetValidEnd(ref value);
                return value;
            }
            set
            {
                if (_ValidEnd != value)
                {
                  OnValidEndChanging(ref value);
                  ReportPropertyChanging("ValidEnd");
                  _ValidEnd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidEnd");
                  OnValidEndChanged();
              }
            }
        }
        private global::System.DateTime _ValidEnd;
        partial void OnGetValidEnd(ref global::System.DateTime value);
        partial void OnValidEndChanging(ref global::System.DateTime value);
        partial void OnValidEndChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Price
        {
            get
            {
                decimal value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private decimal _Price;
        partial void OnGetPrice(ref decimal value);
        partial void OnPriceChanging(ref decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for Contracted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Contracted
        {
            get
            {
                decimal value = _Contracted;
                OnGetContracted(ref value);
                return value;
            }
            set
            {
                if (_Contracted != value)
                {
                  OnContractedChanging(ref value);
                  ReportPropertyChanging("Contracted");
                  _Contracted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Contracted");
                  OnContractedChanged();
              }
            }
        }
        private decimal _Contracted;
        partial void OnGetContracted(ref decimal value);
        partial void OnContractedChanging(ref decimal value);
        partial void OnContractedChanged();
    
        /// <summary>
        /// There are no comments for SmProdStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProdStatusId
        {
            get
            {
                int value = _SmProdStatusId;
                OnGetSmProdStatusId(ref value);
                return value;
            }
            set
            {
                if (_SmProdStatusId != value)
                {
                  OnSmProdStatusIdChanging(ref value);
                  ReportPropertyChanging("SmProdStatusId");
                  _SmProdStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProdStatusId");
                  OnSmProdStatusIdChanged();
              }
            }
        }
        private int _SmProdStatusId;
        partial void OnGetSmProdStatusId(ref int value);
        partial void OnSmProdStatusIdChanging(ref int value);
        partial void OnSmProdStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmFiles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmFile", "SmFiles")]
        public virtual EntityCollection<SmFiles> SmFiles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmFiles>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmFiles>("DB_A0A0AE_ClientModel.FK_SmProductSmFile", "SmFiles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdAds in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdAds", "SmProdAds")]
        public virtual EntityCollection<SmProdAds> SmProdAds
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdAds>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProdAds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdAds>("DB_A0A0AE_ClientModel.FK_SmProductSmProdAds", "SmProdAds", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdCats in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdCat", "SmProdCats")]
        public virtual EntityCollection<SmProdCats> SmProdCats
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdCats>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProdCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdCats>("DB_A0A0AE_ClientModel.FK_SmProductSmProdCat", "SmProdCats", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdDescs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdDesc", "SmProdDescs")]
        public virtual EntityCollection<SmProdDescs> SmProdDescs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdDescs>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProdDescs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdDescs>("DB_A0A0AE_ClientModel.FK_SmProductSmProdDesc", "SmProdDescs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdInfoes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdInfo", "SmProdInfoes")]
        public virtual EntityCollection<SmProdInfoes> SmProdInfoes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdInfoes>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProdInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdInfoes>("DB_A0A0AE_ClientModel.FK_SmProductSmProdInfo", "SmProdInfoes", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmProdSupplier", "SmProdSuppliers")]
        public virtual EntityCollection<SmProdSuppliers> SmProdSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdSuppliers>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProdSuppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdSuppliers>("DB_A0A0AE_ClientModel.FK_SmProductSmProdSupplier", "SmProdSuppliers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProdStatusSmProduct", "SmProdStatus")]
        public virtual SmProdStatus SmProdStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProdStatus>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProdStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProdStatus>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProdStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProdStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProdStatus> SmProdStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProdStatus>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProdStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProdStatus>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProdStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProdStatus>("DB_A0A0AE_ClientModel.FK_SmProdStatusSmProduct", "SmProdStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmBranches in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmBranchSmProduct", "SmBranches")]
        public virtual SmBranches SmBranches
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmBranches>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmBranches").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmBranches>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmBranches").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmBranches in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmBranches> SmBranchesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmBranches>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmBranches");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmBranches>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmBranches", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmBranches>("DB_A0A0AE_ClientModel.FK_SmBranchSmProduct", "SmBranches").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmRates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmRate", "SmRates")]
        public virtual EntityCollection<SmRates> SmRates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmRates>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmRates>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmRates", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmRates in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmRates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmRates : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmRates object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="qty">Initial value of Qty.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="dRate">Initial value of DRate.</param>
        /// <param name="smProductId">Initial value of SmProductId.</param>
        /// <param name="smRateUoMId">Initial value of SmRateUoMId.</param>
        public static SmRates CreateSmRates(int id, int qty, decimal rate, decimal dRate, int smProductId, int smRateUoMId)
        {
            SmRates smRates = new SmRates();
            smRates.Id = id;
            smRates.Qty = qty;
            smRates.Rate = rate;
            smRates.DRate = dRate;
            smRates.SmProductId = smProductId;
            smRates.SmRateUoMId = smRateUoMId;
            return smRates;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Qty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Qty
        {
            get
            {
                int value = _Qty;
                OnGetQty(ref value);
                return value;
            }
            set
            {
                if (_Qty != value)
                {
                  OnQtyChanging(ref value);
                  ReportPropertyChanging("Qty");
                  _Qty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Qty");
                  OnQtyChanged();
              }
            }
        }
        private int _Qty;
        partial void OnGetQty(ref int value);
        partial void OnQtyChanging(ref int value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// There are no comments for Rate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Rate
        {
            get
            {
                decimal value = _Rate;
                OnGetRate(ref value);
                return value;
            }
            set
            {
                if (_Rate != value)
                {
                  OnRateChanging(ref value);
                  ReportPropertyChanging("Rate");
                  _Rate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Rate");
                  OnRateChanged();
              }
            }
        }
        private decimal _Rate;
        partial void OnGetRate(ref decimal value);
        partial void OnRateChanging(ref decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// There are no comments for DRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DRate
        {
            get
            {
                decimal value = _DRate;
                OnGetDRate(ref value);
                return value;
            }
            set
            {
                if (_DRate != value)
                {
                  OnDRateChanging(ref value);
                  ReportPropertyChanging("DRate");
                  _DRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DRate");
                  OnDRateChanged();
              }
            }
        }
        private decimal _DRate;
        partial void OnGetDRate(ref decimal value);
        partial void OnDRateChanging(ref decimal value);
        partial void OnDRateChanged();
    
        /// <summary>
        /// There are no comments for SmProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmProductId
        {
            get
            {
                int value = _SmProductId;
                OnGetSmProductId(ref value);
                return value;
            }
            set
            {
                if (_SmProductId != value)
                {
                  OnSmProductIdChanging(ref value);
                  ReportPropertyChanging("SmProductId");
                  _SmProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmProductId");
                  OnSmProductIdChanged();
              }
            }
        }
        private int _SmProductId;
        partial void OnGetSmProductId(ref int value);
        partial void OnSmProductIdChanging(ref int value);
        partial void OnSmProductIdChanged();
    
        /// <summary>
        /// There are no comments for SmRateUoMId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmRateUoMId
        {
            get
            {
                int value = _SmRateUoMId;
                OnGetSmRateUoMId(ref value);
                return value;
            }
            set
            {
                if (_SmRateUoMId != value)
                {
                  OnSmRateUoMIdChanging(ref value);
                  ReportPropertyChanging("SmRateUoMId");
                  _SmRateUoMId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmRateUoMId");
                  OnSmRateUoMIdChanged();
              }
            }
        }
        private int _SmRateUoMId;
        partial void OnGetSmRateUoMId(ref int value);
        partial void OnSmRateUoMIdChanging(ref int value);
        partial void OnSmRateUoMIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmProductSmRate", "SmProducts")]
        public virtual SmProducts SmProducts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmProducts").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmProducts in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmProducts> SmProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmProducts");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmProducts", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmProducts>("DB_A0A0AE_ClientModel.FK_SmProductSmRate", "SmProducts").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmRateUoMs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmRateSmRateUoM", "SmRateUoMs")]
        public virtual SmRateUoMs SmRateUoMs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmRateUoMs>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRateUoMs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmRateUoMs>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRateUoMs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmRateUoMs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmRateUoMs> SmRateUoMsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmRateUoMs>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRateUoMs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmRateUoMs>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRateUoMs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmRateUoMs>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRateUoMs").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmRateUoMs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmRateUoMs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmRateUoMs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmRateUoMs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SmRateUoMs CreateSmRateUoMs(int id, string name)
        {
            SmRateUoMs smRateUoMs = new SmRateUoMs();
            smRateUoMs.Id = id;
            smRateUoMs.Name = name;
            return smRateUoMs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmRates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmRateSmRateUoM", "SmRates")]
        public virtual EntityCollection<SmRates> SmRates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmRates>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmRates>("DB_A0A0AE_ClientModel.FK_SmRateSmRateUoM", "SmRates", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmSupplierInfoes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmSupplierInfoes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmSupplierInfoes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmSupplierInfoes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="smSupplierId">Initial value of SmSupplierId.</param>
        /// <param name="label">Initial value of Label.</param>
        public static SmSupplierInfoes CreateSmSupplierInfoes(int id, int smSupplierId, string label)
        {
            SmSupplierInfoes smSupplierInfoes = new SmSupplierInfoes();
            smSupplierInfoes.Id = id;
            smSupplierInfoes.SmSupplierId = smSupplierId;
            smSupplierInfoes.Label = label;
            return smSupplierInfoes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SmSupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SmSupplierId
        {
            get
            {
                int value = _SmSupplierId;
                OnGetSmSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SmSupplierId != value)
                {
                  OnSmSupplierIdChanging(ref value);
                  ReportPropertyChanging("SmSupplierId");
                  _SmSupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SmSupplierId");
                  OnSmSupplierIdChanged();
              }
            }
        }
        private int _SmSupplierId;
        partial void OnGetSmSupplierId(ref int value);
        partial void OnSmSupplierIdChanging(ref int value);
        partial void OnSmSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for Label in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Label
        {
            get
            {
                string value = _Label;
                OnGetLabel(ref value);
                return value;
            }
            set
            {
                if (_Label != value)
                {
                  OnLabelChanging(ref value);
                  ReportPropertyChanging("Label");
                  _Label = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Label");
                  OnLabelChanged();
              }
            }
        }
        private string _Label;
        partial void OnGetLabel(ref string value);
        partial void OnLabelChanging(ref string value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Value
        {
            get
            {
                string value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private string _Value;
        partial void OnGetValue(ref string value);
        partial void OnValueChanging(ref string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmSupplierSmSupplierInfo", "SmSuppliers")]
        public virtual SmSuppliers SmSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSuppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSuppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SmSuppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmSuppliers> SmSuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSuppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSuppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SmSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSuppliers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SmSuppliers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SmSuppliers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmSuppliers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SmSuppliers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        public static SmSuppliers CreateSmSuppliers(int id, string name, string description)
        {
            SmSuppliers smSuppliers = new SmSuppliers();
            smSuppliers.Id = id;
            smSuppliers.Name = name;
            smSuppliers.Description = description;
            return smSuppliers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SmProdSuppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmSupplierSmProdSupplier", "SmProdSuppliers")]
        public virtual EntityCollection<SmProdSuppliers> SmProdSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmProdSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmProdSuppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmProdSuppliers>("DB_A0A0AE_ClientModel.FK_SmSupplierSmProdSupplier", "SmProdSuppliers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SmSupplierInfoes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SmSupplierSmSupplierInfo", "SmSupplierInfoes")]
        public virtual EntityCollection<SmSupplierInfoes> SmSupplierInfoes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SmSupplierInfoes>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSupplierInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SmSupplierInfoes>("DB_A0A0AE_ClientModel.FK_SmSupplierSmSupplierInfo", "SmSupplierInfoes", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SqlDataConnections in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SqlDataConnections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlDataConnections : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SqlDataConnections object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static SqlDataConnections CreateSqlDataConnections(int id)
        {
            SqlDataConnections sqlDataConnections = new SqlDataConnections();
            sqlDataConnections.Id = id;
            return sqlDataConnections;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for DisplayName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DisplayName
        {
            get
            {
                string value = _DisplayName;
                OnGetDisplayName(ref value);
                return value;
            }
            set
            {
                if (_DisplayName != value)
                {
                  OnDisplayNameChanging(ref value);
                  ReportPropertyChanging("DisplayName");
                  _DisplayName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DisplayName");
                  OnDisplayNameChanged();
              }
            }
        }
        private string _DisplayName;
        partial void OnGetDisplayName(ref string value);
        partial void OnDisplayNameChanging(ref string value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// There are no comments for ConnectionString in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConnectionString
        {
            get
            {
                string value = _ConnectionString;
                OnGetConnectionString(ref value);
                return value;
            }
            set
            {
                if (_ConnectionString != value)
                {
                  OnConnectionStringChanging(ref value);
                  ReportPropertyChanging("ConnectionString");
                  _ConnectionString = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConnectionString");
                  OnConnectionStringChanged();
              }
            }
        }
        private string _ConnectionString;
        partial void OnGetConnectionString(ref string value);
        partial void OnConnectionStringChanging(ref string value);
        partial void OnConnectionStringChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SrvActionCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SrvActionCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SrvActionCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SrvActionCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="catCode">Initial value of CatCode.</param>
        /// <param name="sortNo">Initial value of SortNo.</param>
        public static SrvActionCodes CreateSrvActionCodes(int id, string catCode, int sortNo)
        {
            SrvActionCodes srvActionCodes = new SrvActionCodes();
            srvActionCodes.Id = id;
            srvActionCodes.CatCode = catCode;
            srvActionCodes.SortNo = sortNo;
            return srvActionCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CatCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CatCode
        {
            get
            {
                string value = _CatCode;
                OnGetCatCode(ref value);
                return value;
            }
            set
            {
                if (_CatCode != value)
                {
                  OnCatCodeChanging(ref value);
                  ReportPropertyChanging("CatCode");
                  _CatCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CatCode");
                  OnCatCodeChanged();
              }
            }
        }
        private string _CatCode;
        partial void OnGetCatCode(ref string value);
        partial void OnCatCodeChanging(ref string value);
        partial void OnCatCodeChanged();
    
        /// <summary>
        /// There are no comments for SortNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SortNo
        {
            get
            {
                int value = _SortNo;
                OnGetSortNo(ref value);
                return value;
            }
            set
            {
                if (_SortNo != value)
                {
                  OnSortNoChanging(ref value);
                  ReportPropertyChanging("SortNo");
                  _SortNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortNo");
                  OnSortNoChanged();
              }
            }
        }
        private int _SortNo;
        partial void OnGetSortNo(ref int value);
        partial void OnSortNoChanging(ref int value);
        partial void OnSortNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SrvActionItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SrvActionCodeSrvActionItem", "SrvActionItems")]
        public virtual EntityCollection<SrvActionItems> SrvActionItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SrvActionItems>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SrvActionItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SrvActionItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SrvActionItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SrvActionItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="sortNo">Initial value of SortNo.</param>
        /// <param name="servicesId">Initial value of ServicesId.</param>
        /// <param name="srvActionCodeId">Initial value of SrvActionCodeId.</param>
        public static SrvActionItems CreateSrvActionItems(int id, string desc, int sortNo, int servicesId, int srvActionCodeId)
        {
            SrvActionItems srvActionItems = new SrvActionItems();
            srvActionItems.Id = id;
            srvActionItems.Desc = desc;
            srvActionItems.SortNo = sortNo;
            srvActionItems.ServicesId = servicesId;
            srvActionItems.SrvActionCodeId = srvActionCodeId;
            return srvActionItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SortNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SortNo
        {
            get
            {
                int value = _SortNo;
                OnGetSortNo(ref value);
                return value;
            }
            set
            {
                if (_SortNo != value)
                {
                  OnSortNoChanging(ref value);
                  ReportPropertyChanging("SortNo");
                  _SortNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortNo");
                  OnSortNoChanged();
              }
            }
        }
        private int _SortNo;
        partial void OnGetSortNo(ref int value);
        partial void OnSortNoChanging(ref int value);
        partial void OnSortNoChanged();
    
        /// <summary>
        /// There are no comments for ServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ServicesId
        {
            get
            {
                int value = _ServicesId;
                OnGetServicesId(ref value);
                return value;
            }
            set
            {
                if (_ServicesId != value)
                {
                  OnServicesIdChanging(ref value);
                  ReportPropertyChanging("ServicesId");
                  _ServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ServicesId");
                  OnServicesIdChanged();
              }
            }
        }
        private int _ServicesId;
        partial void OnGetServicesId(ref int value);
        partial void OnServicesIdChanging(ref int value);
        partial void OnServicesIdChanged();
    
        /// <summary>
        /// There are no comments for SrvActionCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SrvActionCodeId
        {
            get
            {
                int value = _SrvActionCodeId;
                OnGetSrvActionCodeId(ref value);
                return value;
            }
            set
            {
                if (_SrvActionCodeId != value)
                {
                  OnSrvActionCodeIdChanging(ref value);
                  ReportPropertyChanging("SrvActionCodeId");
                  _SrvActionCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SrvActionCodeId");
                  OnSrvActionCodeIdChanged();
              }
            }
        }
        private int _SrvActionCodeId;
        partial void OnGetSrvActionCodeId(ref int value);
        partial void OnSrvActionCodeIdChanging(ref int value);
        partial void OnSrvActionCodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobActions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SrvActionItemJobAction", "JobActions")]
        public virtual EntityCollection<JobActions> JobActions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobActions>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "JobActions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobActions>("DB_A0A0AE_ClientModel.FK_SrvActionItemJobAction", "JobActions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Services in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_ServicesSrvActionItem", "Services")]
        public virtual Services Services
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "Services").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Services in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Services> ServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "Services");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "Services", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Services>("DB_A0A0AE_ClientModel.FK_ServicesSrvActionItem", "Services").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SrvActionCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SrvActionCodeSrvActionItem", "SrvActionCodes")]
        public virtual SrvActionCodes SrvActionCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionCodes>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionCodes>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionCodes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SrvActionCodes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SrvActionCodes> SrvActionCodesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionCodes>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionCodes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SrvActionCodes>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionCodes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SrvActionCodes>("DB_A0A0AE_ClientModel.FK_SrvActionCodeSrvActionItem", "SrvActionCodes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelBrands in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelBrands")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelBrands : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelBrands object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelBrands CreateSteelBrands(int id, string name)
        {
            SteelBrands steelBrands = new SteelBrands();
            steelBrands.Id = id;
            steelBrands.Name = name;
            return steelBrands;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelBrandInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelBrandInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelMainCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelMainCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelMainCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelMainCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelMainCats CreateSteelMainCats(int id, string name)
        {
            SteelMainCats steelMainCats = new SteelMainCats();
            steelMainCats.Id = id;
            steelMainCats.Name = name;
            return steelMainCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelMainCatInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelMainCatInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelMaterialGrades in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelMaterialGrades")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelMaterialGrades : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelMaterialGrades object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelMaterialGrades CreateSteelMaterialGrades(int id, string name)
        {
            SteelMaterialGrades steelMaterialGrades = new SteelMaterialGrades();
            steelMaterialGrades.Id = id;
            steelMaterialGrades.Name = name;
            return steelMaterialGrades;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelMaterialGradeInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelMaterialGradeInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelMaterials in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelMaterials")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelMaterials : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelMaterials object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelMaterials CreateSteelMaterials(int id, string name)
        {
            SteelMaterials steelMaterials = new SteelMaterials();
            steelMaterials.Id = id;
            steelMaterials.Name = name;
            return steelMaterials;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelMaterialInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelMaterialInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelOrigins in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelOrigins")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelOrigins : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelOrigins object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelOrigins CreateSteelOrigins(int id, string name)
        {
            SteelOrigins steelOrigins = new SteelOrigins();
            steelOrigins.Id = id;
            steelOrigins.Name = name;
            return steelOrigins;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelOriginInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelOriginInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelSizes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelSizes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelSizes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelSizes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelSizes CreateSteelSizes(int id, string name)
        {
            SteelSizes steelSizes = new SteelSizes();
            steelSizes.Id = id;
            steelSizes.Name = name;
            return steelSizes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelSizeInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelSizeInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SteelSubCats in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SteelSubCats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SteelSubCats : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SteelSubCats object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SteelSubCats CreateSteelSubCats(int id, string name)
        {
            SteelSubCats steelSubCats = new SteelSubCats();
            steelSubCats.Id = id;
            steelSubCats.Name = name;
            return steelSubCats;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvItemSpec_Steel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SteelSubCatInvItemSpec_Steel", "InvItemSpec_Steel")]
        public virtual EntityCollection<InvItemSpec_Steel> InvItemSpec_Steel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "InvItemSpec_Steel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvItemSpec_Steel>("DB_A0A0AE_ClientModel.FK_SteelSubCatInvItemSpec_Steel", "InvItemSpec_Steel", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupDocuments in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupDocuments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupDocuments : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupDocuments object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        public static SupDocuments CreateSupDocuments(int id, string description)
        {
            SupDocuments supDocuments = new SupDocuments();
            supDocuments.Id = id;
            supDocuments.Description = description;
            return supDocuments;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustEntDocuments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntDocumentsSupDocument", "CustEntDocuments")]
        public virtual EntityCollection<CustEntDocuments> CustEntDocuments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustEntDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "CustEntDocuments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustEntDocuments>("DB_A0A0AE_ClientModel.FK_CustEntDocumentsSupDocument", "CustEntDocuments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierDocuments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupDocumentSupplierDocument", "SupplierDocuments")]
        public virtual EntityCollection<SupplierDocuments> SupplierDocuments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupplierDocuments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupplierDocuments", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierActActionCodes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierActActionCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierActActionCodes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierActActionCodes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="desc">Initial value of Desc.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        /// <param name="iconPath">Initial value of IconPath.</param>
        /// <param name="defaultActStatus">Initial value of DefaultActStatus.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        public static SupplierActActionCodes CreateSupplierActActionCodes(int id, string name, string desc, string sysCode, string iconPath, int defaultActStatus, int seqNo)
        {
            SupplierActActionCodes supplierActActionCodes = new SupplierActActionCodes();
            supplierActActionCodes.Id = id;
            supplierActActionCodes.Name = name;
            supplierActActionCodes.Desc = desc;
            supplierActActionCodes.SysCode = sysCode;
            supplierActActionCodes.IconPath = iconPath;
            supplierActActionCodes.DefaultActStatus = defaultActStatus;
            supplierActActionCodes.SeqNo = seqNo;
            return supplierActActionCodes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Desc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Desc
        {
            get
            {
                string value = _Desc;
                OnGetDesc(ref value);
                return value;
            }
            set
            {
                if (_Desc != value)
                {
                  OnDescChanging(ref value);
                  ReportPropertyChanging("Desc");
                  _Desc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Desc");
                  OnDescChanged();
              }
            }
        }
        private string _Desc;
        partial void OnGetDesc(ref string value);
        partial void OnDescChanging(ref string value);
        partial void OnDescChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for DefaultActStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DefaultActStatus
        {
            get
            {
                int value = _DefaultActStatus;
                OnGetDefaultActStatus(ref value);
                return value;
            }
            set
            {
                if (_DefaultActStatus != value)
                {
                  OnDefaultActStatusChanging(ref value);
                  ReportPropertyChanging("DefaultActStatus");
                  _DefaultActStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DefaultActStatus");
                  OnDefaultActStatusChanged();
              }
            }
        }
        private int _DefaultActStatus;
        partial void OnGetDefaultActStatus(ref int value);
        partial void OnDefaultActStatusChanging(ref int value);
        partial void OnDefaultActStatusChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo = 1;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierActActionStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierActActionStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierActActionStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierActActionStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="actionStatus">Initial value of ActionStatus.</param>
        public static SupplierActActionStatus CreateSupplierActActionStatus(int id, string actionStatus)
        {
            SupplierActActionStatus supplierActActionStatus = new SupplierActActionStatus();
            supplierActActionStatus.Id = id;
            supplierActActionStatus.ActionStatus = actionStatus;
            return supplierActActionStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ActionStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ActionStatus
        {
            get
            {
                string value = _ActionStatus;
                OnGetActionStatus(ref value);
                return value;
            }
            set
            {
                if (_ActionStatus != value)
                {
                  OnActionStatusChanging(ref value);
                  ReportPropertyChanging("ActionStatus");
                  _ActionStatus = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ActionStatus");
                  OnActionStatusChanged();
              }
            }
        }
        private string _ActionStatus;
        partial void OnGetActionStatus(ref string value);
        partial void OnActionStatusChanging(ref string value);
        partial void OnActionStatusChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierActivities in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierActivities : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierActivities object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="dtActivity">Initial value of DtActivity.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        /// <param name="supplierActActionStatusId">Initial value of SupplierActActionStatusId.</param>
        public static SupplierActivities CreateSupplierActivities(int id, global::System.DateTime dtActivity, int supplierId, int supplierActActionStatusId)
        {
            SupplierActivities supplierActivities = new SupplierActivities();
            supplierActivities.Id = id;
            supplierActivities.DtActivity = dtActivity;
            supplierActivities.SupplierId = supplierId;
            supplierActivities.SupplierActActionStatusId = supplierActActionStatusId;
            return supplierActivities;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for DtActivity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtActivity
        {
            get
            {
                global::System.DateTime value = _DtActivity;
                OnGetDtActivity(ref value);
                return value;
            }
            set
            {
                if (_DtActivity != value)
                {
                  OnDtActivityChanging(ref value);
                  ReportPropertyChanging("DtActivity");
                  _DtActivity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtActivity");
                  OnDtActivityChanged();
              }
            }
        }
        private global::System.DateTime _DtActivity;
        partial void OnGetDtActivity(ref global::System.DateTime value);
        partial void OnDtActivityChanging(ref global::System.DateTime value);
        partial void OnDtActivityChanged();
    
        /// <summary>
        /// There are no comments for Assigned in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Assigned
        {
            get
            {
                string value = _Assigned;
                OnGetAssigned(ref value);
                return value;
            }
            set
            {
                if (_Assigned != value)
                {
                  OnAssignedChanging(ref value);
                  ReportPropertyChanging("Assigned");
                  _Assigned = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Assigned");
                  OnAssignedChanged();
              }
            }
        }
        private string _Assigned;
        partial void OnGetAssigned(ref string value);
        partial void OnAssignedChanging(ref string value);
        partial void OnAssignedChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Amount
        {
            get
            {
                decimal? value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal? _Amount;
        partial void OnGetAmount(ref decimal? value);
        partial void OnAmountChanging(ref decimal? value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for ActivityType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ActivityType
        {
            get
            {
                string value = _ActivityType;
                OnGetActivityType(ref value);
                return value;
            }
            set
            {
                if (_ActivityType != value)
                {
                  OnActivityTypeChanging(ref value);
                  ReportPropertyChanging("ActivityType");
                  _ActivityType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ActivityType");
                  OnActivityTypeChanged();
              }
            }
        }
        private string _ActivityType;
        partial void OnGetActivityType(ref string value);
        partial void OnActivityTypeChanging(ref string value);
        partial void OnActivityTypeChanged();
    
        /// <summary>
        /// There are no comments for SupplierActStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SupplierActStatusId
        {
            get
            {
                int? value = _SupplierActStatusId;
                OnGetSupplierActStatusId(ref value);
                return value;
            }
            set
            {
                if (_SupplierActStatusId != value)
                {
                  OnSupplierActStatusIdChanging(ref value);
                  ReportPropertyChanging("SupplierActStatusId");
                  _SupplierActStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierActStatusId");
                  OnSupplierActStatusIdChanged();
              }
            }
        }
        private int? _SupplierActStatusId = 1;
        partial void OnGetSupplierActStatusId(ref int? value);
        partial void OnSupplierActStatusIdChanging(ref int? value);
        partial void OnSupplierActStatusIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierActActionCodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SupplierActActionCodeId
        {
            get
            {
                int? value = _SupplierActActionCodeId;
                OnGetSupplierActActionCodeId(ref value);
                return value;
            }
            set
            {
                if (_SupplierActActionCodeId != value)
                {
                  OnSupplierActActionCodeIdChanging(ref value);
                  ReportPropertyChanging("SupplierActActionCodeId");
                  _SupplierActActionCodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierActActionCodeId");
                  OnSupplierActActionCodeIdChanged();
              }
            }
        }
        private int? _SupplierActActionCodeId = 1;
        partial void OnGetSupplierActActionCodeId(ref int? value);
        partial void OnSupplierActActionCodeIdChanging(ref int? value);
        partial void OnSupplierActActionCodeIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierActActionStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierActActionStatusId
        {
            get
            {
                int value = _SupplierActActionStatusId;
                OnGetSupplierActActionStatusId(ref value);
                return value;
            }
            set
            {
                if (_SupplierActActionStatusId != value)
                {
                  OnSupplierActActionStatusIdChanging(ref value);
                  ReportPropertyChanging("SupplierActActionStatusId");
                  _SupplierActActionStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierActActionStatusId");
                  OnSupplierActActionStatusIdChanged();
              }
            }
        }
        private int _SupplierActActionStatusId = 1;
        partial void OnGetSupplierActActionStatusId(ref int value);
        partial void OnSupplierActActionStatusIdChanging(ref int value);
        partial void OnSupplierActActionStatusIdChanged();
    
        /// <summary>
        /// There are no comments for ProjName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProjName
        {
            get
            {
                string value = _ProjName;
                OnGetProjName(ref value);
                return value;
            }
            set
            {
                if (_ProjName != value)
                {
                  OnProjNameChanging(ref value);
                  ReportPropertyChanging("ProjName");
                  _ProjName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProjName");
                  OnProjNameChanged();
              }
            }
        }
        private string _ProjName;
        partial void OnGetProjName(ref string value);
        partial void OnProjNameChanging(ref string value);
        partial void OnProjNameChanged();
    
        /// <summary>
        /// There are no comments for Currency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Currency
        {
            get
            {
                string value = _Currency;
                OnGetCurrency(ref value);
                return value;
            }
            set
            {
                if (_Currency != value)
                {
                  OnCurrencyChanging(ref value);
                  ReportPropertyChanging("Currency");
                  _Currency = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Currency");
                  OnCurrencyChanged();
              }
            }
        }
        private string _Currency;
        partial void OnGetCurrency(ref string value);
        partial void OnCurrencyChanging(ref string value);
        partial void OnCurrencyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeadSupActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SalesLeadSupActivitySupplierActivity", "SalesLeadSupActivities")]
        public virtual EntityCollection<SalesLeadSupActivities> SalesLeadSupActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadSupActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SalesLeadSupActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadSupActivities>("DB_A0A0AE_ClientModel.FK_SalesLeadSupActivitySupplierActivity", "SalesLeadSupActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierActivity", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "Suppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierActStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierActStatusSupplierActivity", "SupplierActStatus")]
        public virtual SupplierActStatus SupplierActStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActStatus>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActStatus>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierActStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierActStatus> SupplierActStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActStatus>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierActStatus>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierActStatus>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierActivityTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierActivityTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierActivityTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierActivityTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        /// <param name="points">Initial value of Points.</param>
        public static SupplierActivityTypes CreateSupplierActivityTypes(int id, string type, int points)
        {
            SupplierActivityTypes supplierActivityTypes = new SupplierActivityTypes();
            supplierActivityTypes.Id = id;
            supplierActivityTypes.Type = type;
            supplierActivityTypes.Points = points;
            return supplierActivityTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for Points in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Points
        {
            get
            {
                int value = _Points;
                OnGetPoints(ref value);
                return value;
            }
            set
            {
                if (_Points != value)
                {
                  OnPointsChanging(ref value);
                  ReportPropertyChanging("Points");
                  _Points = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Points");
                  OnPointsChanged();
              }
            }
        }
        private int _Points;
        partial void OnGetPoints(ref int value);
        partial void OnPointsChanging(ref int value);
        partial void OnPointsChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierActStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierActStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierActStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierActStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        public static SupplierActStatus CreateSupplierActStatus(int id, string status)
        {
            SupplierActStatus supplierActStatus = new SupplierActStatus();
            supplierActStatus.Id = id;
            supplierActStatus.Status = status;
            return supplierActStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierActStatusSupplierActivity", "SupplierActivities")]
        public virtual EntityCollection<SupplierActivities> SupplierActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SupplierActStatusSupplierActivity", "SupplierActivities", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierContacts in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierContacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierContacts : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierContacts object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        public static SupplierContacts CreateSupplierContacts(int id, string name, int supplierId)
        {
            SupplierContacts supplierContacts = new SupplierContacts();
            supplierContacts.Id = id;
            supplierContacts.Name = name;
            supplierContacts.SupplierId = supplierId;
            return supplierContacts;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Mobile in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mobile
        {
            get
            {
                string value = _Mobile;
                OnGetMobile(ref value);
                return value;
            }
            set
            {
                if (_Mobile != value)
                {
                  OnMobileChanging(ref value);
                  ReportPropertyChanging("Mobile");
                  _Mobile = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mobile");
                  OnMobileChanged();
              }
            }
        }
        private string _Mobile;
        partial void OnGetMobile(ref string value);
        partial void OnMobileChanging(ref string value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// There are no comments for Landline in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Landline
        {
            get
            {
                string value = _Landline;
                OnGetLandline(ref value);
                return value;
            }
            set
            {
                if (_Landline != value)
                {
                  OnLandlineChanging(ref value);
                  ReportPropertyChanging("Landline");
                  _Landline = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Landline");
                  OnLandlineChanged();
              }
            }
        }
        private string _Landline;
        partial void OnGetLandline(ref string value);
        partial void OnLandlineChanging(ref string value);
        partial void OnLandlineChanged();
    
        /// <summary>
        /// There are no comments for SkypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SkypeId
        {
            get
            {
                string value = _SkypeId;
                OnGetSkypeId(ref value);
                return value;
            }
            set
            {
                if (_SkypeId != value)
                {
                  OnSkypeIdChanging(ref value);
                  ReportPropertyChanging("SkypeId");
                  _SkypeId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SkypeId");
                  OnSkypeIdChanged();
              }
            }
        }
        private string _SkypeId;
        partial void OnGetSkypeId(ref string value);
        partial void OnSkypeIdChanging(ref string value);
        partial void OnSkypeIdChanged();
    
        /// <summary>
        /// There are no comments for ViberId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ViberId
        {
            get
            {
                string value = _ViberId;
                OnGetViberId(ref value);
                return value;
            }
            set
            {
                if (_ViberId != value)
                {
                  OnViberIdChanging(ref value);
                  ReportPropertyChanging("ViberId");
                  _ViberId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ViberId");
                  OnViberIdChanged();
              }
            }
        }
        private string _ViberId;
        partial void OnGetViberId(ref string value);
        partial void OnViberIdChanging(ref string value);
        partial void OnViberIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for WhatsApp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WhatsApp
        {
            get
            {
                string value = _WhatsApp;
                OnGetWhatsApp(ref value);
                return value;
            }
            set
            {
                if (_WhatsApp != value)
                {
                  OnWhatsAppChanging(ref value);
                  ReportPropertyChanging("WhatsApp");
                  _WhatsApp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WhatsApp");
                  OnWhatsAppChanged();
              }
            }
        }
        private string _WhatsApp;
        partial void OnGetWhatsApp(ref string value);
        partial void OnWhatsAppChanging(ref string value);
        partial void OnWhatsAppChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for SupplierContactStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SupplierContactStatusId
        {
            get
            {
                int? value = _SupplierContactStatusId;
                OnGetSupplierContactStatusId(ref value);
                return value;
            }
            set
            {
                if (_SupplierContactStatusId != value)
                {
                  OnSupplierContactStatusIdChanging(ref value);
                  ReportPropertyChanging("SupplierContactStatusId");
                  _SupplierContactStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierContactStatusId");
                  OnSupplierContactStatusIdChanged();
              }
            }
        }
        private int? _SupplierContactStatusId;
        partial void OnGetSupplierContactStatusId(ref int? value);
        partial void OnSupplierContactStatusIdChanging(ref int? value);
        partial void OnSupplierContactStatusIdChanged();
    
        /// <summary>
        /// There are no comments for WeChat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WeChat
        {
            get
            {
                string value = _WeChat;
                OnGetWeChat(ref value);
                return value;
            }
            set
            {
                if (_WeChat != value)
                {
                  OnWeChatChanging(ref value);
                  ReportPropertyChanging("WeChat");
                  _WeChat = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WeChat");
                  OnWeChatChanged();
              }
            }
        }
        private string _WeChat;
        partial void OnGetWeChat(ref string value);
        partial void OnWeChatChanging(ref string value);
        partial void OnWeChatChanged();
    
        /// <summary>
        /// There are no comments for Position in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Position
        {
            get
            {
                string value = _Position;
                OnGetPosition(ref value);
                return value;
            }
            set
            {
                if (_Position != value)
                {
                  OnPositionChanging(ref value);
                  ReportPropertyChanging("Position");
                  _Position = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Position");
                  OnPositionChanged();
              }
            }
        }
        private string _Position;
        partial void OnGetPosition(ref string value);
        partial void OnPositionChanging(ref string value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// There are no comments for Department in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Department
        {
            get
            {
                string value = _Department;
                OnGetDepartment(ref value);
                return value;
            }
            set
            {
                if (_Department != value)
                {
                  OnDepartmentChanging(ref value);
                  ReportPropertyChanging("Department");
                  _Department = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Department");
                  OnDepartmentChanged();
              }
            }
        }
        private string _Department;
        partial void OnGetDepartment(ref string value);
        partial void OnDepartmentChanging(ref string value);
        partial void OnDepartmentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierContactStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierContactStatusSupplierContact", "SupplierContactStatus")]
        public virtual SupplierContactStatus SupplierContactStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierContactStatus>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContactStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierContactStatus>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContactStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierContactStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierContactStatus> SupplierContactStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierContactStatus>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContactStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierContactStatus>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContactStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierContactStatus>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContactStatus").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierContact", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "Suppliers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierContactStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierContactStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierContactStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierContactStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static SupplierContactStatus CreateSupplierContactStatus(int id, string name)
        {
            SupplierContactStatus supplierContactStatus = new SupplierContactStatus();
            supplierContactStatus.Id = id;
            supplierContactStatus.Name = name;
            return supplierContactStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierContacts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierContactStatusSupplierContact", "SupplierContacts")]
        public virtual EntityCollection<SupplierContacts> SupplierContacts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierContacts>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierContacts>("DB_A0A0AE_ClientModel.FK_SupplierContactStatusSupplierContact", "SupplierContacts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierDocuments in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierDocuments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierDocuments : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierDocuments object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        /// <param name="supDocumentId">Initial value of SupDocumentId.</param>
        public static SupplierDocuments CreateSupplierDocuments(int id, int supplierId, int supDocumentId)
        {
            SupplierDocuments supplierDocuments = new SupplierDocuments();
            supplierDocuments.Id = id;
            supplierDocuments.SupplierId = supplierId;
            supplierDocuments.SupDocumentId = supDocumentId;
            return supplierDocuments;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for SupDocumentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupDocumentId
        {
            get
            {
                int value = _SupDocumentId;
                OnGetSupDocumentId(ref value);
                return value;
            }
            set
            {
                if (_SupDocumentId != value)
                {
                  OnSupDocumentIdChanging(ref value);
                  ReportPropertyChanging("SupDocumentId");
                  _SupDocumentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupDocumentId");
                  OnSupDocumentIdChanged();
              }
            }
        }
        private int _SupDocumentId;
        partial void OnGetSupDocumentId(ref int value);
        partial void OnSupDocumentIdChanging(ref int value);
        partial void OnSupDocumentIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierDocument", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "Suppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupDocuments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupDocumentSupplierDocument", "SupDocuments")]
        public virtual SupDocuments SupDocuments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupDocuments").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupDocuments").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupDocuments in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupDocuments> SupDocumentsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupDocuments");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupDocuments", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupDocuments>("DB_A0A0AE_ClientModel.FK_SupDocumentSupplierDocument", "SupDocuments").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierInvItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierInvItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierInvItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierInvItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        public static SupplierInvItems CreateSupplierInvItems(int id, int supplierId, int invItemId)
        {
            SupplierInvItems supplierInvItems = new SupplierInvItems();
            supplierInvItems.Id = id;
            supplierInvItems.SupplierId = supplierId;
            supplierInvItems.InvItemId = invItemId;
            return supplierInvItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierInvItem", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "Suppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSupplierInvItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierInvItem", "InvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierItemRates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierInvItemSupplierItemRate", "SupplierItemRates")]
        public virtual EntityCollection<SupplierItemRates> SupplierItemRates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierItemRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierItemRates", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierItemRates in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierItemRates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierItemRates : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierItemRates object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="supplierInvItemId">Initial value of SupplierInvItemId.</param>
        /// <param name="itemRate">Initial value of ItemRate.</param>
        /// <param name="supplierUnitId">Initial value of SupplierUnitId.</param>
        /// <param name="dtValidFrom">Initial value of DtValidFrom.</param>
        /// <param name="dtValidTo">Initial value of DtValidTo.</param>
        public static SupplierItemRates CreateSupplierItemRates(int id, int supplierInvItemId, string itemRate, int supplierUnitId, string dtValidFrom, string dtValidTo)
        {
            SupplierItemRates supplierItemRates = new SupplierItemRates();
            supplierItemRates.Id = id;
            supplierItemRates.SupplierInvItemId = supplierInvItemId;
            supplierItemRates.ItemRate = itemRate;
            supplierItemRates.SupplierUnitId = supplierUnitId;
            supplierItemRates.DtValidFrom = dtValidFrom;
            supplierItemRates.DtValidTo = dtValidTo;
            return supplierItemRates;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierInvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierInvItemId
        {
            get
            {
                int value = _SupplierInvItemId;
                OnGetSupplierInvItemId(ref value);
                return value;
            }
            set
            {
                if (_SupplierInvItemId != value)
                {
                  OnSupplierInvItemIdChanging(ref value);
                  ReportPropertyChanging("SupplierInvItemId");
                  _SupplierInvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierInvItemId");
                  OnSupplierInvItemIdChanged();
              }
            }
        }
        private int _SupplierInvItemId;
        partial void OnGetSupplierInvItemId(ref int value);
        partial void OnSupplierInvItemIdChanging(ref int value);
        partial void OnSupplierInvItemIdChanged();
    
        /// <summary>
        /// There are no comments for ItemRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ItemRate
        {
            get
            {
                string value = _ItemRate;
                OnGetItemRate(ref value);
                return value;
            }
            set
            {
                if (_ItemRate != value)
                {
                  OnItemRateChanging(ref value);
                  ReportPropertyChanging("ItemRate");
                  _ItemRate = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ItemRate");
                  OnItemRateChanged();
              }
            }
        }
        private string _ItemRate;
        partial void OnGetItemRate(ref string value);
        partial void OnItemRateChanging(ref string value);
        partial void OnItemRateChanged();
    
        /// <summary>
        /// There are no comments for SupplierUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierUnitId
        {
            get
            {
                int value = _SupplierUnitId;
                OnGetSupplierUnitId(ref value);
                return value;
            }
            set
            {
                if (_SupplierUnitId != value)
                {
                  OnSupplierUnitIdChanging(ref value);
                  ReportPropertyChanging("SupplierUnitId");
                  _SupplierUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierUnitId");
                  OnSupplierUnitIdChanged();
              }
            }
        }
        private int _SupplierUnitId;
        partial void OnGetSupplierUnitId(ref int value);
        partial void OnSupplierUnitIdChanging(ref int value);
        partial void OnSupplierUnitIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for DtValidFrom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtValidFrom
        {
            get
            {
                string value = _DtValidFrom;
                OnGetDtValidFrom(ref value);
                return value;
            }
            set
            {
                if (_DtValidFrom != value)
                {
                  OnDtValidFromChanging(ref value);
                  ReportPropertyChanging("DtValidFrom");
                  _DtValidFrom = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtValidFrom");
                  OnDtValidFromChanged();
              }
            }
        }
        private string _DtValidFrom;
        partial void OnGetDtValidFrom(ref string value);
        partial void OnDtValidFromChanging(ref string value);
        partial void OnDtValidFromChanged();
    
        /// <summary>
        /// There are no comments for DtValidTo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DtValidTo
        {
            get
            {
                string value = _DtValidTo;
                OnGetDtValidTo(ref value);
                return value;
            }
            set
            {
                if (_DtValidTo != value)
                {
                  OnDtValidToChanging(ref value);
                  ReportPropertyChanging("DtValidTo");
                  _DtValidTo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DtValidTo");
                  OnDtValidToChanged();
              }
            }
        }
        private string _DtValidTo;
        partial void OnGetDtValidTo(ref string value);
        partial void OnDtValidToChanging(ref string value);
        partial void OnDtValidToChanged();
    
        /// <summary>
        /// There are no comments for Particulars in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Particulars
        {
            get
            {
                string value = _Particulars;
                OnGetParticulars(ref value);
                return value;
            }
            set
            {
                if (_Particulars != value)
                {
                  OnParticularsChanging(ref value);
                  ReportPropertyChanging("Particulars");
                  _Particulars = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Particulars");
                  OnParticularsChanged();
              }
            }
        }
        private string _Particulars;
        partial void OnGetParticulars(ref string value);
        partial void OnParticularsChanging(ref string value);
        partial void OnParticularsChanged();
    
        /// <summary>
        /// There are no comments for By in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string By
        {
            get
            {
                string value = _By;
                OnGetBy(ref value);
                return value;
            }
            set
            {
                if (_By != value)
                {
                  OnByChanging(ref value);
                  ReportPropertyChanging("By");
                  _By = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("By");
                  OnByChanged();
              }
            }
        }
        private string _By;
        partial void OnGetBy(ref string value);
        partial void OnByChanging(ref string value);
        partial void OnByChanged();
    
        /// <summary>
        /// There are no comments for ProcBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProcBy
        {
            get
            {
                string value = _ProcBy;
                OnGetProcBy(ref value);
                return value;
            }
            set
            {
                if (_ProcBy != value)
                {
                  OnProcByChanging(ref value);
                  ReportPropertyChanging("ProcBy");
                  _ProcBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProcBy");
                  OnProcByChanged();
              }
            }
        }
        private string _ProcBy;
        partial void OnGetProcBy(ref string value);
        partial void OnProcByChanging(ref string value);
        partial void OnProcByChanged();
    
        /// <summary>
        /// There are no comments for Material in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Material
        {
            get
            {
                string value = _Material;
                OnGetMaterial(ref value);
                return value;
            }
            set
            {
                if (_Material != value)
                {
                  OnMaterialChanging(ref value);
                  ReportPropertyChanging("Material");
                  _Material = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Material");
                  OnMaterialChanged();
              }
            }
        }
        private string _Material;
        partial void OnGetMaterial(ref string value);
        partial void OnMaterialChanging(ref string value);
        partial void OnMaterialChanged();
    
        /// <summary>
        /// There are no comments for TradeTerm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TradeTerm
        {
            get
            {
                string value = _TradeTerm;
                OnGetTradeTerm(ref value);
                return value;
            }
            set
            {
                if (_TradeTerm != value)
                {
                  OnTradeTermChanging(ref value);
                  ReportPropertyChanging("TradeTerm");
                  _TradeTerm = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TradeTerm");
                  OnTradeTermChanged();
              }
            }
        }
        private string _TradeTerm;
        partial void OnGetTradeTerm(ref string value);
        partial void OnTradeTermChanging(ref string value);
        partial void OnTradeTermChanged();
    
        /// <summary>
        /// There are no comments for Tolerance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tolerance
        {
            get
            {
                string value = _Tolerance;
                OnGetTolerance(ref value);
                return value;
            }
            set
            {
                if (_Tolerance != value)
                {
                  OnToleranceChanging(ref value);
                  ReportPropertyChanging("Tolerance");
                  _Tolerance = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tolerance");
                  OnToleranceChanged();
              }
            }
        }
        private string _Tolerance;
        partial void OnGetTolerance(ref string value);
        partial void OnToleranceChanging(ref string value);
        partial void OnToleranceChanged();
    
        /// <summary>
        /// There are no comments for DtEntered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DtEntered
        {
            get
            {
                string value = _DtEntered;
                OnGetDtEntered(ref value);
                return value;
            }
            set
            {
                if (_DtEntered != value)
                {
                  OnDtEnteredChanging(ref value);
                  ReportPropertyChanging("DtEntered");
                  _DtEntered = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DtEntered");
                  OnDtEnteredChanged();
              }
            }
        }
        private string _DtEntered;
        partial void OnGetDtEntered(ref string value);
        partial void OnDtEnteredChanging(ref string value);
        partial void OnDtEnteredChanged();
    
        /// <summary>
        /// There are no comments for Origin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Origin
        {
            get
            {
                string value = _Origin;
                OnGetOrigin(ref value);
                return value;
            }
            set
            {
                if (_Origin != value)
                {
                  OnOriginChanging(ref value);
                  ReportPropertyChanging("Origin");
                  _Origin = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Origin");
                  OnOriginChanged();
              }
            }
        }
        private string _Origin;
        partial void OnGetOrigin(ref string value);
        partial void OnOriginChanging(ref string value);
        partial void OnOriginChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesLeadQuotedItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierItemRateSalesLeadQuotedItem", "SalesLeadQuotedItems")]
        public virtual EntityCollection<SalesLeadQuotedItems> SalesLeadQuotedItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesLeadQuotedItems>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SalesLeadQuotedItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesLeadQuotedItems>("DB_A0A0AE_ClientModel.FK_SupplierItemRateSalesLeadQuotedItem", "SalesLeadQuotedItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierInvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierInvItemSupplierItemRate", "SupplierInvItems")]
        public virtual SupplierInvItems SupplierInvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierInvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierInvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierInvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierInvItems> SupplierInvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierInvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierInvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierInvItemSupplierItemRate", "SupplierInvItems").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierUnits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierUnitSupplierItemRate", "SupplierUnits")]
        public virtual SupplierUnits SupplierUnits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierUnits>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierUnits>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierUnits").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierUnits in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierUnits> SupplierUnitsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierUnits>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierUnits");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierUnits>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierUnits", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierUnits>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierUnits").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        public static SupplierItems CreateSupplierItems(int id, string description, int supplierId)
        {
            SupplierItems supplierItems = new SupplierItems();
            supplierItems.Id = id;
            supplierItems.Description = description;
            supplierItems.SupplierId = supplierId;
            return supplierItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for InCharge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InCharge
        {
            get
            {
                string value = _InCharge;
                OnGetInCharge(ref value);
                return value;
            }
            set
            {
                if (_InCharge != value)
                {
                  OnInChargeChanging(ref value);
                  ReportPropertyChanging("InCharge");
                  _InCharge = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InCharge");
                  OnInChargeChanged();
              }
            }
        }
        private string _InCharge;
        partial void OnGetInCharge(ref string value);
        partial void OnInChargeChanging(ref string value);
        partial void OnInChargeChanged();
    
        /// <summary>
        /// There are no comments for Tel1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tel1
        {
            get
            {
                string value = _Tel1;
                OnGetTel1(ref value);
                return value;
            }
            set
            {
                if (_Tel1 != value)
                {
                  OnTel1Changing(ref value);
                  ReportPropertyChanging("Tel1");
                  _Tel1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tel1");
                  OnTel1Changed();
              }
            }
        }
        private string _Tel1;
        partial void OnGetTel1(ref string value);
        partial void OnTel1Changing(ref string value);
        partial void OnTel1Changed();
    
        /// <summary>
        /// There are no comments for Tel2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tel2
        {
            get
            {
                string value = _Tel2;
                OnGetTel2(ref value);
                return value;
            }
            set
            {
                if (_Tel2 != value)
                {
                  OnTel2Changing(ref value);
                  ReportPropertyChanging("Tel2");
                  _Tel2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tel2");
                  OnTel2Changed();
              }
            }
        }
        private string _Tel2;
        partial void OnGetTel2(ref string value);
        partial void OnTel2Changing(ref string value);
        partial void OnTel2Changed();
    
        /// <summary>
        /// There are no comments for Tel3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tel3
        {
            get
            {
                string value = _Tel3;
                OnGetTel3(ref value);
                return value;
            }
            set
            {
                if (_Tel3 != value)
                {
                  OnTel3Changing(ref value);
                  ReportPropertyChanging("Tel3");
                  _Tel3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tel3");
                  OnTel3Changed();
              }
            }
        }
        private string _Tel3;
        partial void OnGetTel3(ref string value);
        partial void OnTel3Changing(ref string value);
        partial void OnTel3Changed();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierItemJobServices", "JobServices")]
        public virtual EntityCollection<JobServices> JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "JobServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_SupplierItemJobServices", "JobServices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierItem", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "Suppliers").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierPoDtls in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierPoDtls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierPoDtls : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierPoDtls object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="supplierPoHdrId">Initial value of SupplierPoHdrId.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="jobServicesId">Initial value of JobServicesId.</param>
        public static SupplierPoDtls CreateSupplierPoDtls(int id, int supplierPoHdrId, decimal amount, int jobServicesId)
        {
            SupplierPoDtls supplierPoDtls = new SupplierPoDtls();
            supplierPoDtls.Id = id;
            supplierPoDtls.SupplierPoHdrId = supplierPoHdrId;
            supplierPoDtls.Amount = amount;
            supplierPoDtls.JobServicesId = jobServicesId;
            return supplierPoDtls;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierPoHdrId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierPoHdrId
        {
            get
            {
                int value = _SupplierPoHdrId;
                OnGetSupplierPoHdrId(ref value);
                return value;
            }
            set
            {
                if (_SupplierPoHdrId != value)
                {
                  OnSupplierPoHdrIdChanging(ref value);
                  ReportPropertyChanging("SupplierPoHdrId");
                  _SupplierPoHdrId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierPoHdrId");
                  OnSupplierPoHdrIdChanged();
              }
            }
        }
        private int _SupplierPoHdrId;
        partial void OnGetSupplierPoHdrId(ref int value);
        partial void OnSupplierPoHdrIdChanging(ref int value);
        partial void OnSupplierPoHdrIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Amount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Amount
        {
            get
            {
                decimal value = _Amount;
                OnGetAmount(ref value);
                return value;
            }
            set
            {
                if (_Amount != value)
                {
                  OnAmountChanging(ref value);
                  ReportPropertyChanging("Amount");
                  _Amount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Amount");
                  OnAmountChanged();
              }
            }
        }
        private decimal _Amount;
        partial void OnGetAmount(ref decimal value);
        partial void OnAmountChanging(ref decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// There are no comments for JobServicesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JobServicesId
        {
            get
            {
                int value = _JobServicesId;
                OnGetJobServicesId(ref value);
                return value;
            }
            set
            {
                if (_JobServicesId != value)
                {
                  OnJobServicesIdChanging(ref value);
                  ReportPropertyChanging("JobServicesId");
                  _JobServicesId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JobServicesId");
                  OnJobServicesIdChanged();
              }
            }
        }
        private int _JobServicesId;
        partial void OnGetJobServicesId(ref int value);
        partial void OnJobServicesIdChanging(ref int value);
        partial void OnJobServicesIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs")]
        public virtual SupplierPoHdrs SupplierPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoHdrs in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierPoHdrs> SupplierPoHdrsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoHdrs").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_JobServicesSupplierPoDtl", "JobServices")]
        public virtual JobServices JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "JobServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "JobServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobServices> JobServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "JobServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "JobServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JobServices>("DB_A0A0AE_ClientModel.FK_JobServicesSupplierPoDtl", "JobServices").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoDtlSupplierPoItem", "SupplierPoItems")]
        public virtual EntityCollection<SupplierPoItems> SupplierPoItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierPoItems>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierPoItems>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierPoHdrs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierPoHdrs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierPoHdrs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierPoHdrs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="poDate">Initial value of PoDate.</param>
        /// <param name="supplierId">Initial value of SupplierId.</param>
        /// <param name="supplierPoStatusId">Initial value of SupplierPoStatusId.</param>
        /// <param name="requestBy">Initial value of RequestBy.</param>
        /// <param name="dtRequest">Initial value of DtRequest.</param>
        public static SupplierPoHdrs CreateSupplierPoHdrs(int id, global::System.DateTime poDate, int supplierId, int supplierPoStatusId, string requestBy, global::System.DateTime dtRequest)
        {
            SupplierPoHdrs supplierPoHdrs = new SupplierPoHdrs();
            supplierPoHdrs.Id = id;
            supplierPoHdrs.PoDate = poDate;
            supplierPoHdrs.SupplierId = supplierId;
            supplierPoHdrs.SupplierPoStatusId = supplierPoStatusId;
            supplierPoHdrs.RequestBy = requestBy;
            supplierPoHdrs.DtRequest = dtRequest;
            return supplierPoHdrs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for PoDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PoDate
        {
            get
            {
                global::System.DateTime value = _PoDate;
                OnGetPoDate(ref value);
                return value;
            }
            set
            {
                if (_PoDate != value)
                {
                  OnPoDateChanging(ref value);
                  ReportPropertyChanging("PoDate");
                  _PoDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PoDate");
                  OnPoDateChanged();
              }
            }
        }
        private global::System.DateTime _PoDate;
        partial void OnGetPoDate(ref global::System.DateTime value);
        partial void OnPoDateChanging(ref global::System.DateTime value);
        partial void OnPoDateChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierId
        {
            get
            {
                int value = _SupplierId;
                OnGetSupplierId(ref value);
                return value;
            }
            set
            {
                if (_SupplierId != value)
                {
                  OnSupplierIdChanging(ref value);
                  ReportPropertyChanging("SupplierId");
                  _SupplierId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierId");
                  OnSupplierIdChanged();
              }
            }
        }
        private int _SupplierId;
        partial void OnGetSupplierId(ref int value);
        partial void OnSupplierIdChanging(ref int value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierPoStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierPoStatusId
        {
            get
            {
                int value = _SupplierPoStatusId;
                OnGetSupplierPoStatusId(ref value);
                return value;
            }
            set
            {
                if (_SupplierPoStatusId != value)
                {
                  OnSupplierPoStatusIdChanging(ref value);
                  ReportPropertyChanging("SupplierPoStatusId");
                  _SupplierPoStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierPoStatusId");
                  OnSupplierPoStatusIdChanged();
              }
            }
        }
        private int _SupplierPoStatusId;
        partial void OnGetSupplierPoStatusId(ref int value);
        partial void OnSupplierPoStatusIdChanging(ref int value);
        partial void OnSupplierPoStatusIdChanged();
    
        /// <summary>
        /// There are no comments for RequestBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RequestBy
        {
            get
            {
                string value = _RequestBy;
                OnGetRequestBy(ref value);
                return value;
            }
            set
            {
                if (_RequestBy != value)
                {
                  OnRequestByChanging(ref value);
                  ReportPropertyChanging("RequestBy");
                  _RequestBy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RequestBy");
                  OnRequestByChanged();
              }
            }
        }
        private string _RequestBy;
        partial void OnGetRequestBy(ref string value);
        partial void OnRequestByChanging(ref string value);
        partial void OnRequestByChanged();
    
        /// <summary>
        /// There are no comments for DtRequest in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DtRequest
        {
            get
            {
                global::System.DateTime value = _DtRequest;
                OnGetDtRequest(ref value);
                return value;
            }
            set
            {
                if (_DtRequest != value)
                {
                  OnDtRequestChanging(ref value);
                  ReportPropertyChanging("DtRequest");
                  _DtRequest = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtRequest");
                  OnDtRequestChanged();
              }
            }
        }
        private global::System.DateTime _DtRequest;
        partial void OnGetDtRequest(ref global::System.DateTime value);
        partial void OnDtRequestChanging(ref global::System.DateTime value);
        partial void OnDtRequestChanged();
    
        /// <summary>
        /// There are no comments for ApprovedBy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ApprovedBy
        {
            get
            {
                string value = _ApprovedBy;
                OnGetApprovedBy(ref value);
                return value;
            }
            set
            {
                if (_ApprovedBy != value)
                {
                  OnApprovedByChanging(ref value);
                  ReportPropertyChanging("ApprovedBy");
                  _ApprovedBy = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApprovedBy");
                  OnApprovedByChanged();
              }
            }
        }
        private string _ApprovedBy;
        partial void OnGetApprovedBy(ref string value);
        partial void OnApprovedByChanging(ref string value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// There are no comments for DtApproved in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DtApproved
        {
            get
            {
                global::System.DateTime? value = _DtApproved;
                OnGetDtApproved(ref value);
                return value;
            }
            set
            {
                if (_DtApproved != value)
                {
                  OnDtApprovedChanging(ref value);
                  ReportPropertyChanging("DtApproved");
                  _DtApproved = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DtApproved");
                  OnDtApprovedChanged();
              }
            }
        }
        private global::System.DateTime? _DtApproved;
        partial void OnGetDtApproved(ref global::System.DateTime? value);
        partial void OnDtApprovedChanging(ref global::System.DateTime? value);
        partial void OnDtApprovedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierPoDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoHdrSupplierPoDtl", "SupplierPoDtls")]
        public virtual EntityCollection<SupplierPoDtls> SupplierPoDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoHdrSupplierPoDtl", "SupplierPoDtls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierPoHdr", "Suppliers")]
        public virtual Suppliers Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "Suppliers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suppliers> SuppliersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "Suppliers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "Suppliers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "Suppliers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus")]
        public virtual SupplierPoStatus SupplierPoStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoStatus>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoStatus>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierPoStatus> SupplierPoStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoStatus>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierPoStatus>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoStatus>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierPoItems in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierPoItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierPoItems : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierPoItems object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="supplierPoDtlId">Initial value of SupplierPoDtlId.</param>
        /// <param name="invItemId">Initial value of InvItemId.</param>
        public static SupplierPoItems CreateSupplierPoItems(int id, int supplierPoDtlId, int invItemId)
        {
            SupplierPoItems supplierPoItems = new SupplierPoItems();
            supplierPoItems.Id = id;
            supplierPoItems.SupplierPoDtlId = supplierPoDtlId;
            supplierPoItems.InvItemId = invItemId;
            return supplierPoItems;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierPoDtlId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierPoDtlId
        {
            get
            {
                int value = _SupplierPoDtlId;
                OnGetSupplierPoDtlId(ref value);
                return value;
            }
            set
            {
                if (_SupplierPoDtlId != value)
                {
                  OnSupplierPoDtlIdChanging(ref value);
                  ReportPropertyChanging("SupplierPoDtlId");
                  _SupplierPoDtlId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierPoDtlId");
                  OnSupplierPoDtlIdChanged();
              }
            }
        }
        private int _SupplierPoDtlId;
        partial void OnGetSupplierPoDtlId(ref int value);
        partial void OnSupplierPoDtlIdChanging(ref int value);
        partial void OnSupplierPoDtlIdChanged();
    
        /// <summary>
        /// There are no comments for InvItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvItemId
        {
            get
            {
                int value = _InvItemId;
                OnGetInvItemId(ref value);
                return value;
            }
            set
            {
                if (_InvItemId != value)
                {
                  OnInvItemIdChanging(ref value);
                  ReportPropertyChanging("InvItemId");
                  _InvItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvItemId");
                  OnInvItemIdChanged();
              }
            }
        }
        private int _InvItemId;
        partial void OnGetInvItemId(ref int value);
        partial void OnInvItemIdChanging(ref int value);
        partial void OnInvItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierPoDtls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls")]
        public virtual SupplierPoDtls SupplierPoDtls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoDtls in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierPoDtls> SupplierPoDtlsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierPoDtls>("DB_A0A0AE_ClientModel.FK_SupplierPoDtlSupplierPoItem", "SupplierPoDtls").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_InvItemSupplierPoItem", "InvItems")]
        public virtual InvItems InvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "InvItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "InvItems").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvItems in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvItems> InvItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "InvItems");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "InvItems", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvItems>("DB_A0A0AE_ClientModel.FK_InvItemSupplierPoItem", "InvItems").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierPoStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierPoStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierPoStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierPoStatus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="orderNo">Initial value of OrderNo.</param>
        public static SupplierPoStatus CreateSupplierPoStatus(int id, string status, int orderNo)
        {
            SupplierPoStatus supplierPoStatus = new SupplierPoStatus();
            supplierPoStatus.Id = id;
            supplierPoStatus.Status = status;
            supplierPoStatus.OrderNo = orderNo;
            return supplierPoStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for OrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderNo
        {
            get
            {
                int value = _OrderNo;
                OnGetOrderNo(ref value);
                return value;
            }
            set
            {
                if (_OrderNo != value)
                {
                  OnOrderNoChanging(ref value);
                  ReportPropertyChanging("OrderNo");
                  _OrderNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderNo");
                  OnOrderNoChanged();
              }
            }
        }
        private int _OrderNo;
        partial void OnGetOrderNo(ref int value);
        partial void OnOrderNoChanging(ref int value);
        partial void OnOrderNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierPoStatusSupplierPoHdr", "SupplierPoHdrs")]
        public virtual EntityCollection<SupplierPoHdrs> SupplierPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierPoStatusSupplierPoHdr", "SupplierPoHdrs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Suppliers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Suppliers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Suppliers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Suppliers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="cityId">Initial value of CityId.</param>
        /// <param name="supplierTypeId">Initial value of SupplierTypeId.</param>
        /// <param name="countryId">Initial value of CountryId.</param>
        public static Suppliers CreateSuppliers(int id, string name, int cityId, int supplierTypeId, int countryId)
        {
            Suppliers suppliers = new Suppliers();
            suppliers.Id = id;
            suppliers.Name = name;
            suppliers.CityId = cityId;
            suppliers.SupplierTypeId = supplierTypeId;
            suppliers.CountryId = countryId;
            return suppliers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Contact1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact1
        {
            get
            {
                string value = _Contact1;
                OnGetContact1(ref value);
                return value;
            }
            set
            {
                if (_Contact1 != value)
                {
                  OnContact1Changing(ref value);
                  ReportPropertyChanging("Contact1");
                  _Contact1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact1");
                  OnContact1Changed();
              }
            }
        }
        private string _Contact1;
        partial void OnGetContact1(ref string value);
        partial void OnContact1Changing(ref string value);
        partial void OnContact1Changed();
    
        /// <summary>
        /// There are no comments for Contact2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact2
        {
            get
            {
                string value = _Contact2;
                OnGetContact2(ref value);
                return value;
            }
            set
            {
                if (_Contact2 != value)
                {
                  OnContact2Changing(ref value);
                  ReportPropertyChanging("Contact2");
                  _Contact2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact2");
                  OnContact2Changed();
              }
            }
        }
        private string _Contact2;
        partial void OnGetContact2(ref string value);
        partial void OnContact2Changing(ref string value);
        partial void OnContact2Changed();
    
        /// <summary>
        /// There are no comments for Contact3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact3
        {
            get
            {
                string value = _Contact3;
                OnGetContact3(ref value);
                return value;
            }
            set
            {
                if (_Contact3 != value)
                {
                  OnContact3Changing(ref value);
                  ReportPropertyChanging("Contact3");
                  _Contact3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact3");
                  OnContact3Changed();
              }
            }
        }
        private string _Contact3;
        partial void OnGetContact3(ref string value);
        partial void OnContact3Changing(ref string value);
        partial void OnContact3Changed();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Details
        {
            get
            {
                string value = _Details;
                OnGetDetails(ref value);
                return value;
            }
            set
            {
                if (_Details != value)
                {
                  OnDetailsChanging(ref value);
                  ReportPropertyChanging("Details");
                  _Details = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Details");
                  OnDetailsChanged();
              }
            }
        }
        private string _Details;
        partial void OnGetDetails(ref string value);
        partial void OnDetailsChanging(ref string value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// There are no comments for CityId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CityId
        {
            get
            {
                int value = _CityId;
                OnGetCityId(ref value);
                return value;
            }
            set
            {
                if (_CityId != value)
                {
                  OnCityIdChanging(ref value);
                  ReportPropertyChanging("CityId");
                  _CityId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CityId");
                  OnCityIdChanged();
              }
            }
        }
        private int _CityId;
        partial void OnGetCityId(ref int value);
        partial void OnCityIdChanging(ref int value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// There are no comments for SupplierTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SupplierTypeId
        {
            get
            {
                int value = _SupplierTypeId;
                OnGetSupplierTypeId(ref value);
                return value;
            }
            set
            {
                if (_SupplierTypeId != value)
                {
                  OnSupplierTypeIdChanging(ref value);
                  ReportPropertyChanging("SupplierTypeId");
                  _SupplierTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SupplierTypeId");
                  OnSupplierTypeIdChanged();
              }
            }
        }
        private int _SupplierTypeId;
        partial void OnGetSupplierTypeId(ref int value);
        partial void OnSupplierTypeIdChanging(ref int value);
        partial void OnSupplierTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for Website in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Website
        {
            get
            {
                string value = _Website;
                OnGetWebsite(ref value);
                return value;
            }
            set
            {
                if (_Website != value)
                {
                  OnWebsiteChanging(ref value);
                  ReportPropertyChanging("Website");
                  _Website = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Website");
                  OnWebsiteChanged();
              }
            }
        }
        private string _Website;
        partial void OnGetWebsite(ref string value);
        partial void OnWebsiteChanging(ref string value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Address
        {
            get
            {
                string value = _Address;
                OnGetAddress(ref value);
                return value;
            }
            set
            {
                if (_Address != value)
                {
                  OnAddressChanging(ref value);
                  ReportPropertyChanging("Address");
                  _Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Address");
                  OnAddressChanged();
              }
            }
        }
        private string _Address;
        partial void OnGetAddress(ref string value);
        partial void OnAddressChanging(ref string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// There are no comments for CountryName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CountryName
        {
            get
            {
                string value = _CountryName;
                OnGetCountryName(ref value);
                return value;
            }
            set
            {
                if (_CountryName != value)
                {
                  OnCountryNameChanging(ref value);
                  ReportPropertyChanging("CountryName");
                  _CountryName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CountryName");
                  OnCountryNameChanged();
              }
            }
        }
        private string _CountryName;
        partial void OnGetCountryName(ref string value);
        partial void OnCountryNameChanging(ref string value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// There are no comments for CountryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CountryId
        {
            get
            {
                int value = _CountryId;
                OnGetCountryId(ref value);
                return value;
            }
            set
            {
                if (_CountryId != value)
                {
                  OnCountryIdChanging(ref value);
                  ReportPropertyChanging("CountryId");
                  _CountryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CountryId");
                  OnCountryIdChanged();
              }
            }
        }
        private int _CountryId = 175;
        partial void OnGetCountryId(ref int value);
        partial void OnCountryIdChanging(ref int value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierJobSupplier", "JobServices")]
        public virtual EntityCollection<JobServices> JobServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "JobServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobServices>("DB_A0A0AE_ClientModel.FK_SupplierJobSupplier", "JobServices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierActivities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierActivity", "SupplierActivities")]
        public virtual EntityCollection<SupplierActivities> SupplierActivities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "SupplierActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierActivities>("DB_A0A0AE_ClientModel.FK_SupplierSupplierActivity", "SupplierActivities", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierContacts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierContact", "SupplierContacts")]
        public virtual EntityCollection<SupplierContacts> SupplierContacts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierContacts>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "SupplierContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierContacts>("DB_A0A0AE_ClientModel.FK_SupplierSupplierContact", "SupplierContacts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierDocuments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierDocument", "SupplierDocuments")]
        public virtual EntityCollection<SupplierDocuments> SupplierDocuments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierDocuments>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "SupplierDocuments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierDocuments>("DB_A0A0AE_ClientModel.FK_SupplierSupplierDocument", "SupplierDocuments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierInvItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierInvItem", "SupplierInvItems")]
        public virtual EntityCollection<SupplierInvItems> SupplierInvItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "SupplierInvItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierInvItems>("DB_A0A0AE_ClientModel.FK_SupplierSupplierInvItem", "SupplierInvItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierItem", "SupplierItems")]
        public virtual EntityCollection<SupplierItems> SupplierItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "SupplierItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierItems>("DB_A0A0AE_ClientModel.FK_SupplierSupplierItem", "SupplierItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierPoHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierSupplierPoHdr", "SupplierPoHdrs")]
        public virtual EntityCollection<SupplierPoHdrs> SupplierPoHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "SupplierPoHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierPoHdrs>("DB_A0A0AE_ClientModel.FK_SupplierSupplierPoHdr", "SupplierPoHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CitySupplier", "Cities")]
        public virtual Cities Cities
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Cities").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Cities");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Cities", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Cities>("DB_A0A0AE_ClientModel.FK_CitySupplier", "Cities").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierTypeSupplier", "SupplierTypes")]
        public virtual SupplierTypes SupplierTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierTypes>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "SupplierTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierTypes>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "SupplierTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SupplierTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupplierTypes> SupplierTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierTypes>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "SupplierTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SupplierTypes>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "SupplierTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SupplierTypes>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "SupplierTypes").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="description">Initial value of Description.</param>
        public static SupplierTypes CreateSupplierTypes(int id, string description)
        {
            SupplierTypes supplierTypes = new SupplierTypes();
            supplierTypes.Id = id;
            supplierTypes.Description = description;
            return supplierTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Suppliers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierTypeSupplier", "Suppliers")]
        public virtual EntityCollection<Suppliers> Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Suppliers>("DB_A0A0AE_ClientModel.FK_SupplierTypeSupplier", "Suppliers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SupplierUnits in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SupplierUnits")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierUnits : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SupplierUnits object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="unit">Initial value of Unit.</param>
        public static SupplierUnits CreateSupplierUnits(int id, string unit)
        {
            SupplierUnits supplierUnits = new SupplierUnits();
            supplierUnits.Id = id;
            supplierUnits.Unit = unit;
            return supplierUnits;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Unit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Unit
        {
            get
            {
                string value = _Unit;
                OnGetUnit(ref value);
                return value;
            }
            set
            {
                if (_Unit != value)
                {
                  OnUnitChanging(ref value);
                  ReportPropertyChanging("Unit");
                  _Unit = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Unit");
                  OnUnitChanged();
              }
            }
        }
        private string _Unit;
        partial void OnGetUnit(ref string value);
        partial void OnUnitChanging(ref string value);
        partial void OnUnitChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SupplierItemRates in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SupplierUnitSupplierItemRate", "SupplierItemRates")]
        public virtual EntityCollection<SupplierItemRates> SupplierItemRates
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierItemRates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SupplierItemRates>("DB_A0A0AE_ClientModel.FK_SupplierUnitSupplierItemRate", "SupplierItemRates", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysAccessRoles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysAccessRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysAccessRoles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysAccessRoles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="roleId">Initial value of RoleId.</param>
        /// <param name="sysMenuId">Initial value of SysMenuId.</param>
        public static SysAccessRoles CreateSysAccessRoles(int id, string roleId, int sysMenuId)
        {
            SysAccessRoles sysAccessRoles = new SysAccessRoles();
            sysAccessRoles.Id = id;
            sysAccessRoles.RoleId = roleId;
            sysAccessRoles.SysMenuId = sysMenuId;
            return sysAccessRoles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RoleId
        {
            get
            {
                string value = _RoleId;
                OnGetRoleId(ref value);
                return value;
            }
            set
            {
                if (_RoleId != value)
                {
                  OnRoleIdChanging(ref value);
                  ReportPropertyChanging("RoleId");
                  _RoleId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RoleId");
                  OnRoleIdChanged();
              }
            }
        }
        private string _RoleId;
        partial void OnGetRoleId(ref string value);
        partial void OnRoleIdChanging(ref string value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// There are no comments for SysMenuId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysMenuId
        {
            get
            {
                int value = _SysMenuId;
                OnGetSysMenuId(ref value);
                return value;
            }
            set
            {
                if (_SysMenuId != value)
                {
                  OnSysMenuIdChanging(ref value);
                  ReportPropertyChanging("SysMenuId");
                  _SysMenuId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysMenuId");
                  OnSysMenuIdChanged();
              }
            }
        }
        private int _SysMenuId;
        partial void OnGetSysMenuId(ref int value);
        partial void OnSysMenuIdChanging(ref int value);
        partial void OnSysMenuIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SysMenus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysRoleAccess", "SysMenus")]
        public virtual SysMenus SysMenus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysMenus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysMenus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysMenus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysMenus> SysMenusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysMenus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysMenus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysMenus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysAccessUsers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysAccessUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysAccessUsers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysAccessUsers object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="sysMenuId">Initial value of SysMenuId.</param>
        /// <param name="seqno">Initial value of Seqno.</param>
        public static SysAccessUsers CreateSysAccessUsers(int id, string userId, int sysMenuId, int seqno)
        {
            SysAccessUsers sysAccessUsers = new SysAccessUsers();
            sysAccessUsers.Id = id;
            sysAccessUsers.UserId = userId;
            sysAccessUsers.SysMenuId = sysMenuId;
            sysAccessUsers.Seqno = seqno;
            return sysAccessUsers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for SysMenuId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysMenuId
        {
            get
            {
                int value = _SysMenuId;
                OnGetSysMenuId(ref value);
                return value;
            }
            set
            {
                if (_SysMenuId != value)
                {
                  OnSysMenuIdChanging(ref value);
                  ReportPropertyChanging("SysMenuId");
                  _SysMenuId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysMenuId");
                  OnSysMenuIdChanged();
              }
            }
        }
        private int _SysMenuId;
        partial void OnGetSysMenuId(ref int value);
        partial void OnSysMenuIdChanging(ref int value);
        partial void OnSysMenuIdChanged();
    
        /// <summary>
        /// There are no comments for Seqno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Seqno
        {
            get
            {
                int value = _Seqno;
                OnGetSeqno(ref value);
                return value;
            }
            set
            {
                if (_Seqno != value)
                {
                  OnSeqnoChanging(ref value);
                  ReportPropertyChanging("Seqno");
                  _Seqno = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Seqno");
                  OnSeqnoChanged();
              }
            }
        }
        private int _Seqno;
        partial void OnGetSeqno(ref int value);
        partial void OnSeqnoChanging(ref int value);
        partial void OnSeqnoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SysMenus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysUserAccess", "SysMenus")]
        public virtual SysMenus SysMenus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysMenus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysMenus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysMenus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysMenus> SysMenusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysMenus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysMenus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysMenus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysCmdIdRefs in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysCmdIdRefs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysCmdIdRefs : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysCmdIdRefs object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="cmdId">Initial value of CmdId.</param>
        /// <param name="description">Initial value of Description.</param>
        public static SysCmdIdRefs CreateSysCmdIdRefs(int id, int cmdId, string description)
        {
            SysCmdIdRefs sysCmdIdRefs = new SysCmdIdRefs();
            sysCmdIdRefs.Id = id;
            sysCmdIdRefs.CmdId = cmdId;
            sysCmdIdRefs.Description = description;
            return sysCmdIdRefs;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CmdId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CmdId
        {
            get
            {
                int value = _CmdId;
                OnGetCmdId(ref value);
                return value;
            }
            set
            {
                if (_CmdId != value)
                {
                  OnCmdIdChanging(ref value);
                  ReportPropertyChanging("CmdId");
                  _CmdId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CmdId");
                  OnCmdIdChanged();
              }
            }
        }
        private int _CmdId;
        partial void OnGetCmdId(ref int value);
        partial void OnCmdIdChanging(ref int value);
        partial void OnCmdIdChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysLabels in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysLabels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysLabels : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysLabels object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="code">Initial value of Code.</param>
        /// <param name="displayText">Initial value of DisplayText.</param>
        /// <param name="displayLang">Initial value of DisplayLang.</param>
        public static SysLabels CreateSysLabels(int id, string code, string displayText, string displayLang)
        {
            SysLabels sysLabels = new SysLabels();
            sysLabels.Id = id;
            sysLabels.Code = code;
            sysLabels.DisplayText = displayText;
            sysLabels.DisplayLang = displayLang;
            return sysLabels;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for DisplayText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DisplayText
        {
            get
            {
                string value = _DisplayText;
                OnGetDisplayText(ref value);
                return value;
            }
            set
            {
                if (_DisplayText != value)
                {
                  OnDisplayTextChanging(ref value);
                  ReportPropertyChanging("DisplayText");
                  _DisplayText = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DisplayText");
                  OnDisplayTextChanged();
              }
            }
        }
        private string _DisplayText;
        partial void OnGetDisplayText(ref string value);
        partial void OnDisplayTextChanging(ref string value);
        partial void OnDisplayTextChanged();
    
        /// <summary>
        /// There are no comments for DisplayLang in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DisplayLang
        {
            get
            {
                string value = _DisplayLang;
                OnGetDisplayLang(ref value);
                return value;
            }
            set
            {
                if (_DisplayLang != value)
                {
                  OnDisplayLangChanging(ref value);
                  ReportPropertyChanging("DisplayLang");
                  _DisplayLang = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DisplayLang");
                  OnDisplayLangChanged();
              }
            }
        }
        private string _DisplayLang;
        partial void OnGetDisplayLang(ref string value);
        partial void OnDisplayLangChanging(ref string value);
        partial void OnDisplayLangChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysMenus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysMenus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysMenus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysMenus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="menu">Initial value of Menu.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="parentId">Initial value of ParentId.</param>
        /// <param name="seqno">Initial value of Seqno.</param>
        public static SysMenus CreateSysMenus(int id, string menu, string remarks, int parentId, int seqno)
        {
            SysMenus sysMenus = new SysMenus();
            sysMenus.Id = id;
            sysMenus.Menu = menu;
            sysMenus.Remarks = remarks;
            sysMenus.ParentId = parentId;
            sysMenus.Seqno = seqno;
            return sysMenus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Menu in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Menu
        {
            get
            {
                string value = _Menu;
                OnGetMenu(ref value);
                return value;
            }
            set
            {
                if (_Menu != value)
                {
                  OnMenuChanging(ref value);
                  ReportPropertyChanging("Menu");
                  _Menu = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Menu");
                  OnMenuChanged();
              }
            }
        }
        private string _Menu;
        partial void OnGetMenu(ref string value);
        partial void OnMenuChanging(ref string value);
        partial void OnMenuChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ParentId
        {
            get
            {
                int value = _ParentId;
                OnGetParentId(ref value);
                return value;
            }
            set
            {
                if (_ParentId != value)
                {
                  OnParentIdChanging(ref value);
                  ReportPropertyChanging("ParentId");
                  _ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentId");
                  OnParentIdChanged();
              }
            }
        }
        private int _ParentId;
        partial void OnGetParentId(ref int value);
        partial void OnParentIdChanging(ref int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// There are no comments for Controller in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Controller
        {
            get
            {
                string value = _Controller;
                OnGetController(ref value);
                return value;
            }
            set
            {
                if (_Controller != value)
                {
                  OnControllerChanging(ref value);
                  ReportPropertyChanging("Controller");
                  _Controller = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Controller");
                  OnControllerChanged();
              }
            }
        }
        private string _Controller;
        partial void OnGetController(ref string value);
        partial void OnControllerChanging(ref string value);
        partial void OnControllerChanged();
    
        /// <summary>
        /// There are no comments for Action in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Action
        {
            get
            {
                string value = _Action;
                OnGetAction(ref value);
                return value;
            }
            set
            {
                if (_Action != value)
                {
                  OnActionChanging(ref value);
                  ReportPropertyChanging("Action");
                  _Action = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Action");
                  OnActionChanged();
              }
            }
        }
        private string _Action;
        partial void OnGetAction(ref string value);
        partial void OnActionChanging(ref string value);
        partial void OnActionChanged();
    
        /// <summary>
        /// There are no comments for Params in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Params
        {
            get
            {
                string value = _Params;
                OnGetParams(ref value);
                return value;
            }
            set
            {
                if (_Params != value)
                {
                  OnParamsChanging(ref value);
                  ReportPropertyChanging("Params");
                  _Params = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Params");
                  OnParamsChanged();
              }
            }
        }
        private string _Params;
        partial void OnGetParams(ref string value);
        partial void OnParamsChanging(ref string value);
        partial void OnParamsChanged();
    
        /// <summary>
        /// There are no comments for CmdId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CmdId
        {
            get
            {
                int? value = _CmdId;
                OnGetCmdId(ref value);
                return value;
            }
            set
            {
                if (_CmdId != value)
                {
                  OnCmdIdChanging(ref value);
                  ReportPropertyChanging("CmdId");
                  _CmdId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CmdId");
                  OnCmdIdChanged();
              }
            }
        }
        private int? _CmdId;
        partial void OnGetCmdId(ref int? value);
        partial void OnCmdIdChanging(ref int? value);
        partial void OnCmdIdChanged();
    
        /// <summary>
        /// There are no comments for Seqno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Seqno
        {
            get
            {
                int value = _Seqno;
                OnGetSeqno(ref value);
                return value;
            }
            set
            {
                if (_Seqno != value)
                {
                  OnSeqnoChanging(ref value);
                  ReportPropertyChanging("Seqno");
                  _Seqno = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Seqno");
                  OnSeqnoChanged();
              }
            }
        }
        private int _Seqno;
        partial void OnGetSeqno(ref int value);
        partial void OnSeqnoChanging(ref int value);
        partial void OnSeqnoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SysAccessRoles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysRoleAccess", "SysAccessRoles")]
        public virtual EntityCollection<SysAccessRoles> SysAccessRoles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SysAccessRoles>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysAccessRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SysAccessRoles>("DB_A0A0AE_ClientModel.FK_SysMenuSysRoleAccess", "SysAccessRoles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysAccessUsers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysUserAccess", "SysAccessUsers")]
        public virtual EntityCollection<SysAccessUsers> SysAccessUsers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SysAccessUsers>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysAccessUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SysAccessUsers>("DB_A0A0AE_ClientModel.FK_SysMenuSysUserAccess", "SysAccessUsers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysServiceMenus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysServiceMenu", "SysServiceMenus")]
        public virtual EntityCollection<SysServiceMenus> SysServiceMenus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SysServiceMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysServiceMenus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SysServiceMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysServiceMenus", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysServiceMenus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysServiceMenus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysServiceMenus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysServiceMenus object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysMenuId">Initial value of SysMenuId.</param>
        /// <param name="sysServiceId">Initial value of SysServiceId.</param>
        public static SysServiceMenus CreateSysServiceMenus(int id, int sysMenuId, int sysServiceId)
        {
            SysServiceMenus sysServiceMenus = new SysServiceMenus();
            sysServiceMenus.Id = id;
            sysServiceMenus.SysMenuId = sysMenuId;
            sysServiceMenus.SysServiceId = sysServiceId;
            return sysServiceMenus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysMenuId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysMenuId
        {
            get
            {
                int value = _SysMenuId;
                OnGetSysMenuId(ref value);
                return value;
            }
            set
            {
                if (_SysMenuId != value)
                {
                  OnSysMenuIdChanging(ref value);
                  ReportPropertyChanging("SysMenuId");
                  _SysMenuId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysMenuId");
                  OnSysMenuIdChanged();
              }
            }
        }
        private int _SysMenuId;
        partial void OnGetSysMenuId(ref int value);
        partial void OnSysMenuIdChanging(ref int value);
        partial void OnSysMenuIdChanged();
    
        /// <summary>
        /// There are no comments for SysServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SysServiceId
        {
            get
            {
                int value = _SysServiceId;
                OnGetSysServiceId(ref value);
                return value;
            }
            set
            {
                if (_SysServiceId != value)
                {
                  OnSysServiceIdChanging(ref value);
                  ReportPropertyChanging("SysServiceId");
                  _SysServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SysServiceId");
                  OnSysServiceIdChanged();
              }
            }
        }
        private int _SysServiceId;
        partial void OnGetSysServiceId(ref int value);
        partial void OnSysServiceIdChanging(ref int value);
        partial void OnSysServiceIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SysServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysServiceSysServiceMenu", "SysServices")]
        public virtual SysServices SysServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServices").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServices").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysServices in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysServices> SysServicesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServices");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServices", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysServices>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServices").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysMenus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysMenuSysServiceMenu", "SysMenus")]
        public virtual SysMenus SysMenus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysMenus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysMenus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SysMenus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SysMenus> SysMenusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysMenus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysMenus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SysMenus>("DB_A0A0AE_ClientModel.FK_SysMenuSysServiceMenu", "SysMenus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysServices in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysServices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysServices : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysServices object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="iconPath">Initial value of IconPath.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        public static SysServices CreateSysServices(int id, string sysCode, string description, string remarks, string status, string iconPath, int seqNo)
        {
            SysServices sysServices = new SysServices();
            sysServices.Id = id;
            sysServices.SysCode = sysCode;
            sysServices.Description = description;
            sysServices.Remarks = remarks;
            sysServices.Status = status;
            sysServices.IconPath = iconPath;
            sysServices.SeqNo = seqNo;
            return sysServices;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for IconPath in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IconPath
        {
            get
            {
                string value = _IconPath;
                OnGetIconPath(ref value);
                return value;
            }
            set
            {
                if (_IconPath != value)
                {
                  OnIconPathChanging(ref value);
                  ReportPropertyChanging("IconPath");
                  _IconPath = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IconPath");
                  OnIconPathChanged();
              }
            }
        }
        private string _IconPath;
        partial void OnGetIconPath(ref string value);
        partial void OnIconPathChanging(ref string value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo = 1;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for IconFA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string IconFA
        {
            get
            {
                string value = _IconFA;
                OnGetIconFA(ref value);
                return value;
            }
            set
            {
                if (_IconFA != value)
                {
                  OnIconFAChanging(ref value);
                  ReportPropertyChanging("IconFA");
                  _IconFA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IconFA");
                  OnIconFAChanged();
              }
            }
        }
        private string _IconFA;
        partial void OnGetIconFA(ref string value);
        partial void OnIconFAChanging(ref string value);
        partial void OnIconFAChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntServices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysServiceEntServices", "EntServices")]
        public virtual EntityCollection<EntServices> EntServices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "EntServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntServices>("DB_A0A0AE_ClientModel.FK_SysServiceEntServices", "EntServices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SysServiceMenus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysServiceSysServiceMenu", "SysServiceMenus")]
        public virtual EntityCollection<SysServiceMenus> SysServiceMenus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SysServiceMenus>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServiceMenus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SysServiceMenus>("DB_A0A0AE_ClientModel.FK_SysServiceSysServiceMenu", "SysServiceMenus", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysSettings in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysSettings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysSettings : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysSettings object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="sysKey">Initial value of SysKey.</param>
        /// <param name="sysValue">Initial value of SysValue.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        public static SysSettings CreateSysSettings(int id, string sysKey, string sysValue, string remarks)
        {
            SysSettings sysSettings = new SysSettings();
            sysSettings.Id = id;
            sysSettings.SysKey = sysKey;
            sysSettings.SysValue = sysValue;
            sysSettings.Remarks = remarks;
            return sysSettings;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for SysKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysKey
        {
            get
            {
                string value = _SysKey;
                OnGetSysKey(ref value);
                return value;
            }
            set
            {
                if (_SysKey != value)
                {
                  OnSysKeyChanging(ref value);
                  ReportPropertyChanging("SysKey");
                  _SysKey = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysKey");
                  OnSysKeyChanged();
              }
            }
        }
        private string _SysKey;
        partial void OnGetSysKey(ref string value);
        partial void OnSysKeyChanging(ref string value);
        partial void OnSysKeyChanged();
    
        /// <summary>
        /// There are no comments for SysValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysValue
        {
            get
            {
                string value = _SysValue;
                OnGetSysValue(ref value);
                return value;
            }
            set
            {
                if (_SysValue != value)
                {
                  OnSysValueChanging(ref value);
                  ReportPropertyChanging("SysValue");
                  _SysValue = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysValue");
                  OnSysValueChanged();
              }
            }
        }
        private string _SysValue;
        partial void OnGetSysValue(ref string value);
        partial void OnSysValueChanging(ref string value);
        partial void OnSysValueChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.SysSetupTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="SysSetupTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysSetupTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SysSetupTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        /// <param name="sysCode">Initial value of SysCode.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="remarks">Initial value of Remarks.</param>
        /// <param name="status">Initial value of Status.</param>
        public static SysSetupTypes CreateSysSetupTypes(int id, string type, string sysCode, string description, string remarks, string status)
        {
            SysSetupTypes sysSetupTypes = new SysSetupTypes();
            sysSetupTypes.Id = id;
            sysSetupTypes.Type = type;
            sysSetupTypes.SysCode = sysCode;
            sysSetupTypes.Description = description;
            sysSetupTypes.Remarks = remarks;
            sysSetupTypes.Status = status;
            return sysSetupTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for SysCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SysCode
        {
            get
            {
                string value = _SysCode;
                OnGetSysCode(ref value);
                return value;
            }
            set
            {
                if (_SysCode != value)
                {
                  OnSysCodeChanging(ref value);
                  ReportPropertyChanging("SysCode");
                  _SysCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SysCode");
                  OnSysCodeChanged();
              }
            }
        }
        private string _SysCode;
        partial void OnGetSysCode(ref string value);
        partial void OnSysCodeChanging(ref string value);
        partial void OnSysCodeChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Status
        {
            get
            {
                string value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private string _Status;
        partial void OnGetStatus(ref string value);
        partial void OnStatusChanging(ref string value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EntAddresses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntAddress", "EntAddresses")]
        public virtual EntityCollection<EntAddresses> EntAddresses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntAddresses>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "EntAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntAddresses>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntAddress", "EntAddresses", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntContacts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntContact", "EntContacts")]
        public virtual EntityCollection<EntContacts> EntContacts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntContacts>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "EntContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntContacts>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntContact", "EntContacts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntSettings in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysSetupTypeEntSetting", "EntSettings")]
        public virtual EntityCollection<EntSettings> EntSettings
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntSettings>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "EntSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntSettings>("DB_A0A0AE_ClientModel.FK_SysSetupTypeEntSetting", "EntSettings", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for EntSupportFiles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_SysFileTypeEntSupportFile", "EntSupportFiles")]
        public virtual EntityCollection<EntSupportFiles> EntSupportFiles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EntSupportFiles>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "EntSupportFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EntSupportFiles>("DB_A0A0AE_ClientModel.FK_SysFileTypeEntSupportFile", "EntSupportFiles", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.VehicleBrands in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="VehicleBrands")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleBrands : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VehicleBrands object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="brand">Initial value of Brand.</param>
        public static VehicleBrands CreateVehicleBrands(int id, string brand)
        {
            VehicleBrands vehicleBrands = new VehicleBrands();
            vehicleBrands.Id = id;
            vehicleBrands.Brand = brand;
            return vehicleBrands;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Brand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Brand
        {
            get
            {
                string value = _Brand;
                OnGetBrand(ref value);
                return value;
            }
            set
            {
                if (_Brand != value)
                {
                  OnBrandChanging(ref value);
                  ReportPropertyChanging("Brand");
                  _Brand = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Brand");
                  OnBrandChanged();
              }
            }
        }
        private string _Brand;
        partial void OnGetBrand(ref string value);
        partial void OnBrandChanging(ref string value);
        partial void OnBrandChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleBrandVehicleMake", "VehicleModels")]
        public virtual EntityCollection<VehicleModels> VehicleModels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleModels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.VehicleDrives in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="VehicleDrives")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleDrives : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VehicleDrives object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="drive">Initial value of Drive.</param>
        public static VehicleDrives CreateVehicleDrives(int id, string drive)
        {
            VehicleDrives vehicleDrives = new VehicleDrives();
            vehicleDrives.Id = id;
            vehicleDrives.Drive = drive;
            return vehicleDrives;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Drive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Drive
        {
            get
            {
                string value = _Drive;
                OnGetDrive(ref value);
                return value;
            }
            set
            {
                if (_Drive != value)
                {
                  OnDriveChanging(ref value);
                  ReportPropertyChanging("Drive");
                  _Drive = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Drive");
                  OnDriveChanged();
              }
            }
        }
        private string _Drive;
        partial void OnGetDrive(ref string value);
        partial void OnDriveChanging(ref string value);
        partial void OnDriveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleDriveVehicleModel", "VehicleModels")]
        public virtual EntityCollection<VehicleModels> VehicleModels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleModels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.VehicleFuels in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="VehicleFuels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleFuels : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VehicleFuels object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="fuel">Initial value of Fuel.</param>
        public static VehicleFuels CreateVehicleFuels(int id, string fuel)
        {
            VehicleFuels vehicleFuels = new VehicleFuels();
            vehicleFuels.Id = id;
            vehicleFuels.Fuel = fuel;
            return vehicleFuels;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Fuel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Fuel
        {
            get
            {
                string value = _Fuel;
                OnGetFuel(ref value);
                return value;
            }
            set
            {
                if (_Fuel != value)
                {
                  OnFuelChanging(ref value);
                  ReportPropertyChanging("Fuel");
                  _Fuel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Fuel");
                  OnFuelChanged();
              }
            }
        }
        private string _Fuel;
        partial void OnGetFuel(ref string value);
        partial void OnFuelChanging(ref string value);
        partial void OnFuelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleFuelVehicleMake", "VehicleModels")]
        public virtual EntityCollection<VehicleModels> VehicleModels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleModels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.VehicleModels in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="VehicleModels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleModels : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VehicleModels object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="make">Initial value of Make.</param>
        /// <param name="variant">Initial value of Variant.</param>
        /// <param name="vehicleBrandId">Initial value of VehicleBrandId.</param>
        /// <param name="vehicleTypeId">Initial value of VehicleTypeId.</param>
        /// <param name="vehicleTransmissionId">Initial value of VehicleTransmissionId.</param>
        /// <param name="vehicleFuelId">Initial value of VehicleFuelId.</param>
        /// <param name="vehicleDriveId">Initial value of VehicleDriveId.</param>
        public static VehicleModels CreateVehicleModels(int id, string make, string variant, int vehicleBrandId, int vehicleTypeId, int vehicleTransmissionId, int vehicleFuelId, int vehicleDriveId)
        {
            VehicleModels vehicleModels = new VehicleModels();
            vehicleModels.Id = id;
            vehicleModels.Make = make;
            vehicleModels.Variant = variant;
            vehicleModels.VehicleBrandId = vehicleBrandId;
            vehicleModels.VehicleTypeId = vehicleTypeId;
            vehicleModels.VehicleTransmissionId = vehicleTransmissionId;
            vehicleModels.VehicleFuelId = vehicleFuelId;
            vehicleModels.VehicleDriveId = vehicleDriveId;
            return vehicleModels;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Make in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Make
        {
            get
            {
                string value = _Make;
                OnGetMake(ref value);
                return value;
            }
            set
            {
                if (_Make != value)
                {
                  OnMakeChanging(ref value);
                  ReportPropertyChanging("Make");
                  _Make = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Make");
                  OnMakeChanged();
              }
            }
        }
        private string _Make;
        partial void OnGetMake(ref string value);
        partial void OnMakeChanging(ref string value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// There are no comments for Variant in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Variant
        {
            get
            {
                string value = _Variant;
                OnGetVariant(ref value);
                return value;
            }
            set
            {
                if (_Variant != value)
                {
                  OnVariantChanging(ref value);
                  ReportPropertyChanging("Variant");
                  _Variant = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Variant");
                  OnVariantChanged();
              }
            }
        }
        private string _Variant;
        partial void OnGetVariant(ref string value);
        partial void OnVariantChanging(ref string value);
        partial void OnVariantChanged();
    
        /// <summary>
        /// There are no comments for VehicleBrandId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleBrandId
        {
            get
            {
                int value = _VehicleBrandId;
                OnGetVehicleBrandId(ref value);
                return value;
            }
            set
            {
                if (_VehicleBrandId != value)
                {
                  OnVehicleBrandIdChanging(ref value);
                  ReportPropertyChanging("VehicleBrandId");
                  _VehicleBrandId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleBrandId");
                  OnVehicleBrandIdChanged();
              }
            }
        }
        private int _VehicleBrandId;
        partial void OnGetVehicleBrandId(ref int value);
        partial void OnVehicleBrandIdChanging(ref int value);
        partial void OnVehicleBrandIdChanged();
    
        /// <summary>
        /// There are no comments for VehicleTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleTypeId
        {
            get
            {
                int value = _VehicleTypeId;
                OnGetVehicleTypeId(ref value);
                return value;
            }
            set
            {
                if (_VehicleTypeId != value)
                {
                  OnVehicleTypeIdChanging(ref value);
                  ReportPropertyChanging("VehicleTypeId");
                  _VehicleTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleTypeId");
                  OnVehicleTypeIdChanged();
              }
            }
        }
        private int _VehicleTypeId;
        partial void OnGetVehicleTypeId(ref int value);
        partial void OnVehicleTypeIdChanging(ref int value);
        partial void OnVehicleTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// There are no comments for VehicleTransmissionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleTransmissionId
        {
            get
            {
                int value = _VehicleTransmissionId;
                OnGetVehicleTransmissionId(ref value);
                return value;
            }
            set
            {
                if (_VehicleTransmissionId != value)
                {
                  OnVehicleTransmissionIdChanging(ref value);
                  ReportPropertyChanging("VehicleTransmissionId");
                  _VehicleTransmissionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleTransmissionId");
                  OnVehicleTransmissionIdChanged();
              }
            }
        }
        private int _VehicleTransmissionId;
        partial void OnGetVehicleTransmissionId(ref int value);
        partial void OnVehicleTransmissionIdChanging(ref int value);
        partial void OnVehicleTransmissionIdChanged();
    
        /// <summary>
        /// There are no comments for VehicleFuelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleFuelId
        {
            get
            {
                int value = _VehicleFuelId;
                OnGetVehicleFuelId(ref value);
                return value;
            }
            set
            {
                if (_VehicleFuelId != value)
                {
                  OnVehicleFuelIdChanging(ref value);
                  ReportPropertyChanging("VehicleFuelId");
                  _VehicleFuelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleFuelId");
                  OnVehicleFuelIdChanged();
              }
            }
        }
        private int _VehicleFuelId;
        partial void OnGetVehicleFuelId(ref int value);
        partial void OnVehicleFuelIdChanging(ref int value);
        partial void OnVehicleFuelIdChanged();
    
        /// <summary>
        /// There are no comments for VehicleDriveId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleDriveId
        {
            get
            {
                int value = _VehicleDriveId;
                OnGetVehicleDriveId(ref value);
                return value;
            }
            set
            {
                if (_VehicleDriveId != value)
                {
                  OnVehicleDriveIdChanging(ref value);
                  ReportPropertyChanging("VehicleDriveId");
                  _VehicleDriveId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleDriveId");
                  OnVehicleDriveIdChanged();
              }
            }
        }
        private int _VehicleDriveId;
        partial void OnGetVehicleDriveId(ref int value);
        partial void OnVehicleDriveIdChanging(ref int value);
        partial void OnVehicleDriveIdChanged();
    
        /// <summary>
        /// There are no comments for MotorOil in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MotorOil
        {
            get
            {
                string value = _MotorOil;
                OnGetMotorOil(ref value);
                return value;
            }
            set
            {
                if (_MotorOil != value)
                {
                  OnMotorOilChanging(ref value);
                  ReportPropertyChanging("MotorOil");
                  _MotorOil = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MotorOil");
                  OnMotorOilChanged();
              }
            }
        }
        private string _MotorOil;
        partial void OnGetMotorOil(ref string value);
        partial void OnMotorOilChanging(ref string value);
        partial void OnMotorOilChanged();
    
        /// <summary>
        /// There are no comments for GearOil in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string GearOil
        {
            get
            {
                string value = _GearOil;
                OnGetGearOil(ref value);
                return value;
            }
            set
            {
                if (_GearOil != value)
                {
                  OnGearOilChanging(ref value);
                  ReportPropertyChanging("GearOil");
                  _GearOil = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("GearOil");
                  OnGearOilChanged();
              }
            }
        }
        private string _GearOil;
        partial void OnGetGearOil(ref string value);
        partial void OnGearOilChanging(ref string value);
        partial void OnGearOilChanged();
    
        /// <summary>
        /// There are no comments for TransmissionOil in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TransmissionOil
        {
            get
            {
                string value = _TransmissionOil;
                OnGetTransmissionOil(ref value);
                return value;
            }
            set
            {
                if (_TransmissionOil != value)
                {
                  OnTransmissionOilChanging(ref value);
                  ReportPropertyChanging("TransmissionOil");
                  _TransmissionOil = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TransmissionOil");
                  OnTransmissionOilChanged();
              }
            }
        }
        private string _TransmissionOil;
        partial void OnGetTransmissionOil(ref string value);
        partial void OnTransmissionOilChanging(ref string value);
        partial void OnTransmissionOilChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VehicleBrands in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleBrandVehicleMake", "VehicleBrands")]
        public virtual VehicleBrands VehicleBrands
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleBrands>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleBrands").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleBrands>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleBrands").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleBrands in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleBrands> VehicleBrandsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleBrands>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleBrands");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VehicleBrands>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleBrands", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleBrands>("DB_A0A0AE_ClientModel.FK_VehicleBrandVehicleMake", "VehicleBrands").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleTypes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleTypeVehicleMake", "VehicleTypes")]
        public virtual VehicleTypes VehicleTypes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTypes>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTypes>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleTypes").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleTypes in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleTypes> VehicleTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTypes>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleTypes");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VehicleTypes>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleTypes", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTypes>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleTypes").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleTransmissions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleTransmissionVehicleMake", "VehicleTransmissions")]
        public virtual VehicleTransmissions VehicleTransmissions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTransmissions>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleTransmissions").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTransmissions>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleTransmissions").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleTransmissions in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleTransmissions> VehicleTransmissionsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTransmissions>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleTransmissions");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VehicleTransmissions>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleTransmissions", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleTransmissions>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleTransmissions").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleFuels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleFuelVehicleMake", "VehicleFuels")]
        public virtual VehicleFuels VehicleFuels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleFuels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleFuels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleFuels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleFuels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleFuels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleFuels> VehicleFuelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleFuels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleFuels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VehicleFuels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleFuels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleFuels>("DB_A0A0AE_ClientModel.FK_VehicleFuelVehicleMake", "VehicleFuels").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleDrives in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleDriveVehicleModel", "VehicleDrives")]
        public virtual VehicleDrives VehicleDrives
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleDrives>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleDrives").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleDrives>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleDrives").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleDrives in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleDrives> VehicleDrivesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleDrives>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleDrives");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VehicleDrives>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleDrives", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleDrives>("DB_A0A0AE_ClientModel.FK_VehicleDriveVehicleModel", "VehicleDrives").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Vehicles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleModelVehicle", "Vehicles")]
        public virtual EntityCollection<Vehicles> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Vehicles>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "Vehicles", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.Vehicles in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="Vehicles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicles : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Vehicles object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="vehicleModelId">Initial value of VehicleModelId.</param>
        /// <param name="yearModel">Initial value of YearModel.</param>
        /// <param name="plateNo">Initial value of PlateNo.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="custEntMainId">Initial value of CustEntMainId.</param>
        public static Vehicles CreateVehicles(int id, int vehicleModelId, string yearModel, string plateNo, int customerId, int custEntMainId)
        {
            Vehicles vehicles = new Vehicles();
            vehicles.Id = id;
            vehicles.VehicleModelId = vehicleModelId;
            vehicles.YearModel = yearModel;
            vehicles.PlateNo = plateNo;
            vehicles.CustomerId = customerId;
            vehicles.CustEntMainId = custEntMainId;
            return vehicles;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for VehicleModelId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VehicleModelId
        {
            get
            {
                int value = _VehicleModelId;
                OnGetVehicleModelId(ref value);
                return value;
            }
            set
            {
                if (_VehicleModelId != value)
                {
                  OnVehicleModelIdChanging(ref value);
                  ReportPropertyChanging("VehicleModelId");
                  _VehicleModelId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VehicleModelId");
                  OnVehicleModelIdChanged();
              }
            }
        }
        private int _VehicleModelId;
        partial void OnGetVehicleModelId(ref int value);
        partial void OnVehicleModelIdChanging(ref int value);
        partial void OnVehicleModelIdChanged();
    
        /// <summary>
        /// There are no comments for YearModel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string YearModel
        {
            get
            {
                string value = _YearModel;
                OnGetYearModel(ref value);
                return value;
            }
            set
            {
                if (_YearModel != value)
                {
                  OnYearModelChanging(ref value);
                  ReportPropertyChanging("YearModel");
                  _YearModel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("YearModel");
                  OnYearModelChanged();
              }
            }
        }
        private string _YearModel;
        partial void OnGetYearModel(ref string value);
        partial void OnYearModelChanging(ref string value);
        partial void OnYearModelChanged();
    
        /// <summary>
        /// There are no comments for PlateNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PlateNo
        {
            get
            {
                string value = _PlateNo;
                OnGetPlateNo(ref value);
                return value;
            }
            set
            {
                if (_PlateNo != value)
                {
                  OnPlateNoChanging(ref value);
                  ReportPropertyChanging("PlateNo");
                  _PlateNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PlateNo");
                  OnPlateNoChanged();
              }
            }
        }
        private string _PlateNo;
        partial void OnGetPlateNo(ref string value);
        partial void OnPlateNoChanging(ref string value);
        partial void OnPlateNoChanged();
    
        /// <summary>
        /// There are no comments for Conduction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Conduction
        {
            get
            {
                string value = _Conduction;
                OnGetConduction(ref value);
                return value;
            }
            set
            {
                if (_Conduction != value)
                {
                  OnConductionChanging(ref value);
                  ReportPropertyChanging("Conduction");
                  _Conduction = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Conduction");
                  OnConductionChanged();
              }
            }
        }
        private string _Conduction;
        partial void OnGetConduction(ref string value);
        partial void OnConductionChanging(ref string value);
        partial void OnConductionChanged();
    
        /// <summary>
        /// There are no comments for EngineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string EngineNo
        {
            get
            {
                string value = _EngineNo;
                OnGetEngineNo(ref value);
                return value;
            }
            set
            {
                if (_EngineNo != value)
                {
                  OnEngineNoChanging(ref value);
                  ReportPropertyChanging("EngineNo");
                  _EngineNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EngineNo");
                  OnEngineNoChanged();
              }
            }
        }
        private string _EngineNo;
        partial void OnGetEngineNo(ref string value);
        partial void OnEngineNoChanging(ref string value);
        partial void OnEngineNoChanged();
    
        /// <summary>
        /// There are no comments for ChassisNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ChassisNo
        {
            get
            {
                string value = _ChassisNo;
                OnGetChassisNo(ref value);
                return value;
            }
            set
            {
                if (_ChassisNo != value)
                {
                  OnChassisNoChanging(ref value);
                  ReportPropertyChanging("ChassisNo");
                  _ChassisNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ChassisNo");
                  OnChassisNoChanged();
              }
            }
        }
        private string _ChassisNo;
        partial void OnGetChassisNo(ref string value);
        partial void OnChassisNoChanging(ref string value);
        partial void OnChassisNoChanged();
    
        /// <summary>
        /// There are no comments for Color in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Color
        {
            get
            {
                string value = _Color;
                OnGetColor(ref value);
                return value;
            }
            set
            {
                if (_Color != value)
                {
                  OnColorChanging(ref value);
                  ReportPropertyChanging("Color");
                  _Color = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Color");
                  OnColorChanged();
              }
            }
        }
        private string _Color;
        partial void OnGetColor(ref string value);
        partial void OnColorChanging(ref string value);
        partial void OnColorChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomerId
        {
            get
            {
                int value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private int _CustomerId;
        partial void OnGetCustomerId(ref int value);
        partial void OnCustomerIdChanging(ref int value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for CustEntMainId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustEntMainId
        {
            get
            {
                int value = _CustEntMainId;
                OnGetCustEntMainId(ref value);
                return value;
            }
            set
            {
                if (_CustEntMainId != value)
                {
                  OnCustEntMainIdChanging(ref value);
                  ReportPropertyChanging("CustEntMainId");
                  _CustEntMainId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustEntMainId");
                  OnCustEntMainIdChanged();
              }
            }
        }
        private int _CustEntMainId;
        partial void OnGetCustEntMainId(ref int value);
        partial void OnCustEntMainIdChanging(ref int value);
        partial void OnCustEntMainIdChanged();
    
        /// <summary>
        /// There are no comments for Remarks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Remarks
        {
            get
            {
                string value = _Remarks;
                OnGetRemarks(ref value);
                return value;
            }
            set
            {
                if (_Remarks != value)
                {
                  OnRemarksChanging(ref value);
                  ReportPropertyChanging("Remarks");
                  _Remarks = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Remarks");
                  OnRemarksChanged();
              }
            }
        }
        private string _Remarks;
        partial void OnGetRemarks(ref string value);
        partial void OnRemarksChanging(ref string value);
        partial void OnRemarksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JobVehicles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleJobVehicle", "JobVehicles")]
        public virtual EntityCollection<JobVehicles> JobVehicles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JobVehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "JobVehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JobVehicles>("DB_A0A0AE_ClientModel.FK_VehicleJobVehicle", "JobVehicles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustomerVehicle", "Customers")]
        public virtual Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Customers").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Customers");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Customers", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customers>("DB_A0A0AE_ClientModel.FK_CustomerVehicle", "Customers").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_CustEntMainVehicle", "CustEntMains")]
        public virtual CustEntMains CustEntMains
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "CustEntMains").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "CustEntMains").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustEntMains in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustEntMains> CustEntMainsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "CustEntMains");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "CustEntMains", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustEntMains>("DB_A0A0AE_ClientModel.FK_CustEntMainVehicle", "CustEntMains").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleModelVehicle", "VehicleModels")]
        public virtual VehicleModels VehicleModels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "VehicleModels").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "VehicleModels").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleModels> VehicleModelsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "VehicleModels");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "VehicleModels", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleModelVehicle", "VehicleModels").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.VehicleTransmissions in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="VehicleTransmissions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleTransmissions : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VehicleTransmissions object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static VehicleTransmissions CreateVehicleTransmissions(int id, string type)
        {
            VehicleTransmissions vehicleTransmissions = new VehicleTransmissions();
            vehicleTransmissions.Id = id;
            vehicleTransmissions.Type = type;
            return vehicleTransmissions;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleTransmissionVehicleMake", "VehicleModels")]
        public virtual EntityCollection<VehicleModels> VehicleModels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleTransmissionVehicleMake", "VehicleModels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for DB_A0A0AE_ClientModel.VehicleTypes in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DB_A0A0AE_ClientModel", Name="VehicleTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleTypes : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VehicleTypes object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="type">Initial value of Type.</param>
        public static VehicleTypes CreateVehicleTypes(int id, string type)
        {
            VehicleTypes vehicleTypes = new VehicleTypes();
            vehicleTypes.Id = id;
            vehicleTypes.Type = type;
            return vehicleTypes;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Type
        {
            get
            {
                string value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private string _Type;
        partial void OnGetType(ref string value);
        partial void OnTypeChanging(ref string value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VehicleModels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DB_A0A0AE_ClientModel", "FK_VehicleTypeVehicleMake", "VehicleModels")]
        public virtual EntityCollection<VehicleModels> VehicleModels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VehicleModels>("DB_A0A0AE_ClientModel.FK_VehicleTypeVehicleMake", "VehicleModels", value);
                }
            }
        }

        #endregion
    }

}
