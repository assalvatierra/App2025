@page "/entities/create"
@using Microsoft.EntityFrameworkCore
@using Erp.Domain.Models
@inject IDbContextFactory<Erp2025.Data.Erp2025Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Entity</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Entity" OnValidSubmit="AddEntity" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Entity.Name" class="form-control" /> 
                <ValidationMessage For="() => Entity.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Entity.Description" class="form-control" /> 
                <ValidationMessage For="() => Entity.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="remarks" class="form-label">Remarks:</label> 
                <InputText id="remarks" @bind-Value="Entity.Remarks" class="form-control" /> 
                <ValidationMessage For="() => Entity.Remarks" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="code" class="form-label">Code:</label> 
                <InputText id="code" @bind-Value="Entity.Code" class="form-control" /> 
                <ValidationMessage For="() => Entity.Code" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="sortorder" class="form-label">SortOrder:</label> 
                <InputNumber id="sortorder" @bind-Value="Entity.SortOrder" class="form-control" /> 
                <ValidationMessage For="() => Entity.SortOrder" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactno1" class="form-label">ContactNo1:</label> 
                <InputText id="contactno1" @bind-Value="Entity.ContactNo1" class="form-control" /> 
                <ValidationMessage For="() => Entity.ContactNo1" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactno2" class="form-label">ContactNo2:</label> 
                <InputText id="contactno2" @bind-Value="Entity.ContactNo2" class="form-control" /> 
                <ValidationMessage For="() => Entity.ContactNo2" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address1" class="form-label">Address1:</label> 
                <InputText id="address1" @bind-Value="Entity.Address1" class="form-control" /> 
                <ValidationMessage For="() => Entity.Address1" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address2" class="form-label">Address2:</label> 
                <InputText id="address2" @bind-Value="Entity.Address2" class="form-control" /> 
                <ValidationMessage For="() => Entity.Address2" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email1" class="form-label">Email1:</label> 
                <InputText id="email1" @bind-Value="Entity.Email1" class="form-control" /> 
                <ValidationMessage For="() => Entity.Email1" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email2" class="form-label">Email2:</label> 
                <InputText id="email2" @bind-Value="Entity.Email2" class="form-control" /> 
                <ValidationMessage For="() => Entity.Email2" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdby" class="form-label">CreatedBy:</label> 
                <InputText id="createdby" @bind-Value="Entity.CreatedBy" class="form-control" /> 
                <ValidationMessage For="() => Entity.CreatedBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdon" class="form-label">CreatedOn:</label> 
                <InputDate id="createdon" @bind-Value="Entity.CreatedOn" class="form-control" /> 
                <ValidationMessage For="() => Entity.CreatedOn" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lasteditby" class="form-label">LastEditBy:</label> 
                <InputText id="lasteditby" @bind-Value="Entity.LastEditBy" class="form-control" /> 
                <ValidationMessage For="() => Entity.LastEditBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastediton" class="form-label">LastEditOn:</label> 
                <InputDate id="lastediton" @bind-Value="Entity.LastEditOn" class="form-control" /> 
                <ValidationMessage For="() => Entity.LastEditOn" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isarchived" class="form-label">IsArchived:</label> 
                <InputCheckbox id="isarchived" @bind-Value="Entity.IsArchived" class="form-check-input" /> 
                <ValidationMessage For="() => Entity.IsArchived" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isprivate" class="form-label">IsPrivate:</label> 
                <InputCheckbox id="isprivate" @bind-Value="Entity.IsPrivate" class="form-check-input" /> 
                <ValidationMessage For="() => Entity.IsPrivate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isactive" class="form-label">IsActive:</label> 
                <InputCheckbox id="isactive" @bind-Value="Entity.IsActive" class="form-check-input" /> 
                <ValidationMessage For="() => Entity.IsActive" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="entitytypeid" class="form-label">EntityTypeId:</label> 
                <InputNumber id="entitytypeid" @bind-Value="Entity.EntityTypeId" class="form-control" /> 
                <ValidationMessage For="() => Entity.EntityTypeId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="entitystatusid" class="form-label">EntityStatusId:</label> 
                <InputNumber id="entitystatusid" @bind-Value="Entity.EntityStatusId" class="form-control" /> 
                <ValidationMessage For="() => Entity.EntityStatusId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="businessunitid" class="form-label">BusinessUnitId:</label> 
                <InputNumber id="businessunitid" @bind-Value="Entity.BusinessUnitId" class="form-control" /> 
                <ValidationMessage For="() => Entity.BusinessUnitId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="refcityid" class="form-label">RefCityId:</label> 
                <InputNumber id="refcityid" @bind-Value="Entity.RefCityId" class="form-control" /> 
                <ValidationMessage For="() => Entity.RefCityId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/entities">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Entity Entity { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddEntity()
    {
        using var context = DbFactory.CreateDbContext();
        context.Entity.Add(Entity);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/entities");
    }
}
