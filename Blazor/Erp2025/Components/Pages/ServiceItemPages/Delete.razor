@page "/serviceitems/delete"
@using Microsoft.EntityFrameworkCore
@using Erp.Domain.Models
@inject IDbContextFactory<Erp2025.Data.Erp2025Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>ServiceItem</h2>
    <hr />
    @if (serviceitem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@serviceitem.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@serviceitem.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Remarks</dt>
            <dd class="col-sm-10">@serviceitem.Remarks</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Code</dt>
            <dd class="col-sm-10">@serviceitem.Code</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SortOrder</dt>
            <dd class="col-sm-10">@serviceitem.SortOrder</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@serviceitem.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedOn</dt>
            <dd class="col-sm-10">@serviceitem.CreatedOn</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastEditBy</dt>
            <dd class="col-sm-10">@serviceitem.LastEditBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastEditOn</dt>
            <dd class="col-sm-10">@serviceitem.LastEditOn</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsArchived</dt>
            <dd class="col-sm-10">@serviceitem.IsArchived</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsPrivate</dt>
            <dd class="col-sm-10">@serviceitem.IsPrivate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@serviceitem.IsActive</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ItemTypeId</dt>
            <dd class="col-sm-10">@serviceitem.ItemTypeId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ItemStatusId</dt>
            <dd class="col-sm-10">@serviceitem.ItemStatusId</dd>
        </dl>
        <EditForm method="post" Model="serviceitem" OnValidSubmit="DeleteServiceItem" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(serviceitem is null)">Delete</button> |
            <a href="/serviceitems">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private ServiceItem? serviceitem;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        serviceitem = await context.ServiceItem.FirstOrDefaultAsync(m => m.Id == Id);

        if (serviceitem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteServiceItem()
    {
        using var context = DbFactory.CreateDbContext();
        context.ServiceItem.Remove(serviceitem!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/serviceitems");
    }
}
