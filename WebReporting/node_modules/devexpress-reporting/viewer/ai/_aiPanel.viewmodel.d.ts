/**
* DevExpress HTML/JS Reporting (viewer\ai\_aiPanel.viewmodel.d.ts)
* Version:  24.2.5
* Build date: Feb 17, 2025
* Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { IViewModel } from '@devexpress/analytics-core/analytics-serializer-native';
import { Properties as SelectBoxOptions } from 'devextreme/ui/select_box';
import { Properties as CheckBoxOptions } from 'devextreme/ui/check_box';
import { Properties as ButtonOptions } from 'devextreme/ui/button';
export declare enum TextSourceTarget {
    Document = "document",
    Page = "page",
    Selection = "selection"
}
export interface IAIPanelViewModel extends IViewModel {
    buttons: {
        translateTextButton: ButtonOptions;
        summarizeTextButton: ButtonOptions;
        copyResultButton: ButtonOptions;
    };
    proceedForAllCheckBoxOptions: CheckBoxOptions;
    languageSelectBoxOptions: SelectBoxOptions;
    targetSelectBoxOptions: SelectBoxOptions;
    pageSelectBoxOptions: SelectBoxOptions;
    getSelectBoxOptions: (options: SelectBoxOptions, element: HTMLElement) => SelectBoxOptions;
    aiProcessingResultText: string;
    warningTextLimitPopupVisible: boolean;
    resultVisible: boolean;
    pageSelectBoxVisible: boolean;
    targetLanguageText: string;
    targetContentText: string;
    pageSelectText: string;
    textProcessingResultHeaderText: string;
    proceedNextChunkButtonText: string;
    cancelChunkedOperationButtonText: string;
    aiPanelHeaderLabel: string;
    limitExceededWarningMsg: string;
    proceedNextButtonClick: (e: any) => void;
    cancelProcessButtonClick: (e: any) => void;
    copyText: (data: any, event: any) => void;
}
export declare function createViewModel(this: any, viewModel: IViewModel): IAIPanelViewModel;
