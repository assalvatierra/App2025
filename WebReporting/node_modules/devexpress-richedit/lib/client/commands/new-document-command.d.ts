import { CommandBase, CommandSimpleOptions } from '../../common/commands/command-base';
import { SimpleCommandState } from '../../common/commands/command-states';
import { ICommandState } from '../../common/commands/i-command';
export declare class NewDocumentCommand extends CommandBase<SimpleCommandState> {
    getState(): SimpleCommandState;
    executeCore(_state: SimpleCommandState, _options: CommandSimpleOptions<string>): boolean;
    static newDocumentInner<T extends ICommandState>(this: CommandBase<T>): void;
    isEnabled(): boolean;
    isEnabledInClosedDocument(): boolean;
    isEnabledInReadOnlyMode(): boolean;
}
