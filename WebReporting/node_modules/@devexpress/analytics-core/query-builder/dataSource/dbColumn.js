/**
* DevExpress Analytics (query-builder\dataSource\dbColumn.js)
* Version:  24.2.5
* Build date: Feb 17, 2025
* Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { DotnetTypes } from '../../core/internal/_dotnetTypesMapper';
export var DBColumnType;
(function (DBColumnType) {
    DBColumnType[DBColumnType["Unknown"] = 0] = "Unknown";
    DBColumnType[DBColumnType["Boolean"] = 1] = "Boolean";
    DBColumnType[DBColumnType["Byte"] = 2] = "Byte";
    DBColumnType[DBColumnType["SByte"] = 3] = "SByte";
    DBColumnType[DBColumnType["Char"] = 4] = "Char";
    DBColumnType[DBColumnType["Decimal"] = 5] = "Decimal";
    DBColumnType[DBColumnType["Double"] = 6] = "Double";
    DBColumnType[DBColumnType["Single"] = 7] = "Single";
    DBColumnType[DBColumnType["Int32"] = 8] = "Int32";
    DBColumnType[DBColumnType["UInt32"] = 9] = "UInt32";
    DBColumnType[DBColumnType["Int16"] = 10] = "Int16";
    DBColumnType[DBColumnType["UInt16"] = 11] = "UInt16";
    DBColumnType[DBColumnType["Int64"] = 12] = "Int64";
    DBColumnType[DBColumnType["UInt64"] = 13] = "UInt64";
    DBColumnType[DBColumnType["String"] = 14] = "String";
    DBColumnType[DBColumnType["DateTime"] = 15] = "DateTime";
    DBColumnType[DBColumnType["Guid"] = 16] = "Guid";
    DBColumnType[DBColumnType["TimeSpan"] = 17] = "TimeSpan";
    DBColumnType[DBColumnType["ByteArray"] = 18] = "ByteArray";
})(DBColumnType || (DBColumnType = {}));
export class DBColumn {
    constructor(model) {
        this.name = model['Name'];
        this.type = model['ColumnType'];
        this.size = model['Size'];
    }
    static GetType(dbColumnType) {
        switch (dbColumnType) {
            case DBColumnType.Boolean:
                return DotnetTypes.SystemBoolean;
            case DBColumnType.Byte:
                return DotnetTypes.SystemByte;
            case DBColumnType.SByte:
                return DotnetTypes.SystemSByte;
            case DBColumnType.Char:
                return DotnetTypes.SystemChar;
            case DBColumnType.Decimal:
                return DotnetTypes.SystemDecimal;
            case DBColumnType.Double:
                return DotnetTypes.SystemDouble;
            case DBColumnType.Single:
                return DotnetTypes.SystemSingle;
            case DBColumnType.Int32:
                return DotnetTypes.SystemInt32;
            case DBColumnType.UInt32:
                return DotnetTypes.SystemUInt32;
            case DBColumnType.Int16:
                return DotnetTypes.SystemInt16;
            case DBColumnType.UInt16:
                return DotnetTypes.SystemUInt16;
            case DBColumnType.Int64:
                return DotnetTypes.SystemInt64;
            case DBColumnType.UInt64:
                return DotnetTypes.SystemUInt64;
            case DBColumnType.String:
                return DotnetTypes.SystemString;
            case DBColumnType.DateTime:
                return DotnetTypes.SystemDateTime;
            case DBColumnType.Guid:
                return DotnetTypes.SystemGuid;
            case DBColumnType.TimeSpan:
                return DotnetTypes.SystemTimeSpan;
            case DBColumnType.ByteArray:
                return DotnetTypes.SystemBiteArray;
            default:
                return DotnetTypes.SystemObject;
        }
    }
    static GetSpecific(type) {
        switch (type) {
            case DotnetTypes.SystemBoolean:
                return 'Bool';
            case DotnetTypes.SystemByte:
            case DotnetTypes.SystemSByte:
            case DotnetTypes.SystemInt16:
            case DotnetTypes.SystemUInt16:
            case DotnetTypes.SystemInt32:
            case DotnetTypes.SystemUInt32:
            case DotnetTypes.SystemInt64:
            case DotnetTypes.SystemUInt64:
                return 'Integer';
            case DotnetTypes.SystemChar:
            case DotnetTypes.SystemGuid:
            case 'System.ByteArray':
            case DotnetTypes.SystemString:
                return 'String';
            case DotnetTypes.SystemDouble:
            case DotnetTypes.SystemSingle:
            case DotnetTypes.SystemDecimal:
                return 'Float';
            case DotnetTypes.SystemDateTime:
            case DotnetTypes.SystemTimeSpan:
            case DotnetTypes.SystemDateOnly:
                return 'Date';
            case DotnetTypes.SystemTimeOnly:
                return 'Time';
            default:
                return 'String';
        }
    }
}
