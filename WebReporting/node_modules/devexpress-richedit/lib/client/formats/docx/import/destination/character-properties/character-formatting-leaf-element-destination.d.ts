import { MaskedCharacterProperties } from '../../../../../../common/model/character/character-properties';
import { ICharacterPropertyDescriptor } from '../../../../../../common/model/character/character-property-descriptor';
import { Data } from '../../data';
import { LeafElementDestination } from '../destination';
export declare abstract class CharacterFormattingLeafElementDestination<T> extends LeafElementDestination {
    protected readonly characterProperties: MaskedCharacterProperties;
    constructor(data: Data, characterProperties: MaskedCharacterProperties);
    setProperty(newValue: T): void;
    protected abstract getDescriptor(): ICharacterPropertyDescriptor<T>;
}
