/**
* DevExpress Analytics (core\internal\requestManager.d.ts)
* Version:  24.2.5
* Build date: Feb 17, 2025
* Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { IAjaxSetup } from './_ajaxSetup';
import { IFetchSetup } from './_fetchSetup';
import { IRequestManager, IRequestManagerSettings } from './_requestManager';
export declare enum RequestContentType {
    Json = "application/json",
    FormUrlEncoded = "application/x-www-form-urlencoded"
}
export declare let _requestContentType: string;
interface IRequestManagerSetup {
    ajaxSetup?: IAjaxSetup;
    fetchSetup?: IFetchSetup;
}
export declare function encodeURIExtended(str: string): string;
export declare const PrepareRequestArgs: (args: any, encode?: boolean, stringify?: boolean) => any;
export declare const GetRequestBody: (data: any) => {};
export declare const requestManager: {
    getInstance: (requestManagerSetup?: IRequestManagerSetup) => IRequestManager<JQueryAjaxSettings | IRequestManagerSettings>;
    _initialize: (requestManagerSetup?: IRequestManagerSetup) => void;
    _setRequestHeader: (settings: JQueryAjaxSettings | IRequestManagerSettings) => void;
    _setRequestContentType: (contentType: string) => void;
    initialize: (requestManagerInstance?: IRequestManager<JQueryAjaxSettings | IRequestManagerSettings>) => void;
    getRequestContentType: () => RequestContentType;
};
export declare function _isFetchConfigured(): boolean;
export {};
