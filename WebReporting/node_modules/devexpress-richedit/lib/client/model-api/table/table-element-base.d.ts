import { SubDocument } from '../../../common/model/sub-document';
import { IProcessor } from '../../../common/processor';
import { ModelManipulator } from '../../../common/model/manipulators/model-manipulator';
import { IHistory } from '../../../common/model/history/base/i-history';
import { TableWidthUnit } from '../../../common/model/tables/secondary-structures/table-units';
import { ShadingInfo } from '../../../common/model/shadings/shading-info';
import { ColorModelInfo } from '../../../common/model/color/color-model-info';
import { ParagraphAlignment } from '../../../common/model/paragraph/paragraph-properties';
import { TableCell } from '../../../common/model/tables/main-structures/table-cell';
import { TableCellMargins } from '../../../common/model/tables/secondary-structures/table-base-structures';
import { TablePosition } from '../../../common/model/tables/main-structures/table';
import { TableBordersBase } from '../../../common/model/borders/table-border-base';
import { ArgsCheckerParameterIndex } from '../api-utils/parameter-checker';
import { TableWidth } from './types';
import { TableContentHorizontalAlignmentApi, TableContentVerticalAlignmentApi } from './enums';
import { TableBorderApi, TableBordersBaseApi } from './table-borders';
import { IMargins, MarginsApi } from '../size';
export declare abstract class TableElementBase {
    protected _processor: IProcessor;
    protected _subDocument: SubDocument;
    protected _modelManipulator: ModelManipulator;
    protected _history: IHistory;
    constructor(processor: IProcessor, subDocument: SubDocument);
    protected _validateWidth(width: TableWidth): void;
    protected _getWidth(preferredWidth: TableWidthUnit): TableWidth;
    protected _getModelWidth(width: TableWidth): TableWidthUnit;
    protected _getBackgroundColor(shadingInfo: ShadingInfo): string;
    protected _validateContentHorizontalAlignment(contentHorizontalAlignment: TableContentHorizontalAlignmentApi): void;
    protected _getStartHorizontalAlignment(cell: TableCell): ParagraphAlignment;
    protected _setCellHorizontalAlignment(cell: TableCell, value: TableContentHorizontalAlignmentApi): void;
    protected _validateContentVerticalAlignment(contentVerticalAlignment: TableContentVerticalAlignmentApi): void;
    protected _setCellVerticalAlignment(tablePosition: TablePosition, value: TableContentVerticalAlignmentApi): void;
    protected _validateBorders<T extends TableBordersBase, U>(factory: {
        new (): T;
    }, borders: U): T;
    protected _validateColor(value: string, parameterIndex: ArgsCheckerParameterIndex, parameterName: string): ColorModelInfo;
    protected _getBordersApi<T extends TableBordersBaseApi, U>(factory: {
        new (...args: TableBorderApi[]): T;
    }, borders: U): T;
    protected _validateMargins(margins: IMargins, parameterName: string): TableCellMargins;
    protected _getMarginsApi(margins: TableCellMargins): MarginsApi;
}
