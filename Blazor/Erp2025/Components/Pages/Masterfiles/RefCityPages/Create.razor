@page "/refcities/create"
@using Microsoft.EntityFrameworkCore
@using Erp.Domain.Models
@inject IDbContextFactory<Erp2025.Data.Erp2025Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>RefCity</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="RefCity" OnValidSubmit="AddRefCity" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="RefCity.Name" class="form-control" /> 
                <ValidationMessage For="() => RefCity.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="RefCity.Description" class="form-control" /> 
                <ValidationMessage For="() => RefCity.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="remarks" class="form-label">Remarks:</label> 
                <InputText id="remarks" @bind-Value="RefCity.Remarks" class="form-control" /> 
                <ValidationMessage For="() => RefCity.Remarks" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="code" class="form-label">Code:</label> 
                <InputText id="code" @bind-Value="RefCity.Code" class="form-control" /> 
                <ValidationMessage For="() => RefCity.Code" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="sortorder" class="form-label">SortOrder:</label> 
                <InputNumber id="sortorder" @bind-Value="RefCity.SortOrder" class="form-control" /> 
                <ValidationMessage For="() => RefCity.SortOrder" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="countryid" class="form-label">CountryId:</label> 
                <InputNumber id="countryid" @bind-Value="RefCity.CountryId" class="form-control" /> 
                <ValidationMessage For="() => RefCity.CountryId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="refcountryid" class="form-label">RefCountryId:</label> 
                <InputNumber id="refcountryid" @bind-Value="RefCity.RefCountryId" class="form-control" /> 
                <ValidationMessage For="() => RefCity.RefCountryId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/refcities">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private RefCity RefCity { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddRefCity()
    {
        using var context = DbFactory.CreateDbContext();
        context.RefCity.Add(RefCity);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/refcities");
    }
}
