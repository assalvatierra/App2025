import { SubDocument } from "../../../../../../common/model/sub-document";
import { Data } from "../../data";
import { RelationCollectionExporter } from "../relations/relation-collection";
import { BaseSubDocumentExporter } from "./base-sub-document";
declare abstract class NoteExporter extends BaseSubDocumentExporter {
    private relsFilePath;
    private fileName;
    abstract get childElement(): string;
    abstract get noteToIdMap(): Map<SubDocument, number>;
    abstract get contentType(): string;
    constructor(data: Data, fileName: string);
    protected createRelationExporter(): RelationCollectionExporter;
    protected isMainContent(): boolean;
    protected fillWriterCore(): void;
    private exportNotes;
    private exportNoteContent;
    private pushSubDocument;
    private popSubDocument;
    protected abstract addRels(fileName: string): any;
}
export declare class FootNoteExporter extends NoteExporter {
    constructor(data: Data);
    get rootElement(): string;
    get childElement(): string;
    get contentType(): string;
    get noteToIdMap(): Map<SubDocument, number>;
    protected addRels(fileName: string): void;
}
export declare class EndNoteExporter extends NoteExporter {
    constructor(data: Data);
    get rootElement(): string;
    get childElement(): string;
    get contentType(): string;
    get noteToIdMap(): Map<SubDocument, number>;
    protected addRels(fileName: string): void;
}
export {};
